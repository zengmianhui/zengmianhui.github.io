[
  {
    "id": 2110354,
    "slug": "ich5xw",
    "title": "windows之常用设置及安全管理",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [windows]<br />categories: windows\n\n---\n\n\n<a name=\"T0vEc\"></a>\n# 参考链接\n[Windows Server 2008 R2远程协助选项灰色——百度经验@☆落墨云烟★](https://jingyan.baidu.com/article/f3e34a12a75dd5f5ea653570.html)\n<a name=\"TSWGu\"></a>\n# \n<a name=\"wTlYJ\"></a>\n# windows之常用设置及安全管理\n<a name=\"8C946\"></a>\n## \n<a name=\"SYxPo\"></a>\n## [Windows Server 2008 R2允许远程协助选项灰色](https://jingyan.baidu.com/article/f3e34a12a75dd5f5ea653570.html)\n<a name=\"CWEa2\"></a>\n### 方法一\n在“服务器管理器——功能”右键选择“添加功能”，勾选“远程协助”，点击“下一步”，等待安装完成即可<br />![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1563026746618-4c1ba175-f1cb-471a-8400-b6cfc0f722ab.png#align=left&display=inline&height=580&name=%E5%9B%BE%E7%89%87.png&originHeight=580&originWidth=478&size=28044&status=done&width=478)<br />效果如下<br />![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1563026893036-0fce47bb-6323-4c38-8b97-b8d6768e8188.png#align=left&display=inline&height=464&name=%E5%9B%BE%E7%89%87.png&originHeight=464&originWidth=407&size=10124&status=done&width=407)\n<a name=\"nojxo\"></a>\n### 方法2\n“控制面板——启用或者关闭windows功能”，一直点击“下一步”直到“功能”，选择“远程协助”，点击“安装”，等待时间即可。\n\n![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1563027106865-2db77639-753f-402d-9164-f66a049bb375.png#align=left&display=inline&height=573&name=%E5%9B%BE%E7%89%87.png&originHeight=573&originWidth=802&size=35054&status=done&width=802)\n<a name=\"KVlb2\"></a>\n## 文章还在不停更新中\n\n\n",
    "body_draft": "",
    "body_html": "<p>tags: [windows<span></span>]</p><p>categories: windows</p><hr /><p><br /></p><h1 id=\"T0vEc\">参考链接</h1><p><a href=\"https://jingyan.baidu.com/article/f3e34a12a75dd5f5ea653570.html\" target=\"_blank\">Windows Server 2008 R2远程协助选项灰色——百度经验@☆落墨云烟★</a></p><h1 id=\"TSWGu\"></h1><h1 id=\"wTlYJ\">windows之常用设置及安全管理</h1><h2 id=\"8C946\"></h2><h2 id=\"SYxPo\"><a href=\"https://jingyan.baidu.com/article/f3e34a12a75dd5f5ea653570.html\" target=\"_blank\">Windows Server 2008 R2允许远程协助选项灰色</a></h2><h3 id=\"CWEa2\">方法一</h3><p>在“服务器管理器——功能”右键选择“添加功能”，勾选“远程协助”，点击“下一步”，等待安装完成即可</p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1563026746618-4c1ba175-f1cb-471a-8400-b6cfc0f722ab.png#align=left&amp;display=inline&amp;height=580&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=580&amp;originWidth=478&amp;size=28044&amp;status=done&amp;width=478\" style=\"max-width: 600px; width: 478px;\" /></p><p>效果如下</p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1563026893036-0fce47bb-6323-4c38-8b97-b8d6768e8188.png#align=left&amp;display=inline&amp;height=464&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=464&amp;originWidth=407&amp;size=10124&amp;status=done&amp;width=407\" style=\"max-width: 600px; width: 407px;\" /></p><h3 id=\"nojxo\">方法2</h3><p>“控制面板——启用或者关闭windows功能”，一直点击“下一步”直到“功能”，选择“远程协助”，点击“安装”，等待时间即可。<br /></p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1563027106865-2db77639-753f-402d-9164-f66a049bb375.png#align=left&amp;display=inline&amp;height=573&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=573&amp;originWidth=802&amp;size=35054&amp;status=done&amp;width=802\" style=\"max-width: 600px; width: 802px;\" /></p><h2 id=\"KVlb2\">文章还在不停更新中<br /></h2><p><br /></p><p><br /></p>",
    "body_lake": "<!doctype lake><p>tags: [windows<span></span>]</p><p>categories: windows<cursor /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22ta1WY%22%7D\"></card><p><br /></p><h1 id=\"T0vEc\">参考链接</h1><p><a href=\"https://jingyan.baidu.com/article/f3e34a12a75dd5f5ea653570.html\" target=\"_blank\">Windows Server 2008 R2远程协助选项灰色——百度经验@☆落墨云烟★</a></p><h1 id=\"TSWGu\"></h1><h1 id=\"wTlYJ\">windows之常用设置及安全管理</h1><h2 id=\"8C946\"></h2><h2 id=\"SYxPo\"><a href=\"https://jingyan.baidu.com/article/f3e34a12a75dd5f5ea653570.html\" target=\"_blank\">Windows Server 2008 R2允许远程协助选项灰色</a></h2><h3 id=\"CWEa2\">方法一</h3><p>在“服务器管理器——功能”右键选择“添加功能”，勾选“远程协助”，点击“下一步”，等待安装完成即可</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1563026746618-4c1ba175-f1cb-471a-8400-b6cfc0f722ab.png%22%2C%22originWidth%22%3A478%2C%22originHeight%22%3A580%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A28044%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A478%2C%22height%22%3A580%7D\"></card></p><p>效果如下</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1563026893036-0fce47bb-6323-4c38-8b97-b8d6768e8188.png%22%2C%22originWidth%22%3A407%2C%22originHeight%22%3A464%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A10124%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A407%2C%22height%22%3A464%7D\"></card></p><h3 id=\"nojxo\">方法2</h3><p>“控制面板——启用或者关闭windows功能”，一直点击“下一步”直到“功能”，选择“远程协助”，点击“安装”，等待时间即可。<br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1563027106865-2db77639-753f-402d-9164-f66a049bb375.png%22%2C%22originWidth%22%3A802%2C%22originHeight%22%3A573%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A35054%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A802%2C%22height%22%3A573%7D\"></card></p><h2 id=\"KVlb2\">文章还在不停更新中<br /></h2><p><br /></p><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-13T14:16:51.000Z",
    "deleted_at": null,
    "created_at": "2019-07-13T14:02:13.000Z",
    "updated_at": "2019-07-13T14:16:51.000Z",
    "published_at": "2019-07-13T14:16:51.000Z",
    "first_published_at": "2019-07-13T14:16:51.000Z",
    "word_count": 150,
    "cover": null,
    "description": "tags: [windows]categories: windows参考链接Windows Server 2008 R2远程协助选项灰色——百度经验@☆落墨云烟★windows之常用设置及安全管理Windows Server 2008 R2允许远程协助选项灰色方法一在“服务器管理器——功能”右...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2065987,
    "slug": "hoch54",
    "title": "无标题",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-08T09:41:21.000Z",
    "deleted_at": null,
    "created_at": "2019-07-08T09:41:21.000Z",
    "updated_at": "2019-07-08T09:41:21.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2065986,
    "slug": "dztlr2",
    "title": "无标题",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-08T09:41:20.000Z",
    "deleted_at": null,
    "created_at": "2019-07-08T09:41:20.000Z",
    "updated_at": "2019-07-08T09:41:21.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2065984,
    "slug": "ir281l",
    "title": "无标题",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-08T09:41:24.000Z",
    "deleted_at": null,
    "created_at": "2019-07-08T09:41:13.000Z",
    "updated_at": "2019-07-08T09:41:24.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2065976,
    "slug": "ehuch7",
    "title": "无标题",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-08T09:41:03.000Z",
    "deleted_at": null,
    "created_at": "2019-07-08T09:40:11.000Z",
    "updated_at": "2019-07-08T09:41:03.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "参考链接正文",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2023594,
    "slug": "eo3pyx",
    "title": "java之异常分类及处理",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-13T13:33:27.000Z",
    "deleted_at": null,
    "created_at": "2019-07-02T08:13:02.000Z",
    "updated_at": "2019-07-13T13:33:27.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "java之异常分类及处理概述异常本身就多类型，也很难总结完全的分析处理方式的，但是在实际工作中，看到很多同事在处理报错，不会找准错误定位，只看报错描述，异常也是很多面试经常考核一点。异常分类java.lang.Error异常问题总结Exception in thread &quot;main&...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 2022998,
    "slug": "tfnv65",
    "title": "开发工具之arthas命令",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [开发工具,arthas]<br />categories: 开发工具\n\n---\n\n\n<a name=\"tSiLs\"></a>\n# 开发工具之arthas命令\n<a name=\"N1m6c\"></a>\n# 参考链接\n[arthas官方文档——arthas](https://alibaba.github.io/arthas/)<br />[arthas官方在线模拟器教程——arths](https://alibaba.github.io/arthas/arthas-tutorials?language=cn)<br />\n<a name=\"shuQ1\"></a>\n# 概述\n> 当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决： <br />\n> 1. 这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？\n> 1. 我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？\n> 1. 遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？\n> 1. 线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！\n> 1. 是否有一个全局视角来查看系统的运行状况？\n> 1. 有什么办法可以监控到JVM的实时运行状态？\n> \nArthas支持JDK 6+，支持Linux/Mac/Winodws，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。\n\n<a name=\"UxmlN\"></a>\n## 安装及运行\n<a name=\"hHWYN\"></a>\n### 安装\nwindows版本需要从官方下载一个压缩包，解压即可<br />![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1562053000011-6b93ae1e-c3eb-4851-8e60-5a4e0f2800ef.png#align=left&display=inline&height=336&name=%E5%9B%BE%E7%89%87.png&originHeight=336&originWidth=748&size=22442&status=done&width=748)\n<a name=\"uScch\"></a>\n### 运行\n可以使用默认提供的`as.bat`文件，不过需要手动输入JVM进程的pid，也可以采用我下面自己写的，保存为bat批处理文件，只需知道pid，运行选择数字即可<br />\n\n```powershell\n:A\njava -jar arthas-boot.jar\ngoto A\npause\n```\n\n实际运行效果，下图“org.apache.catalina.startup.bootsrap”是我现在的tomcat，因为只运行了一个JVM，非常好选择，直接输入1进入arthas仪表盘即可。<br />![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1562053490019-4276d91b-15fb-45a5-b981-23772fa31bcf.png#align=left&display=inline&height=429&name=%E5%9B%BE%E7%89%87.png&originHeight=429&originWidth=667&size=6993&status=done&width=667)<br />![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1562053592838-41334dd7-b780-4956-9663-31c1f5795661.png#align=left&display=inline&height=481&name=%E5%9B%BE%E7%89%87.png&originHeight=481&originWidth=731&size=16430&status=done&width=731)\n\n<a name=\"DorZF\"></a>\n## 命令行\n<a name=\"MCK8S\"></a>\n### redefine重新加载class文件到JVM中\n\n```powershell\nredefine D:/tomcat/webapps/test/WEB-INF/classes/com/kingzheng/fsjscx/util/JSON.class\n```\n\n1. redefine只能重新加载已经存在JVM内存的中class，没有相应的class时，会报错\n\n![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1562053771798-c118b453-6e64-4560-a068-eab5d572c1a8.png#align=left&display=inline&height=136&name=%E5%9B%BE%E7%89%87.png&originHeight=136&originWidth=699&size=3512&status=done&width=699)\n",
    "body_draft": "",
    "body_html": "<p>tags: [开发工具,<span>arthas</span>]</p><p>categories: 开发工具</p><p><br /></p><hr /><p><br /></p><h1 id=\"tSiLs\">开发工具之arthas命令</h1><h1 id=\"N1m6c\">参考链接</h1><p><a href=\"https://alibaba.github.io/arthas/\" target=\"_blank\">arthas官方文档——arthas</a></p><p><a href=\"https://alibaba.github.io/arthas/arthas-tutorials?language=cn\" target=\"_blank\">arthas官方在线模拟器教程——arths</a><br /></p><h1 id=\"shuQ1\">概述</h1><blockquote><p>当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决： <br /></p><ol><li>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</li><li>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况？</li><li>有什么办法可以监控到JVM的实时运行状态？</li></ol><p>Arthas支持JDK 6+，支持Linux/Mac/Winodws，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。</p></blockquote><h2 id=\"UxmlN\">安装及运行</h2><h3 id=\"hHWYN\">安装</h3><p>windows版本需要从官方下载一个压缩包，解压即可</p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1562053000011-6b93ae1e-c3eb-4851-8e60-5a4e0f2800ef.png#align=left&amp;display=inline&amp;height=336&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=336&amp;originWidth=748&amp;size=22442&amp;status=done&amp;width=748\" style=\"max-width: 600px; width: 748px;\" /></p><h3 id=\"uScch\">运行</h3><p>可以使用默认提供的`as.bat`文件，不过需要手动输入JVM进程的pid，也可以采用我下面自己写的，保存为bat批处理文件，只需知道pid，运行选择数字即可<br /></p><p><br /></p><pre data-lang=\"powershell\"><code>:A\njava -jar arthas-boot.jar\ngoto A\npause</code></pre><p><br /></p><p>实际运行效果，下图“org.apache.catalina.startup.bootsrap”是我现在的tomcat，因为只运行了一个JVM，非常好选择，直接输入1进入arthas仪表盘即可。</p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1562053490019-4276d91b-15fb-45a5-b981-23772fa31bcf.png#align=left&amp;display=inline&amp;height=429&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=429&amp;originWidth=667&amp;size=6993&amp;status=done&amp;width=667\" style=\"max-width: 600px; width: 667px;\" /></p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1562053592838-41334dd7-b780-4956-9663-31c1f5795661.png#align=left&amp;display=inline&amp;height=481&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=481&amp;originWidth=731&amp;size=16430&amp;status=done&amp;width=731\" style=\"max-width: 600px; width: 731px;\" /></p><p><br /></p><h2 id=\"DorZF\">命令行</h2><h3 id=\"MCK8S\">redefine重新加载class文件到JVM中</h3><p><br /></p><pre data-lang=\"powershell\"><code>redefine D:/tomcat/webapps/test/WEB-INF/classes/com/kingzheng/fsjscx/util/JSON.class</code></pre><p><br /></p><ol start=\"1\"><li>redefine只能重新加载已经存在JVM内存的中class，没有相应的class时，会报错</li></ol><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1562053771798-c118b453-6e64-4560-a068-eab5d572c1a8.png#align=left&amp;display=inline&amp;height=136&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=136&amp;originWidth=699&amp;size=3512&amp;status=done&amp;width=699\" style=\"max-width: 600px; width: 699px;\" /></p>",
    "body_lake": "<!doctype lake><p>tags: [开发工具,<span>arthas</span>]</p><p>categories: 开发工具</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22ta1WY%22%7D\"></card><p><br /></p><h1 id=\"tSiLs\">开发工具之arthas命令</h1><h1 id=\"N1m6c\">参考链接</h1><p><a href=\"https://alibaba.github.io/arthas/\" target=\"_blank\">arthas官方文档——arthas</a></p><p><a href=\"https://alibaba.github.io/arthas/arthas-tutorials?language=cn\" target=\"_blank\">arthas官方在线模拟器教程——arths</a><br /></p><h1 id=\"shuQ1\">概述</h1><blockquote><p>当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决： <br /></p><ol><li>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</li><li>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况？</li><li>有什么办法可以监控到JVM的实时运行状态？</li></ol><p>Arthas支持JDK 6+，支持Linux/Mac/Winodws，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。</p></blockquote><h2 id=\"UxmlN\">安装及运行</h2><h3 id=\"hHWYN\">安装</h3><p>windows版本需要从官方下载一个压缩包，解压即可</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1562053000011-6b93ae1e-c3eb-4851-8e60-5a4e0f2800ef.png%22%2C%22originWidth%22%3A748%2C%22originHeight%22%3A336%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A22442%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A748%2C%22height%22%3A336%7D\"></card></p><h3 id=\"uScch\">运行</h3><p>可以使用默认提供的`as.bat`文件，不过需要手动输入JVM进程的pid，也可以采用我下面自己写的，保存为bat批处理文件，只需知道pid，运行选择数字即可<br /></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22%3AA%5Cnjava%20-jar%20arthas-boot.jar%5Cngoto%20A%5Cnpause%22%2C%22id%22%3A%224p8QS%22%7D\"></card><p><br /></p><p>实际运行效果，下图“org.apache.catalina.startup.bootsrap”是我现在的tomcat，因为只运行了一个JVM，非常好选择，直接输入1进入arthas仪表盘即可。</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1562053490019-4276d91b-15fb-45a5-b981-23772fa31bcf.png%22%2C%22originWidth%22%3A667%2C%22originHeight%22%3A429%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A6993%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A667%2C%22height%22%3A429%7D\"></card></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1562053592838-41334dd7-b780-4956-9663-31c1f5795661.png%22%2C%22originWidth%22%3A731%2C%22originHeight%22%3A481%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A16430%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A731%2C%22height%22%3A481%7D\"></card></p><p><br /></p><h2 id=\"DorZF\">命令行</h2><h3 id=\"MCK8S\">redefine重新加载class文件到JVM中</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22redefine%20D%3A%2Ftomcat%2Fwebapps%2Ftest%2FWEB-INF%2Fclasses%2Fcom%2Fkingzheng%2Ffsjscx%2Futil%2FJSON.class%22%2C%22id%22%3A%22dQcsb%22%7D\"></card><p><br /></p><ol start=\"1\"><li>redefine只能重新加载已经存在JVM内存的中class，没有相应的class时，会报错<cursor /></li></ol><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1562053771798-c118b453-6e64-4560-a068-eab5d572c1a8.png%22%2C%22originWidth%22%3A699%2C%22originHeight%22%3A136%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A3512%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A699%2C%22height%22%3A136%7D\"></card></p>",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-02T08:30:30.000Z",
    "deleted_at": null,
    "created_at": "2019-07-02T07:25:34.000Z",
    "updated_at": "2019-07-02T08:30:30.000Z",
    "published_at": "2019-07-02T08:00:48.000Z",
    "first_published_at": "2019-07-02T08:00:48.000Z",
    "word_count": 451,
    "cover": null,
    "description": "tags: [开发工具,arthas]categories: 开发工具开发工具之arthas命令参考链接arthas官方文档——arthasarthas官方在线模拟器教程——arths概述当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决： 这个类从哪个 jar 包加载的？为什么会报...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1916747,
    "slug": "nui80z",
    "title": "使用Builder设计模式，设计ToolBar",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [设计模式,mvp,android设计模式]<br />categories: 设计模式\n\n---\n\n\n<a name=\"PLZoY\"></a>\n# 使用Builder设计模式，设计ToolBar\n<a name=\"nO5mk\"></a>\n## Builder设计模式解析\nandroid也有不地方采用了Builder设计模式的，比如NotificationCompat.Builder和AlertDialog.Builder就采用了Builder的设计模式\n\n<a name=\"EhCjH\"></a>\n### 最典型的代码示例\n<a name=\"4toIJ\"></a>\n#### NotificationCompat.Builder\n\n```java\nNotificationCompat.Builder mBuilder =\n        new NotificationCompat.Builder(this)\n        .setSmallIcon(R.drawable.notification_icon)\n        .setContentTitle(\"My notification\")\n        .setContentText(\"Hello World!\");\n// Creates an explicit intent for an Activity in your app\nIntent resultIntent = new Intent(this, ResultActivity.class);\n\n// The stack builder object will contain an artificial back stack for the\n// started Activity.\n// This ensures that navigating backward from the Activity leads out of\n// your application to the Home screen.\nTaskStackBuilder stackBuilder = TaskStackBuilder.create(this);\n// Adds the back stack for the Intent (but not the Intent itself)\nstackBuilder.addParentStack(ResultActivity.class);\n// Adds the Intent that starts the Activity to the top of the stack\nstackBuilder.addNextIntent(resultIntent);\nPendingIntent resultPendingIntent =\n        stackBuilder.getPendingIntent(\n            0,\n            PendingIntent.FLAG_UPDATE_CURRENT\n        );\nmBuilder.setContentIntent(resultPendingIntent);\nNotificationManager mNotificationManager =\n    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n// mId allows you to update the notification later on.\nmNotificationManager.notify(mId, mBuilder.build());\n```\n\n<a name=\"qoIBp\"></a>\n#### AlertDialog.Builder\n\n```java\nAlertDialog.Builder builder2=new AlertDialog.Builder(\ngetActivity(),R.style.AppTheme_NoActionBar);\n\n        builder2.setTitle(\"警告\")\n        .setMessage(\"你确定删除吗\")\n\t\tnew DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog,\n             int which) {\n                ToastUtil.showToast(getActivity(),\"你点击了取消\");\n            }\n        })\n         .setPositiveButton(\"确定\", \n         new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, \n                    int which) {\n                        ToastUtil.showToast(getActivity(),\n                        \"你点击了确定\");\n                    }\n          }) .create().show();\n```\n\n<!--more-->\n<a name=\"Abool\"></a>\n### Builder设计模式的特点\n<a name=\"PBxbY\"></a>\n#### 参数化\nAlertDialog.Builder里面会实例一个AlertController.AlertParams，里面包含大部分，创建AlertDialog的参数，实现功能的参数化\n\n```java\npublic Builder(Context context, int themeResId) {\n\n P = new AlertController.AlertParams(new ContextThemeWrapper(context, resolveDialogTheme(context, themeResId)));\n        }\n```\n\n<a name=\"uQJkb\"></a>\n#### 可维护性强\n由于Builder设计模式的参数，达到功能的多变，可维护性就变得很强<br />例如：可以 调用setMessage(\"你确定删除吗\")，也可以去掉\n<a name=\"rxztf\"></a>\n## ToolBar的设计，抽象化\n\n<a name=\"3dhnt\"></a>\n### 接口抽象toolbar的规范public interface INavigation\n\n```java\n/**\n * 所有Toolbar的规范\n * 抽象一个Toolbar\n * \n * Created by 辉神 on 2016/8/10.\n */\n\npublic interface INavigation {\n    /**\n     * 定义布局（返回布局id）\n     * @return\n     */\n    public int bindLayoutId();\n\n    /**\n     * 创建和绑定布局\n     */\n    public void build();\n}\n```\n\n<a name=\"9uiSL\"></a>\n### 抽象并实现INavigation——public abstract class AbsNavigation\n\n```java\n/**\n * 再次抽象Toolbar\n * -只要是app的开发，都会有布局的创建和绑定\n * -再次抽象，是为了，下次使用时，不用再次创建布局和绑定\n * Created by 辉神 on 2016/8/10.\n */\n\npublic abstract class AbsNavigation<P extends AbsNavigation.NavigationParams> implements INavigation {\n    /**\n     *     设置一个默认LayoutId，默认为0\n     */\n    private static final  int DEFAULT_LAYOUT_ID=0;\n    private P params;\n    private View contentView;\n\n    public AbsNavigation(P params) {\n        this.params = params;\n    }\n\n    public P getParams() {\n        return  params;\n    }\n\n    @Override\n    public int bindLayoutId() {\n        return DEFAULT_LAYOUT_ID;\n    }\n\n    @Override\n    public void build() {\n        //创建和绑定布局\n        if (contentView==null)\n        contentView = bindParent(bindLayoutId(), ((NavigationParams)getParams()).parent);\n    }\n\n    /**\n     * 方便子类使用\n     * @param id\n     * @return\n     */\n    public View findLayoutById(int id){\n        return contentView!=null?contentView.findViewById(id):null;\n    }\n    public String getString(int id){\n        return contentView.getContext().getResources().getString(id);\n    }\n\n    public View bindParent(int id, ViewGroup parent) {\n        //先要判断这个id是否为0\n        if (id==DEFAULT_LAYOUT_ID){\n            return null;\n        }\n        View childView = ((NavigationParams)getParams()).inflater.inflate(id, parent,false);\n        return bindParent(childView,parent);\n    }\n\n    public View bindParent(View childView, ViewGroup parent) {\n        ViewGroup viewParent= (ViewGroup) childView.getParent();\n        //如果他原来有一个爸爸了，就先把它爸爸干掉\n        if(viewParent!=null){\n            viewParent.removeView(childView);\n        }\n        //添加我们的爸爸给这个视图，因为一个视图不可能有两个爸爸\n        parent.addView(childView,0);\n        //将爸爸返回\n        return parent;\n    }\n\n    /**\n     * Builder设计模式，所有Toolbar都必须有的参数----------参数集（参数类）\n     */\n    public static class NavigationParams{\n        private Context context;//上下文对象，用于加载布局视图\n        private ViewGroup parent;//每一个布局视图都有一个爸爸\n        private LayoutInflater inflater;\n        public NavigationParams(Context context, ViewGroup parent) {\n            this.context = context;\n            this.parent = parent;\n            inflater=inflater.from(context);\n        }\n    }\n\n    /**\n     * 创建Toolbar\n     */\n    public abstract static class Builder{\n        public Builder(Context context,ViewGroup parent) {\n        }\n\n        /**\n         * 创建Toolbar\n         * @return\n         */\n        public abstract INavigation create();\n    }\n}\n```\n\n<a name=\"87mMM\"></a>\n### 搭建toolbar布局框架——abstract class DefaultNavigation（多个子类（功能）继承此父类，功能需求就可以多变）\n\n```java\n/**\n * 左中右场场景，\n * 也就是先设置左中右的布局，子类可以实现更多内容\n * Created by 辉神 on 2016/8/11.\n */\n\npublic abstract class DefaultNavigation<P extends AbsNavigation.NavigationParams> extends AbsNavigation<P> {\n\n    public DefaultNavigation(P params) {\n        super(params);\n    }\n\n    @Override\n    public int bindLayoutId() {\n        return R.layout.navigation_default;\n    }\n\n    @Override\n    public void build() {\n        super.build();//一定要super，因为要绑定左中右的父容器\n\n        //初始化父容器，布局框架\n        LinearLayout ll_left= (LinearLayout) findLayoutById(R.id.ll_left);\n        LinearLayout ll_center= (LinearLayout) findLayoutById(R.id.ll_center);\n        LinearLayout ll_right= (LinearLayout) findLayoutById(R.id.ll_right);\n\n        //以下方法都是抽象，显然，子类可以任意定义布局，达到动态改变，方便维护\n        //绑定布局也就是，将子布局添加到当前这个“左中右场景”中来\n        bindParent(bindLeftLayoutId(),ll_left);\n        bindParent(bindCenterLayoutId(),ll_center);\n        bindParent(bindRightLayoutId(),ll_right);\n        //初始化子布局\n        initLeftLayout(ll_left);\n        initCenterLayout(ll_center);\n        initRightLayout(ll_right);\n\n    }\n\n    /**\n     *返回左边布局ID—— 用于子布局（待子类实现）\n     * @return ID\n     */\n    public abstract int bindLeftLayoutId();\n\n    /**\n     * 返回中间布局ID—— 用于子布局（待子类实现）\n     * @return ID\n     */\n    public abstract int bindCenterLayoutId();\n\n    /**\n     * 返回右边布局ID—— 用于子布局（待子类实现）\n     * @return ID\n     */\n    public abstract int bindRightLayoutId();\n\n    /**\n     * 初始化左边的布局—— 用于子布局（待子类实现）\n     * @param view\n     * @return\n     */\n    public abstract void initLeftLayout(View view);\n    /**\n     * 初始化中间的布局—— 用于子布局（待子类实现）\n     * @param view\n     * @return\n     */\n    public abstract void initCenterLayout(View view);\n    /**\n     * 初始化右边的布局—— 用于子布局（待子类实现）\n     * @param view\n     * @return\n     */\n    public abstract void initRightLayout(View view);\n}\n```\n\n<a name=\"LbOY6\"></a>\n### 主页toolbar的实现——HomeNavigation\n\n```java\n/**\n * 默认的主页toolbar实现\n * Created by 辉神 on 2016/8/11.\n */\n\npublic class HomeNavigation extends DefaultNavigation<HomeNavigation.HomeNavigationParams> {\n\n    public HomeNavigation(HomeNavigationParams params) {\n        super(params);\n    }\n\n    /**\n     * 设置默认主页的参数\n     */\n    public static class HomeNavigationParams extends AbsNavigation.NavigationParams{\n        public int leftImageRes;\n        public int centerTitleRes;\n        public int rightImageRes;\n        public int rightTextRes;\n\n        public View.OnClickListener leftOnclickListener;\n        public View.OnClickListener rightOnClickListener;\n\n        public HomeNavigationParams(Context context, ViewGroup parent) {\n            super(context, parent);\n        }\n    }\n\n    /**\n     * 构建我们的Toolbar\n     * @return\n     */\n    public static class Builder extends AbsNavigation.Builder{\n        private HomeNavigationParams p;\n\n        public Builder(Context context, ViewGroup parent) {\n            super(context, parent);\n            this.p=new HomeNavigationParams(context,parent);\n        }\n        /**\n         *  设置左边的图片\n         */\n        public Builder setLeftImageRes(int leftImageRes){\n            this.p.leftImageRes=leftImageRes;\n            return this;\n        }\n\n        /**\n         * 设置中间标题\n         * @param centerTitleRes\n         * @return\n         */\n        public Builder setCenterTitleRes(int centerTitleRes){\n            this.p.centerTitleRes=centerTitleRes;\n            return this;\n        }\n\n        /**\n         * 设置右边图片\n         * @param rightImageRes\n         * @return\n         */\n        public Builder setRightImageRes(int rightImageRes){\n            this.p.rightImageRes=rightImageRes;\n            return this;\n        }\n\n        /**\n         * 设置右边文字\n         * @param rightTextRes\n         * @return\n         */\n        public Builder setRightTextRes(int rightTextRes){\n            this.p.rightTextRes=rightTextRes;\n            return this;\n        }\n\n        /**\n         * 设置左边监听事件\n         * @param leftOnclickListener\n         * @return\n         */\n        public Builder setLeftOnclickListener(View.OnClickListener leftOnclickListener){\n            this.p.leftOnclickListener=leftOnclickListener;\n            return this;\n        }\n\n        /**\n         * 设置右边监听事件\n         * @param rightOnClickListener\n         * @return\n         */\n        public Builder setRightOnClickListener(View.OnClickListener rightOnClickListener){\n            this.p.rightOnClickListener=rightOnClickListener;\n            return this;\n        }\n\n        /**\n         * <p>这个方法被调用了之后，还没有结束，还需要调用接口中的build()方法</p>\n         * <p>HomeNavigation的是上层父类，是INavigation的实现类，</p>\n         * <p>所以当前INavigation的build()方法被调用时，也就相当于接口回调了，builder设计模式也就完成</p>\n         * <p>用户还需要再调用最高层接口，已经设计好的方法build()方法</p>\n         * <p>这个builder设计模式简直屌炸天</p>\n         * @return\n         */\n        @Override\n        public INavigation create() {\n            return new HomeNavigation(p);\n        }\n    }\n\n    @Override\n    public int bindLayoutId() {\n        return super.bindLayoutId();\n    }\n\n    @Override\n    public int bindLeftLayoutId() {\n        return R.layout.navigation_default_left;\n    }\n\n    @Override\n    public int bindCenterLayoutId() {\n        return R.layout.navigation_default_center;\n    }\n\n    @Override\n    public int bindRightLayoutId() {\n        return R.layout.navigation_home_right;\n    }\n\n    @Override\n    public void initLeftLayout(View view) {\n        ImageView iv_default_left = (ImageView) view.findViewById(R.id.iv_default_left);\n        iv_default_left.setImageResource(getParams().leftImageRes);\n        iv_default_left.setOnClickListener(getParams().leftOnclickListener);\n    }\n\n    @Override\n    public void initCenterLayout(View view) {\n        TextView tv_default_center = (TextView) view.findViewById(R.id.tv_default_center);\n        tv_default_center.setText(getString(getParams().centerTitleRes));\n    }\n\n    @Override\n    public void initRightLayout(View view) {\n        TextView tv_home_right = (TextView) view.findViewById(R.id.tv_home_right);\n        tv_home_right.setText(getString(getParams().rightTextRes));\n        tv_home_right.setOnClickListener(getParams().rightOnClickListener);\n        ImageView iv_home_right= (ImageView) view.findViewById(R.id.iv_home_right);\n        iv_home_right.setImageResource(getParams().rightImageRes);\n        //启动金币动画\n        AnimationDrawable animationDrawable= (AnimationDrawable) iv_home_right.getBackground();\n        animationDrawable.start();\n    }\n}\n```\n\n<a name=\"gzCTn\"></a>\n### HomeNavigation的调用,即实例化\n\n```java\nprivate void initNavigation(View contentView) {\n\nHomeNavigation.Builder builder=new HomeNavigation.Builder\n(getActivity(), (ViewGroup) contentView);\n\n        builder.setLeftImageRes(R.mipmap.apk_all_top_nav)\n                .setCenterTitleRes(R.string.tabbar_home_text)\n                .setRightTextRes(R.string.nav_sign_in)\n                .setRightImageRes(R.drawable.anim_sign_coin)\n                .setLeftOnclickListener(\n                new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n\t\t\t\t     ToastUtil .showToast(getActivity(),\n\t\t\t\t     \"点击了菜单\");\n                    }\n                })\n                .setRightOnClickListener\n                (new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        ToastUtil.showToast(getActivity(),\n                        \"点击了签到\");\n                    }\n                })\n                .create().build();\n\n    }\n```\n\n<a name=\"bmmNN\"></a>\n### 主页toolbar实现效果\n![](https://cdn.nlark.com/yuque/0/2019/png/244275/1560594037506-246261ac-6c1a-4a07-a2f5-10904d4e47a7.png#align=left&display=inline&height=217&originHeight=217&originWidth=321&size=0&status=done&width=321)\n\n<a name=\"cp07W\"></a>\n## 布局代码就不给了\n",
    "body_draft": "",
    "body_html": "<p>tags: [设计模式<span>,mvp,android设计模式</span>]</p><p>categories: 设计模式</p><p><br /></p><hr /><p><br /></p><h1 id=\"PLZoY\">使用Builder设计模式，设计ToolBar</h1><h2 id=\"nO5mk\">Builder设计模式解析</h2><p>android也有不地方采用了Builder设计模式的，比如NotificationCompat.Builder和AlertDialog.Builder就采用了Builder的设计模式</p><p><br /></p><h3 id=\"EhCjH\">最典型的代码示例</h3><h4 id=\"4toIJ\">NotificationCompat.Builder</h4><p><br /></p><pre data-lang=\"java\"><code>NotificationCompat.Builder mBuilder =\n        new NotificationCompat.Builder(this)\n        .setSmallIcon(R.drawable.notification_icon)\n        .setContentTitle(&quot;My notification&quot;)\n        .setContentText(&quot;Hello World!&quot;);\n// Creates an explicit intent for an Activity in your app\nIntent resultIntent = new Intent(this, ResultActivity.class);\n\n// The stack builder object will contain an artificial back stack for the\n// started Activity.\n// This ensures that navigating backward from the Activity leads out of\n// your application to the Home screen.\nTaskStackBuilder stackBuilder = TaskStackBuilder.create(this);\n// Adds the back stack for the Intent (but not the Intent itself)\nstackBuilder.addParentStack(ResultActivity.class);\n// Adds the Intent that starts the Activity to the top of the stack\nstackBuilder.addNextIntent(resultIntent);\nPendingIntent resultPendingIntent =\n        stackBuilder.getPendingIntent(\n            0,\n            PendingIntent.FLAG_UPDATE_CURRENT\n        );\nmBuilder.setContentIntent(resultPendingIntent);\nNotificationManager mNotificationManager =\n    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n// mId allows you to update the notification later on.\nmNotificationManager.notify(mId, mBuilder.build());</code></pre><p><br /></p><h4 id=\"qoIBp\">AlertDialog.Builder</h4><p><br /></p><pre data-lang=\"java\"><code>AlertDialog.Builder builder2=new AlertDialog.Builder(\ngetActivity(),R.style.AppTheme_NoActionBar);\n\n        builder2.setTitle(&quot;警告&quot;)\n        .setMessage(&quot;你确定删除吗&quot;)\n\t\tnew DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog,\n             int which) {\n                ToastUtil.showToast(getActivity(),&quot;你点击了取消&quot;);\n            }\n        })\n         .setPositiveButton(&quot;确定&quot;, \n         new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, \n                    int which) {\n                        ToastUtil.showToast(getActivity(),\n                        &quot;你点击了确定&quot;);\n                    }\n          }) .create().show();</code></pre><p><br /></p><p>&lt;!--more--&gt;</p><h3 id=\"Abool\">Builder设计模式的特点</h3><h4 id=\"PBxbY\">参数化</h4><p>AlertDialog.Builder里面会实例一个AlertController.AlertParams，里面包含大部分，创建AlertDialog的参数，实现功能的参数化</p><p><br /></p><pre data-lang=\"java\"><code>public Builder(Context context, int themeResId) {\n\n P = new AlertController.AlertParams(new ContextThemeWrapper(context, resolveDialogTheme(context, themeResId)));\n        }</code></pre><p><br /></p><h4 id=\"uQJkb\">可维护性强</h4><p>由于Builder设计模式的参数，达到功能的多变，可维护性就变得很强</p><p>例如：可以 调用setMessage(&quot;你确定删除吗&quot;)，也可以去掉</p><h2 id=\"rxztf\">ToolBar的设计，抽象化</h2><p><br /></p><h3 id=\"3dhnt\">接口抽象toolbar的规范public interface INavigation</h3><p><br /></p><pre data-lang=\"java\"><code>/**\n * 所有Toolbar的规范\n * 抽象一个Toolbar\n * \n * Created by 辉神 on 2016/8/10.\n */\n\npublic interface INavigation {\n    /**\n     * 定义布局（返回布局id）\n     * @return\n     */\n    public int bindLayoutId();\n\n    /**\n     * 创建和绑定布局\n     */\n    public void build();\n}</code></pre><p><br /></p><h3 id=\"9uiSL\">抽象并实现INavigation——public abstract class AbsNavigation</h3><p><br /></p><pre data-lang=\"java\"><code>/**\n * 再次抽象Toolbar\n * -只要是app的开发，都会有布局的创建和绑定\n * -再次抽象，是为了，下次使用时，不用再次创建布局和绑定\n * Created by 辉神 on 2016/8/10.\n */\n\npublic abstract class AbsNavigation&lt;P extends AbsNavigation.NavigationParams&gt; implements INavigation {\n    /**\n     *     设置一个默认LayoutId，默认为0\n     */\n    private static final  int DEFAULT_LAYOUT_ID=0;\n    private P params;\n    private View contentView;\n\n    public AbsNavigation(P params) {\n        this.params = params;\n    }\n\n    public P getParams() {\n        return  params;\n    }\n\n    @Override\n    public int bindLayoutId() {\n        return DEFAULT_LAYOUT_ID;\n    }\n\n    @Override\n    public void build() {\n        //创建和绑定布局\n        if (contentView==null)\n        contentView = bindParent(bindLayoutId(), ((NavigationParams)getParams()).parent);\n    }\n\n    /**\n     * 方便子类使用\n     * @param id\n     * @return\n     */\n    public View findLayoutById(int id){\n        return contentView!=null?contentView.findViewById(id):null;\n    }\n    public String getString(int id){\n        return contentView.getContext().getResources().getString(id);\n    }\n\n    public View bindParent(int id, ViewGroup parent) {\n        //先要判断这个id是否为0\n        if (id==DEFAULT_LAYOUT_ID){\n            return null;\n        }\n        View childView = ((NavigationParams)getParams()).inflater.inflate(id, parent,false);\n        return bindParent(childView,parent);\n    }\n\n    public View bindParent(View childView, ViewGroup parent) {\n        ViewGroup viewParent= (ViewGroup) childView.getParent();\n        //如果他原来有一个爸爸了，就先把它爸爸干掉\n        if(viewParent!=null){\n            viewParent.removeView(childView);\n        }\n        //添加我们的爸爸给这个视图，因为一个视图不可能有两个爸爸\n        parent.addView(childView,0);\n        //将爸爸返回\n        return parent;\n    }\n\n    /**\n     * Builder设计模式，所有Toolbar都必须有的参数----------参数集（参数类）\n     */\n    public static class NavigationParams{\n        private Context context;//上下文对象，用于加载布局视图\n        private ViewGroup parent;//每一个布局视图都有一个爸爸\n        private LayoutInflater inflater;\n        public NavigationParams(Context context, ViewGroup parent) {\n            this.context = context;\n            this.parent = parent;\n            inflater=inflater.from(context);\n        }\n    }\n\n    /**\n     * 创建Toolbar\n     */\n    public abstract static class Builder{\n        public Builder(Context context,ViewGroup parent) {\n        }\n\n        /**\n         * 创建Toolbar\n         * @return\n         */\n        public abstract INavigation create();\n    }\n}</code></pre><p><br /></p><h3 id=\"87mMM\">搭建toolbar布局框架——abstract class DefaultNavigation（多个子类（功能）继承此父类，功能需求就可以多变）</h3><p><br /></p><pre data-lang=\"java\"><code>/**\n * 左中右场场景，\n * 也就是先设置左中右的布局，子类可以实现更多内容\n * Created by 辉神 on 2016/8/11.\n */\n\npublic abstract class DefaultNavigation&lt;P extends AbsNavigation.NavigationParams&gt; extends AbsNavigation&lt;P&gt; {\n\n    public DefaultNavigation(P params) {\n        super(params);\n    }\n\n    @Override\n    public int bindLayoutId() {\n        return R.layout.navigation_default;\n    }\n\n    @Override\n    public void build() {\n        super.build();//一定要super，因为要绑定左中右的父容器\n\n        //初始化父容器，布局框架\n        LinearLayout ll_left= (LinearLayout) findLayoutById(R.id.ll_left);\n        LinearLayout ll_center= (LinearLayout) findLayoutById(R.id.ll_center);\n        LinearLayout ll_right= (LinearLayout) findLayoutById(R.id.ll_right);\n\n        //以下方法都是抽象，显然，子类可以任意定义布局，达到动态改变，方便维护\n        //绑定布局也就是，将子布局添加到当前这个“左中右场景”中来\n        bindParent(bindLeftLayoutId(),ll_left);\n        bindParent(bindCenterLayoutId(),ll_center);\n        bindParent(bindRightLayoutId(),ll_right);\n        //初始化子布局\n        initLeftLayout(ll_left);\n        initCenterLayout(ll_center);\n        initRightLayout(ll_right);\n\n    }\n\n    /**\n     *返回左边布局ID—— 用于子布局（待子类实现）\n     * @return ID\n     */\n    public abstract int bindLeftLayoutId();\n\n    /**\n     * 返回中间布局ID—— 用于子布局（待子类实现）\n     * @return ID\n     */\n    public abstract int bindCenterLayoutId();\n\n    /**\n     * 返回右边布局ID—— 用于子布局（待子类实现）\n     * @return ID\n     */\n    public abstract int bindRightLayoutId();\n\n    /**\n     * 初始化左边的布局—— 用于子布局（待子类实现）\n     * @param view\n     * @return\n     */\n    public abstract void initLeftLayout(View view);\n    /**\n     * 初始化中间的布局—— 用于子布局（待子类实现）\n     * @param view\n     * @return\n     */\n    public abstract void initCenterLayout(View view);\n    /**\n     * 初始化右边的布局—— 用于子布局（待子类实现）\n     * @param view\n     * @return\n     */\n    public abstract void initRightLayout(View view);\n}</code></pre><p><br /></p><h3 id=\"LbOY6\">主页toolbar的实现——HomeNavigation</h3><p><br /></p><pre data-lang=\"java\"><code>/**\n * 默认的主页toolbar实现\n * Created by 辉神 on 2016/8/11.\n */\n\npublic class HomeNavigation extends DefaultNavigation&lt;HomeNavigation.HomeNavigationParams&gt; {\n\n    public HomeNavigation(HomeNavigationParams params) {\n        super(params);\n    }\n\n    /**\n     * 设置默认主页的参数\n     */\n    public static class HomeNavigationParams extends AbsNavigation.NavigationParams{\n        public int leftImageRes;\n        public int centerTitleRes;\n        public int rightImageRes;\n        public int rightTextRes;\n\n        public View.OnClickListener leftOnclickListener;\n        public View.OnClickListener rightOnClickListener;\n\n        public HomeNavigationParams(Context context, ViewGroup parent) {\n            super(context, parent);\n        }\n    }\n\n    /**\n     * 构建我们的Toolbar\n     * @return\n     */\n    public static class Builder extends AbsNavigation.Builder{\n        private HomeNavigationParams p;\n\n        public Builder(Context context, ViewGroup parent) {\n            super(context, parent);\n            this.p=new HomeNavigationParams(context,parent);\n        }\n        /**\n         *  设置左边的图片\n         */\n        public Builder setLeftImageRes(int leftImageRes){\n            this.p.leftImageRes=leftImageRes;\n            return this;\n        }\n\n        /**\n         * 设置中间标题\n         * @param centerTitleRes\n         * @return\n         */\n        public Builder setCenterTitleRes(int centerTitleRes){\n            this.p.centerTitleRes=centerTitleRes;\n            return this;\n        }\n\n        /**\n         * 设置右边图片\n         * @param rightImageRes\n         * @return\n         */\n        public Builder setRightImageRes(int rightImageRes){\n            this.p.rightImageRes=rightImageRes;\n            return this;\n        }\n\n        /**\n         * 设置右边文字\n         * @param rightTextRes\n         * @return\n         */\n        public Builder setRightTextRes(int rightTextRes){\n            this.p.rightTextRes=rightTextRes;\n            return this;\n        }\n\n        /**\n         * 设置左边监听事件\n         * @param leftOnclickListener\n         * @return\n         */\n        public Builder setLeftOnclickListener(View.OnClickListener leftOnclickListener){\n            this.p.leftOnclickListener=leftOnclickListener;\n            return this;\n        }\n\n        /**\n         * 设置右边监听事件\n         * @param rightOnClickListener\n         * @return\n         */\n        public Builder setRightOnClickListener(View.OnClickListener rightOnClickListener){\n            this.p.rightOnClickListener=rightOnClickListener;\n            return this;\n        }\n\n        /**\n         * &lt;p&gt;这个方法被调用了之后，还没有结束，还需要调用接口中的build()方法&lt;/p&gt;\n         * &lt;p&gt;HomeNavigation的是上层父类，是INavigation的实现类，&lt;/p&gt;\n         * &lt;p&gt;所以当前INavigation的build()方法被调用时，也就相当于接口回调了，builder设计模式也就完成&lt;/p&gt;\n         * &lt;p&gt;用户还需要再调用最高层接口，已经设计好的方法build()方法&lt;/p&gt;\n         * &lt;p&gt;这个builder设计模式简直屌炸天&lt;/p&gt;\n         * @return\n         */\n        @Override\n        public INavigation create() {\n            return new HomeNavigation(p);\n        }\n    }\n\n    @Override\n    public int bindLayoutId() {\n        return super.bindLayoutId();\n    }\n\n    @Override\n    public int bindLeftLayoutId() {\n        return R.layout.navigation_default_left;\n    }\n\n    @Override\n    public int bindCenterLayoutId() {\n        return R.layout.navigation_default_center;\n    }\n\n    @Override\n    public int bindRightLayoutId() {\n        return R.layout.navigation_home_right;\n    }\n\n    @Override\n    public void initLeftLayout(View view) {\n        ImageView iv_default_left = (ImageView) view.findViewById(R.id.iv_default_left);\n        iv_default_left.setImageResource(getParams().leftImageRes);\n        iv_default_left.setOnClickListener(getParams().leftOnclickListener);\n    }\n\n    @Override\n    public void initCenterLayout(View view) {\n        TextView tv_default_center = (TextView) view.findViewById(R.id.tv_default_center);\n        tv_default_center.setText(getString(getParams().centerTitleRes));\n    }\n\n    @Override\n    public void initRightLayout(View view) {\n        TextView tv_home_right = (TextView) view.findViewById(R.id.tv_home_right);\n        tv_home_right.setText(getString(getParams().rightTextRes));\n        tv_home_right.setOnClickListener(getParams().rightOnClickListener);\n        ImageView iv_home_right= (ImageView) view.findViewById(R.id.iv_home_right);\n        iv_home_right.setImageResource(getParams().rightImageRes);\n        //启动金币动画\n        AnimationDrawable animationDrawable= (AnimationDrawable) iv_home_right.getBackground();\n        animationDrawable.start();\n    }\n}</code></pre><p><br /></p><h3 id=\"gzCTn\">HomeNavigation的调用,即实例化</h3><p><br /></p><pre data-lang=\"java\"><code>private void initNavigation(View contentView) {\n\nHomeNavigation.Builder builder=new HomeNavigation.Builder\n(getActivity(), (ViewGroup) contentView);\n\n        builder.setLeftImageRes(R.mipmap.apk_all_top_nav)\n                .setCenterTitleRes(R.string.tabbar_home_text)\n                .setRightTextRes(R.string.nav_sign_in)\n                .setRightImageRes(R.drawable.anim_sign_coin)\n                .setLeftOnclickListener(\n                new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n\t\t\t\t     ToastUtil .showToast(getActivity(),\n\t\t\t\t     &quot;点击了菜单&quot;);\n                    }\n                })\n                .setRightOnClickListener\n                (new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        ToastUtil.showToast(getActivity(),\n                        &quot;点击了签到&quot;);\n                    }\n                })\n                .create().build();\n\n    }</code></pre><p><br /></p><h3 id=\"bmmNN\">主页toolbar实现效果</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1560594037506-246261ac-6c1a-4a07-a2f5-10904d4e47a7.png#align=left&amp;display=inline&amp;height=217&amp;originHeight=217&amp;originWidth=321&amp;size=0&amp;status=done&amp;width=321\" style=\"max-width: 600px; width: 321px;\" /></p><p><br /></p><h2 id=\"cp07W\">布局代码就不给了</h2>",
    "body_lake": "<!doctype lake><p>tags: [设计模式<span>,mvp,android设计模式</span>]</p><p>categories: 设计模式</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22ta1WY%22%7D\"></card><p><br /></p><h1 id=\"PLZoY\">使用Builder设计模式，设计ToolBar</h1><h2 id=\"nO5mk\">Builder设计模式解析</h2><p>android也有不地方采用了Builder设计模式的，比如NotificationCompat.Builder和AlertDialog.Builder就采用了Builder的设计模式</p><p><br /></p><h3 id=\"EhCjH\">最典型的代码示例</h3><h4 id=\"4toIJ\">NotificationCompat.Builder</h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22f56ea4b0%22%2C%22code%22%3A%22NotificationCompat.Builder%20mBuilder%20%3D%5Cn%20%20%20%20%20%20%20%20new%20NotificationCompat.Builder(this)%5Cn%20%20%20%20%20%20%20%20.setSmallIcon(R.drawable.notification_icon)%5Cn%20%20%20%20%20%20%20%20.setContentTitle(%5C%22My%20notification%5C%22)%5Cn%20%20%20%20%20%20%20%20.setContentText(%5C%22Hello%20World!%5C%22)%3B%5Cn%2F%2F%20Creates%20an%20explicit%20intent%20for%20an%20Activity%20in%20your%20app%5CnIntent%20resultIntent%20%3D%20new%20Intent(this%2C%20ResultActivity.class)%3B%5Cn%5Cn%2F%2F%20The%20stack%20builder%20object%20will%20contain%20an%20artificial%20back%20stack%20for%20the%5Cn%2F%2F%20started%20Activity.%5Cn%2F%2F%20This%20ensures%20that%20navigating%20backward%20from%20the%20Activity%20leads%20out%20of%5Cn%2F%2F%20your%20application%20to%20the%20Home%20screen.%5CnTaskStackBuilder%20stackBuilder%20%3D%20TaskStackBuilder.create(this)%3B%5Cn%2F%2F%20Adds%20the%20back%20stack%20for%20the%20Intent%20(but%20not%20the%20Intent%20itself)%5CnstackBuilder.addParentStack(ResultActivity.class)%3B%5Cn%2F%2F%20Adds%20the%20Intent%20that%20starts%20the%20Activity%20to%20the%20top%20of%20the%20stack%5CnstackBuilder.addNextIntent(resultIntent)%3B%5CnPendingIntent%20resultPendingIntent%20%3D%5Cn%20%20%20%20%20%20%20%20stackBuilder.getPendingIntent(%5Cn%20%20%20%20%20%20%20%20%20%20%20%200%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20PendingIntent.FLAG_UPDATE_CURRENT%5Cn%20%20%20%20%20%20%20%20)%3B%5CnmBuilder.setContentIntent(resultPendingIntent)%3B%5CnNotificationManager%20mNotificationManager%20%3D%5Cn%20%20%20%20(NotificationManager)%20getSystemService(Context.NOTIFICATION_SERVICE)%3B%5Cn%2F%2F%20mId%20allows%20you%20to%20update%20the%20notification%20later%20on.%5CnmNotificationManager.notify(mId%2C%20mBuilder.build())%3B%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h4 id=\"qoIBp\">AlertDialog.Builder</h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225a7c60ba%22%2C%22code%22%3A%22AlertDialog.Builder%20builder2%3Dnew%20AlertDialog.Builder(%5CngetActivity()%2CR.style.AppTheme_NoActionBar)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20builder2.setTitle(%5C%22%E8%AD%A6%E5%91%8A%5C%22)%5Cn%20%20%20%20%20%20%20%20.setMessage(%5C%22%E4%BD%A0%E7%A1%AE%E5%AE%9A%E5%88%A0%E9%99%A4%E5%90%97%5C%22)%5Cn%5Ct%5Ctnew%20DialogInterface.OnClickListener()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%40Override%5Cn%20%20%20%20%20%20%20%20%20%20%20%20public%20void%20onClick(DialogInterface%20dialog%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20int%20which)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ToastUtil.showToast(getActivity()%2C%5C%22%E4%BD%A0%E7%82%B9%E5%87%BB%E4%BA%86%E5%8F%96%E6%B6%88%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20%20.setPositiveButton(%5C%22%E7%A1%AE%E5%AE%9A%5C%22%2C%20%5Cn%20%20%20%20%20%20%20%20%20new%20DialogInterface.OnClickListener()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%40Override%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20public%20void%20onClick(DialogInterface%20dialog%2C%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20int%20which)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ToastUtil.showToast(getActivity()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%E4%BD%A0%E7%82%B9%E5%87%BB%E4%BA%86%E7%A1%AE%E5%AE%9A%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%7D)%20.create().show()%3B%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><p>&lt;!--more--&gt;</p><h3 id=\"Abool\">Builder设计模式的特点</h3><h4 id=\"PBxbY\">参数化</h4><p>AlertDialog.Builder里面会实例一个AlertController.AlertParams，里面包含大部分，创建AlertDialog的参数，实现功能的参数化</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22058001b7%22%2C%22code%22%3A%22public%20Builder(Context%20context%2C%20int%20themeResId)%20%7B%5Cn%5Cn%20P%20%3D%20new%20AlertController.AlertParams(new%20ContextThemeWrapper(context%2C%20resolveDialogTheme(context%2C%20themeResId)))%3B%5Cn%20%20%20%20%20%20%20%20%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h4 id=\"uQJkb\">可维护性强</h4><p>由于Builder设计模式的参数，达到功能的多变，可维护性就变得很强</p><p>例如：可以 调用setMessage(&quot;你确定删除吗&quot;)，也可以去掉</p><h2 id=\"rxztf\">ToolBar的设计，抽象化</h2><p><br /></p><h3 id=\"3dhnt\">接口抽象toolbar的规范public interface INavigation</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22f6d6ff33%22%2C%22code%22%3A%22%2F**%5Cn%20*%20%E6%89%80%E6%9C%89Toolbar%E7%9A%84%E8%A7%84%E8%8C%83%5Cn%20*%20%E6%8A%BD%E8%B1%A1%E4%B8%80%E4%B8%AAToolbar%5Cn%20*%20%5Cn%20*%20Created%20by%20%E8%BE%89%E7%A5%9E%20on%202016%2F8%2F10.%5Cn%20*%2F%5Cn%5Cnpublic%20interface%20INavigation%20%7B%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%AE%9A%E4%B9%89%E5%B8%83%E5%B1%80%EF%BC%88%E8%BF%94%E5%9B%9E%E5%B8%83%E5%B1%80id%EF%BC%89%5Cn%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20int%20bindLayoutId()%3B%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BB%91%E5%AE%9A%E5%B8%83%E5%B1%80%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20void%20build()%3B%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"9uiSL\">抽象并实现INavigation——public abstract class AbsNavigation</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%222aaa55d9%22%2C%22code%22%3A%22%2F**%5Cn%20*%20%E5%86%8D%E6%AC%A1%E6%8A%BD%E8%B1%A1Toolbar%5Cn%20*%20-%E5%8F%AA%E8%A6%81%E6%98%AFapp%E7%9A%84%E5%BC%80%E5%8F%91%EF%BC%8C%E9%83%BD%E4%BC%9A%E6%9C%89%E5%B8%83%E5%B1%80%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BB%91%E5%AE%9A%5Cn%20*%20-%E5%86%8D%E6%AC%A1%E6%8A%BD%E8%B1%A1%EF%BC%8C%E6%98%AF%E4%B8%BA%E4%BA%86%EF%BC%8C%E4%B8%8B%E6%AC%A1%E4%BD%BF%E7%94%A8%E6%97%B6%EF%BC%8C%E4%B8%8D%E7%94%A8%E5%86%8D%E6%AC%A1%E5%88%9B%E5%BB%BA%E5%B8%83%E5%B1%80%E5%92%8C%E7%BB%91%E5%AE%9A%5Cn%20*%20Created%20by%20%E8%BE%89%E7%A5%9E%20on%202016%2F8%2F10.%5Cn%20*%2F%5Cn%5Cnpublic%20abstract%20class%20AbsNavigation%3CP%20extends%20AbsNavigation.NavigationParams%3E%20implements%20INavigation%20%7B%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%20%20%20%20%E8%AE%BE%E7%BD%AE%E4%B8%80%E4%B8%AA%E9%BB%98%E8%AE%A4LayoutId%EF%BC%8C%E9%BB%98%E8%AE%A4%E4%B8%BA0%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20private%20static%20final%20%20int%20DEFAULT_LAYOUT_ID%3D0%3B%5Cn%20%20%20%20private%20P%20params%3B%5Cn%20%20%20%20private%20View%20contentView%3B%5Cn%5Cn%20%20%20%20public%20AbsNavigation(P%20params)%20%7B%5Cn%20%20%20%20%20%20%20%20this.params%20%3D%20params%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20public%20P%20getParams()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20%20params%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20int%20bindLayoutId()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20DEFAULT_LAYOUT_ID%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20build()%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BB%91%E5%AE%9A%E5%B8%83%E5%B1%80%5Cn%20%20%20%20%20%20%20%20if%20(contentView%3D%3Dnull)%5Cn%20%20%20%20%20%20%20%20contentView%20%3D%20bindParent(bindLayoutId()%2C%20((NavigationParams)getParams()).parent)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E6%96%B9%E4%BE%BF%E5%AD%90%E7%B1%BB%E4%BD%BF%E7%94%A8%5Cn%20%20%20%20%20*%20%40param%20id%5Cn%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20View%20findLayoutById(int%20id)%7B%5Cn%20%20%20%20%20%20%20%20return%20contentView!%3Dnull%3FcontentView.findViewById(id)%3Anull%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20public%20String%20getString(int%20id)%7B%5Cn%20%20%20%20%20%20%20%20return%20contentView.getContext().getResources().getString(id)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20public%20View%20bindParent(int%20id%2C%20ViewGroup%20parent)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%85%88%E8%A6%81%E5%88%A4%E6%96%AD%E8%BF%99%E4%B8%AAid%E6%98%AF%E5%90%A6%E4%B8%BA0%5Cn%20%20%20%20%20%20%20%20if%20(id%3D%3DDEFAULT_LAYOUT_ID)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20null%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20View%20childView%20%3D%20((NavigationParams)getParams()).inflater.inflate(id%2C%20parent%2Cfalse)%3B%5Cn%20%20%20%20%20%20%20%20return%20bindParent(childView%2Cparent)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20public%20View%20bindParent(View%20childView%2C%20ViewGroup%20parent)%20%7B%5Cn%20%20%20%20%20%20%20%20ViewGroup%20viewParent%3D%20(ViewGroup)%20childView.getParent()%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%A6%82%E6%9E%9C%E4%BB%96%E5%8E%9F%E6%9D%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E7%88%B8%E7%88%B8%E4%BA%86%EF%BC%8C%E5%B0%B1%E5%85%88%E6%8A%8A%E5%AE%83%E7%88%B8%E7%88%B8%E5%B9%B2%E6%8E%89%5Cn%20%20%20%20%20%20%20%20if(viewParent!%3Dnull)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20viewParent.removeView(childView)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%2F%2F%E6%B7%BB%E5%8A%A0%E6%88%91%E4%BB%AC%E7%9A%84%E7%88%B8%E7%88%B8%E7%BB%99%E8%BF%99%E4%B8%AA%E8%A7%86%E5%9B%BE%EF%BC%8C%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E8%A7%86%E5%9B%BE%E4%B8%8D%E5%8F%AF%E8%83%BD%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%88%B8%E7%88%B8%5Cn%20%20%20%20%20%20%20%20parent.addView(childView%2C0)%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%B0%86%E7%88%B8%E7%88%B8%E8%BF%94%E5%9B%9E%5Cn%20%20%20%20%20%20%20%20return%20parent%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20Builder%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%8C%E6%89%80%E6%9C%89Toolbar%E9%83%BD%E5%BF%85%E9%A1%BB%E6%9C%89%E7%9A%84%E5%8F%82%E6%95%B0----------%E5%8F%82%E6%95%B0%E9%9B%86%EF%BC%88%E5%8F%82%E6%95%B0%E7%B1%BB%EF%BC%89%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20static%20class%20NavigationParams%7B%5Cn%20%20%20%20%20%20%20%20private%20Context%20context%3B%2F%2F%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%94%A8%E4%BA%8E%E5%8A%A0%E8%BD%BD%E5%B8%83%E5%B1%80%E8%A7%86%E5%9B%BE%5Cn%20%20%20%20%20%20%20%20private%20ViewGroup%20parent%3B%2F%2F%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%B8%83%E5%B1%80%E8%A7%86%E5%9B%BE%E9%83%BD%E6%9C%89%E4%B8%80%E4%B8%AA%E7%88%B8%E7%88%B8%5Cn%20%20%20%20%20%20%20%20private%20LayoutInflater%20inflater%3B%5Cn%20%20%20%20%20%20%20%20public%20NavigationParams(Context%20context%2C%20ViewGroup%20parent)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.context%20%3D%20context%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.parent%20%3D%20parent%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20inflater%3Dinflater.from(context)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%88%9B%E5%BB%BAToolbar%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20abstract%20static%20class%20Builder%7B%5Cn%20%20%20%20%20%20%20%20public%20Builder(Context%20context%2CViewGroup%20parent)%20%7B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%E5%88%9B%E5%BB%BAToolbar%5Cn%20%20%20%20%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20public%20abstract%20INavigation%20create()%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"87mMM\">搭建toolbar布局框架——abstract class DefaultNavigation（多个子类（功能）继承此父类，功能需求就可以多变）</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22c921e34b%22%2C%22code%22%3A%22%2F**%5Cn%20*%20%E5%B7%A6%E4%B8%AD%E5%8F%B3%E5%9C%BA%E5%9C%BA%E6%99%AF%EF%BC%8C%5Cn%20*%20%E4%B9%9F%E5%B0%B1%E6%98%AF%E5%85%88%E8%AE%BE%E7%BD%AE%E5%B7%A6%E4%B8%AD%E5%8F%B3%E7%9A%84%E5%B8%83%E5%B1%80%EF%BC%8C%E5%AD%90%E7%B1%BB%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E6%9B%B4%E5%A4%9A%E5%86%85%E5%AE%B9%5Cn%20*%20Created%20by%20%E8%BE%89%E7%A5%9E%20on%202016%2F8%2F11.%5Cn%20*%2F%5Cn%5Cnpublic%20abstract%20class%20DefaultNavigation%3CP%20extends%20AbsNavigation.NavigationParams%3E%20extends%20AbsNavigation%3CP%3E%20%7B%5Cn%5Cn%20%20%20%20public%20DefaultNavigation(P%20params)%20%7B%5Cn%20%20%20%20%20%20%20%20super(params)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20int%20bindLayoutId()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20R.layout.navigation_default%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20build()%20%7B%5Cn%20%20%20%20%20%20%20%20super.build()%3B%2F%2F%E4%B8%80%E5%AE%9A%E8%A6%81super%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%A6%81%E7%BB%91%E5%AE%9A%E5%B7%A6%E4%B8%AD%E5%8F%B3%E7%9A%84%E7%88%B6%E5%AE%B9%E5%99%A8%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%88%9D%E5%A7%8B%E5%8C%96%E7%88%B6%E5%AE%B9%E5%99%A8%EF%BC%8C%E5%B8%83%E5%B1%80%E6%A1%86%E6%9E%B6%5Cn%20%20%20%20%20%20%20%20LinearLayout%20ll_left%3D%20(LinearLayout)%20findLayoutById(R.id.ll_left)%3B%5Cn%20%20%20%20%20%20%20%20LinearLayout%20ll_center%3D%20(LinearLayout)%20findLayoutById(R.id.ll_center)%3B%5Cn%20%20%20%20%20%20%20%20LinearLayout%20ll_right%3D%20(LinearLayout)%20findLayoutById(R.id.ll_right)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%E4%BB%A5%E4%B8%8B%E6%96%B9%E6%B3%95%E9%83%BD%E6%98%AF%E6%8A%BD%E8%B1%A1%EF%BC%8C%E6%98%BE%E7%84%B6%EF%BC%8C%E5%AD%90%E7%B1%BB%E5%8F%AF%E4%BB%A5%E4%BB%BB%E6%84%8F%E5%AE%9A%E4%B9%89%E5%B8%83%E5%B1%80%EF%BC%8C%E8%BE%BE%E5%88%B0%E5%8A%A8%E6%80%81%E6%94%B9%E5%8F%98%EF%BC%8C%E6%96%B9%E4%BE%BF%E7%BB%B4%E6%8A%A4%5Cn%20%20%20%20%20%20%20%20%2F%2F%E7%BB%91%E5%AE%9A%E5%B8%83%E5%B1%80%E4%B9%9F%E5%B0%B1%E6%98%AF%EF%BC%8C%E5%B0%86%E5%AD%90%E5%B8%83%E5%B1%80%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%BD%93%E5%89%8D%E8%BF%99%E4%B8%AA%E2%80%9C%E5%B7%A6%E4%B8%AD%E5%8F%B3%E5%9C%BA%E6%99%AF%E2%80%9D%E4%B8%AD%E6%9D%A5%5Cn%20%20%20%20%20%20%20%20bindParent(bindLeftLayoutId()%2Cll_left)%3B%5Cn%20%20%20%20%20%20%20%20bindParent(bindCenterLayoutId()%2Cll_center)%3B%5Cn%20%20%20%20%20%20%20%20bindParent(bindRightLayoutId()%2Cll_right)%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%88%9D%E5%A7%8B%E5%8C%96%E5%AD%90%E5%B8%83%E5%B1%80%5Cn%20%20%20%20%20%20%20%20initLeftLayout(ll_left)%3B%5Cn%20%20%20%20%20%20%20%20initCenterLayout(ll_center)%3B%5Cn%20%20%20%20%20%20%20%20initRightLayout(ll_right)%3B%5Cn%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%E8%BF%94%E5%9B%9E%E5%B7%A6%E8%BE%B9%E5%B8%83%E5%B1%80ID%E2%80%94%E2%80%94%20%E7%94%A8%E4%BA%8E%E5%AD%90%E5%B8%83%E5%B1%80%EF%BC%88%E5%BE%85%E5%AD%90%E7%B1%BB%E5%AE%9E%E7%8E%B0%EF%BC%89%5Cn%20%20%20%20%20*%20%40return%20ID%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20abstract%20int%20bindLeftLayoutId()%3B%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E8%BF%94%E5%9B%9E%E4%B8%AD%E9%97%B4%E5%B8%83%E5%B1%80ID%E2%80%94%E2%80%94%20%E7%94%A8%E4%BA%8E%E5%AD%90%E5%B8%83%E5%B1%80%EF%BC%88%E5%BE%85%E5%AD%90%E7%B1%BB%E5%AE%9E%E7%8E%B0%EF%BC%89%5Cn%20%20%20%20%20*%20%40return%20ID%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20abstract%20int%20bindCenterLayoutId()%3B%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E8%BF%94%E5%9B%9E%E5%8F%B3%E8%BE%B9%E5%B8%83%E5%B1%80ID%E2%80%94%E2%80%94%20%E7%94%A8%E4%BA%8E%E5%AD%90%E5%B8%83%E5%B1%80%EF%BC%88%E5%BE%85%E5%AD%90%E7%B1%BB%E5%AE%9E%E7%8E%B0%EF%BC%89%5Cn%20%20%20%20%20*%20%40return%20ID%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20abstract%20int%20bindRightLayoutId()%3B%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B7%A6%E8%BE%B9%E7%9A%84%E5%B8%83%E5%B1%80%E2%80%94%E2%80%94%20%E7%94%A8%E4%BA%8E%E5%AD%90%E5%B8%83%E5%B1%80%EF%BC%88%E5%BE%85%E5%AD%90%E7%B1%BB%E5%AE%9E%E7%8E%B0%EF%BC%89%5Cn%20%20%20%20%20*%20%40param%20view%5Cn%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20abstract%20void%20initLeftLayout(View%20view)%3B%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%AD%E9%97%B4%E7%9A%84%E5%B8%83%E5%B1%80%E2%80%94%E2%80%94%20%E7%94%A8%E4%BA%8E%E5%AD%90%E5%B8%83%E5%B1%80%EF%BC%88%E5%BE%85%E5%AD%90%E7%B1%BB%E5%AE%9E%E7%8E%B0%EF%BC%89%5Cn%20%20%20%20%20*%20%40param%20view%5Cn%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20abstract%20void%20initCenterLayout(View%20view)%3B%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%B3%E8%BE%B9%E7%9A%84%E5%B8%83%E5%B1%80%E2%80%94%E2%80%94%20%E7%94%A8%E4%BA%8E%E5%AD%90%E5%B8%83%E5%B1%80%EF%BC%88%E5%BE%85%E5%AD%90%E7%B1%BB%E5%AE%9E%E7%8E%B0%EF%BC%89%5Cn%20%20%20%20%20*%20%40param%20view%5Cn%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20abstract%20void%20initRightLayout(View%20view)%3B%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"LbOY6\">主页toolbar的实现——HomeNavigation</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%226d8ec7f1%22%2C%22code%22%3A%22%2F**%5Cn%20*%20%E9%BB%98%E8%AE%A4%E7%9A%84%E4%B8%BB%E9%A1%B5toolbar%E5%AE%9E%E7%8E%B0%5Cn%20*%20Created%20by%20%E8%BE%89%E7%A5%9E%20on%202016%2F8%2F11.%5Cn%20*%2F%5Cn%5Cnpublic%20class%20HomeNavigation%20extends%20DefaultNavigation%3CHomeNavigation.HomeNavigationParams%3E%20%7B%5Cn%5Cn%20%20%20%20public%20HomeNavigation(HomeNavigationParams%20params)%20%7B%5Cn%20%20%20%20%20%20%20%20super(params)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A1%B5%E7%9A%84%E5%8F%82%E6%95%B0%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20static%20class%20HomeNavigationParams%20extends%20AbsNavigation.NavigationParams%7B%5Cn%20%20%20%20%20%20%20%20public%20int%20leftImageRes%3B%5Cn%20%20%20%20%20%20%20%20public%20int%20centerTitleRes%3B%5Cn%20%20%20%20%20%20%20%20public%20int%20rightImageRes%3B%5Cn%20%20%20%20%20%20%20%20public%20int%20rightTextRes%3B%5Cn%5Cn%20%20%20%20%20%20%20%20public%20View.OnClickListener%20leftOnclickListener%3B%5Cn%20%20%20%20%20%20%20%20public%20View.OnClickListener%20rightOnClickListener%3B%5Cn%5Cn%20%20%20%20%20%20%20%20public%20HomeNavigationParams(Context%20context%2C%20ViewGroup%20parent)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super(context%2C%20parent)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E6%9E%84%E5%BB%BA%E6%88%91%E4%BB%AC%E7%9A%84Toolbar%5Cn%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20public%20static%20class%20Builder%20extends%20AbsNavigation.Builder%7B%5Cn%20%20%20%20%20%20%20%20private%20HomeNavigationParams%20p%3B%5Cn%5Cn%20%20%20%20%20%20%20%20public%20Builder(Context%20context%2C%20ViewGroup%20parent)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super(context%2C%20parent)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.p%3Dnew%20HomeNavigationParams(context%2Cparent)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%20%E8%AE%BE%E7%BD%AE%E5%B7%A6%E8%BE%B9%E7%9A%84%E5%9B%BE%E7%89%87%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20public%20Builder%20setLeftImageRes(int%20leftImageRes)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.p.leftImageRes%3DleftImageRes%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20this%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%E8%AE%BE%E7%BD%AE%E4%B8%AD%E9%97%B4%E6%A0%87%E9%A2%98%5Cn%20%20%20%20%20%20%20%20%20*%20%40param%20centerTitleRes%5Cn%20%20%20%20%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20public%20Builder%20setCenterTitleRes(int%20centerTitleRes)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.p.centerTitleRes%3DcenterTitleRes%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20this%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%E8%AE%BE%E7%BD%AE%E5%8F%B3%E8%BE%B9%E5%9B%BE%E7%89%87%5Cn%20%20%20%20%20%20%20%20%20*%20%40param%20rightImageRes%5Cn%20%20%20%20%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20public%20Builder%20setRightImageRes(int%20rightImageRes)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.p.rightImageRes%3DrightImageRes%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20this%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%E8%AE%BE%E7%BD%AE%E5%8F%B3%E8%BE%B9%E6%96%87%E5%AD%97%5Cn%20%20%20%20%20%20%20%20%20*%20%40param%20rightTextRes%5Cn%20%20%20%20%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20public%20Builder%20setRightTextRes(int%20rightTextRes)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.p.rightTextRes%3DrightTextRes%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20this%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%E8%AE%BE%E7%BD%AE%E5%B7%A6%E8%BE%B9%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20%20%20%20%20%20*%20%40param%20leftOnclickListener%5Cn%20%20%20%20%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20public%20Builder%20setLeftOnclickListener(View.OnClickListener%20leftOnclickListener)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.p.leftOnclickListener%3DleftOnclickListener%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20this%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%E8%AE%BE%E7%BD%AE%E5%8F%B3%E8%BE%B9%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20%20%20%20%20%20*%20%40param%20rightOnClickListener%5Cn%20%20%20%20%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20public%20Builder%20setRightOnClickListener(View.OnClickListener%20rightOnClickListener)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.p.rightOnClickListener%3DrightOnClickListener%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20this%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20%2F**%5Cn%20%20%20%20%20%20%20%20%20*%20%3Cp%3E%E8%BF%99%E4%B8%AA%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%E4%BA%86%E4%B9%8B%E5%90%8E%EF%BC%8C%E8%BF%98%E6%B2%A1%E6%9C%89%E7%BB%93%E6%9D%9F%EF%BC%8C%E8%BF%98%E9%9C%80%E8%A6%81%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3%E4%B8%AD%E7%9A%84build()%E6%96%B9%E6%B3%95%3C%2Fp%3E%5Cn%20%20%20%20%20%20%20%20%20*%20%3Cp%3EHomeNavigation%E7%9A%84%E6%98%AF%E4%B8%8A%E5%B1%82%E7%88%B6%E7%B1%BB%EF%BC%8C%E6%98%AFINavigation%E7%9A%84%E5%AE%9E%E7%8E%B0%E7%B1%BB%EF%BC%8C%3C%2Fp%3E%5Cn%20%20%20%20%20%20%20%20%20*%20%3Cp%3E%E6%89%80%E4%BB%A5%E5%BD%93%E5%89%8DINavigation%E7%9A%84build()%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%E6%97%B6%EF%BC%8C%E4%B9%9F%E5%B0%B1%E7%9B%B8%E5%BD%93%E4%BA%8E%E6%8E%A5%E5%8F%A3%E5%9B%9E%E8%B0%83%E4%BA%86%EF%BC%8Cbuilder%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%9F%E5%B0%B1%E5%AE%8C%E6%88%90%3C%2Fp%3E%5Cn%20%20%20%20%20%20%20%20%20*%20%3Cp%3E%E7%94%A8%E6%88%B7%E8%BF%98%E9%9C%80%E8%A6%81%E5%86%8D%E8%B0%83%E7%94%A8%E6%9C%80%E9%AB%98%E5%B1%82%E6%8E%A5%E5%8F%A3%EF%BC%8C%E5%B7%B2%E7%BB%8F%E8%AE%BE%E8%AE%A1%E5%A5%BD%E7%9A%84%E6%96%B9%E6%B3%95build()%E6%96%B9%E6%B3%95%3C%2Fp%3E%5Cn%20%20%20%20%20%20%20%20%20*%20%3Cp%3E%E8%BF%99%E4%B8%AAbuilder%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AE%80%E7%9B%B4%E5%B1%8C%E7%82%B8%E5%A4%A9%3C%2Fp%3E%5Cn%20%20%20%20%20%20%20%20%20*%20%40return%5Cn%20%20%20%20%20%20%20%20%20*%2F%5Cn%20%20%20%20%20%20%20%20%40Override%5Cn%20%20%20%20%20%20%20%20public%20INavigation%20create()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20new%20HomeNavigation(p)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20int%20bindLayoutId()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20super.bindLayoutId()%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20int%20bindLeftLayoutId()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20R.layout.navigation_default_left%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20int%20bindCenterLayoutId()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20R.layout.navigation_default_center%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20int%20bindRightLayoutId()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20R.layout.navigation_home_right%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20initLeftLayout(View%20view)%20%7B%5Cn%20%20%20%20%20%20%20%20ImageView%20iv_default_left%20%3D%20(ImageView)%20view.findViewById(R.id.iv_default_left)%3B%5Cn%20%20%20%20%20%20%20%20iv_default_left.setImageResource(getParams().leftImageRes)%3B%5Cn%20%20%20%20%20%20%20%20iv_default_left.setOnClickListener(getParams().leftOnclickListener)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20initCenterLayout(View%20view)%20%7B%5Cn%20%20%20%20%20%20%20%20TextView%20tv_default_center%20%3D%20(TextView)%20view.findViewById(R.id.tv_default_center)%3B%5Cn%20%20%20%20%20%20%20%20tv_default_center.setText(getString(getParams().centerTitleRes))%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20initRightLayout(View%20view)%20%7B%5Cn%20%20%20%20%20%20%20%20TextView%20tv_home_right%20%3D%20(TextView)%20view.findViewById(R.id.tv_home_right)%3B%5Cn%20%20%20%20%20%20%20%20tv_home_right.setText(getString(getParams().rightTextRes))%3B%5Cn%20%20%20%20%20%20%20%20tv_home_right.setOnClickListener(getParams().rightOnClickListener)%3B%5Cn%20%20%20%20%20%20%20%20ImageView%20iv_home_right%3D%20(ImageView)%20view.findViewById(R.id.iv_home_right)%3B%5Cn%20%20%20%20%20%20%20%20iv_home_right.setImageResource(getParams().rightImageRes)%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%90%AF%E5%8A%A8%E9%87%91%E5%B8%81%E5%8A%A8%E7%94%BB%5Cn%20%20%20%20%20%20%20%20AnimationDrawable%20animationDrawable%3D%20(AnimationDrawable)%20iv_home_right.getBackground()%3B%5Cn%20%20%20%20%20%20%20%20animationDrawable.start()%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"gzCTn\">HomeNavigation的调用,即实例化</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22aa0e9d0c%22%2C%22code%22%3A%22private%20void%20initNavigation(View%20contentView)%20%7B%5Cn%5CnHomeNavigation.Builder%20builder%3Dnew%20HomeNavigation.Builder%5Cn(getActivity()%2C%20(ViewGroup)%20contentView)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20builder.setLeftImageRes(R.mipmap.apk_all_top_nav)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.setCenterTitleRes(R.string.tabbar_home_text)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.setRightTextRes(R.string.nav_sign_in)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.setRightImageRes(R.drawable.anim_sign_coin)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.setLeftOnclickListener(%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20new%20View.OnClickListener()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%40Override%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20public%20void%20onClick(View%20v)%20%7B%5Cn%5Ct%5Ct%5Ct%5Ct%20%20%20%20%20ToastUtil%20.showToast(getActivity()%2C%5Cn%5Ct%5Ct%5Ct%5Ct%20%20%20%20%20%5C%22%E7%82%B9%E5%87%BB%E4%BA%86%E8%8F%9C%E5%8D%95%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.setRightOnClickListener%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(new%20View.OnClickListener()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%40Override%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20public%20void%20onClick(View%20v)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ToastUtil.showToast(getActivity()%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%E7%82%B9%E5%87%BB%E4%BA%86%E7%AD%BE%E5%88%B0%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.create().build()%3B%5Cn%5Cn%20%20%20%20%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"bmmNN\">主页toolbar实现效果</h3><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1560594037506-246261ac-6c1a-4a07-a2f5-10904d4e47a7.png%22%2C%22originWidth%22%3A321%2C%22originHeight%22%3A217%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A321%2C%22height%22%3A217%7D\"></card></p><p><br /></p><h2 id=\"cp07W\">布局代码就不给了</h2>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-06-15T10:43:39.000Z",
    "deleted_at": null,
    "created_at": "2019-06-15T10:20:25.000Z",
    "updated_at": "2019-06-15T10:43:39.000Z",
    "published_at": "2019-06-15T10:43:39.000Z",
    "first_published_at": "2019-06-15T10:23:05.000Z",
    "word_count": 1888,
    "cover": null,
    "description": "tags: [设计模式,mvp,android设计模式]categories: 设计模式使用Builder设计模式，设计ToolBarBuilder设计模式解析android也有不地方采用了Builder设计模式的，比如NotificationCompat.Builder和AlertDialo...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1916710,
    "slug": "kcx0ku",
    "title": "设计模式之mvp设计模式",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [设计模式,mvp,android设计模式]<br />categories: 设计模式\n\n---\n\n\n<a name=\"MnP5e\"></a>\n# 参考链接\n\n[《android-architecture》-googlesample](https://github.com/googlesamples/android-architecture/tree/todo-mvp/)\n\n<a name=\"a1b97d97\"></a>\n# mvp设计模式\n\n<a name=\"f411d0f1\"></a>\n## 说明\n\n  和传统的mvc不同的的是，原先controller的概念变为presenter，原意为“代理”的意思，mvp设计模式中，model和view的交互完全由Presenter进行代理，简单理解就是，View请求Model时，是先发送给Presenter，Presenter收到请求，再发送请求给Model，Model响应数据回Presenter，Presenter再响应回View，此时完成交互。Model请求View也是差不多的过程。<br />  mvp设计模式在Android最为常用。\n\n<a name=\"58f3538c\"></a>\n## 传统MVC和MVP之间的图示比较\n\n![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1560609538338-a7b7ddad-8142-4f3f-a6de-a42e9ca574ed.png#align=left&display=inline&height=305&name=%E5%9B%BE%E7%89%87.png&originHeight=305&originWidth=612&size=66298&status=done&width=612)<br />![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1560609522736-9af018f0-8023-4170-b0a7-d00f9dac3c25.png#align=left&display=inline&height=189&name=%E5%9B%BE%E7%89%87.png&originHeight=189&originWidth=663&size=46261&status=done&width=663)\n\n<!--more-->\n<a name=\"a8ea117a\"></a>\n## google mvp\n\n![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1560609574407-ea399c51-ce34-4da6-89f4-e33617c0b6e7.png#align=left&display=inline&height=374&name=%E5%9B%BE%E7%89%87.png&originHeight=374&originWidth=552&size=224865&status=done&width=552)\n<a name=\"BasePresenter\"></a>\n### BasePresenter\n\n```java\npublic interface BasePresenter {\n    //可以用来初始化相关的数据\n    void start();\n}\n```\n\n<a name=\"BaseView\"></a>\n### BaseView\n\n```java\npublic interface BaseView<T> {\n    //view层可以引用Presenter\n    void setPresenter(T presenter);\n}\n```\n\n<a name=\"module\"></a>\n### module\n\n<a name=\"contract\"></a>\n#### contract\n这个是根据具体模块，抽象更多功能的类\n\n```java\npublic interface TasksContract {\n    interface View extends BaseView<Presenter> {\n//可以再设计更多抽象方法···············\n        void showTasks(List<Task> tasks);\n    }\n    interface Presenter extends BasePresenter {\n//可以再设计更多抽象方法···············\n        void loadTasks(boolean forceUpdate);\n    }\n}\n```\n\n<a name=\"View\"></a>\n#### View\n\n```java\npublic class TasksFragment extends Fragment implements TasksContract.View {\n    private TasksContract.Presenter mPresenter;\n//其他方法略····················\n    @Override\n    public void showTasks(List<Task> tasks) {\n        //Presenter向model获取数据后，将回调此方法，返回有数据的tasks给View层\n    }\n    @Override\n    public void setPresenter(@NonNull TasksContract.Presenter presenter) {\n    //Presenter实例化后回调TasksContract.View 中setPresenter()方法，从而View层也获取到Presenter的引用\n        mPresenter = checkNotNull(presenter);\n    }\n}\n```\n\n<a name=\"Presenter\"></a>\n#### Presenter\n\n```java\npublic class TasksPresenter implements TasksContract.Presenter {\n//数据层data包中的封装类\n    private final TasksRepository mTasksRepository;\n//view层\n    private final TasksContract.View mTasksView;\n    public TasksPresenter(@NonNull TasksRepository tasksRepository, @NonNull TasksContract.View tasksView) {\n        mTasksRepository = checkNotNull(tasksRepository, \"tasksRepository cannot be null\");\n        mTasksView = checkNotNull(tasksView, \"tasksView cannot be null!\");\n//使View层得到Presenter的引用\n        mTasksView.setPresenter(this);\n    }\n}\n```\n\n<a name=\"Activity\"></a>\n### Activity\n\n在Activity中初始化Presenter的实现类，即可完成MVP模式的分层,view层只做视图展示，model层负责查询数据，Presenter负责View和model的代理。\n\n```java\n// Create the presenter\nmTasksPresenter = new TasksPresenter(\n        Injection.provideTasksRepository(getApplicationContext()), tasksFragment);\n```\n",
    "body_draft": "",
    "body_html": "<p>tags: [设计模式<span>,mvp,android设计模式</span>]</p><p>categories: 设计模式</p><p><br /></p><hr /><p><br /></p><h1 id=\"MnP5e\">参考链接</h1><p><br /></p><p><a href=\"https://github.com/googlesamples/android-architecture/tree/todo-mvp/\" target=\"_blank\">《android-architecture》-googlesample</a></p><p><br /></p><h1 id=\"a1b97d97\">mvp设计模式</h1><p><br /></p><h2 id=\"f411d0f1\">说明</h2><p><br /></p><p>  和传统的mvc不同的的是，原先controller的概念变为presenter，原意为“代理”的意思，mvp设计模式中，model和view的交互完全由Presenter进行代理，简单理解就是，View请求Model时，是先发送给Presenter，Presenter收到请求，再发送请求给Model，Model响应数据回Presenter，Presenter再响应回View，此时完成交互。Model请求View也是差不多的过程。</p><p>  mvp设计模式在Android最为常用。</p><p><br /></p><h2 id=\"58f3538c\">传统MVC和MVP之间的图示比较</h2><p><br /></p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1560609538338-a7b7ddad-8142-4f3f-a6de-a42e9ca574ed.png#align=left&amp;display=inline&amp;height=305&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=305&amp;originWidth=612&amp;size=66298&amp;status=done&amp;width=612\" style=\"max-width: 600px; width: 612px;\" /></p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1560609522736-9af018f0-8023-4170-b0a7-d00f9dac3c25.png#align=left&amp;display=inline&amp;height=189&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=189&amp;originWidth=663&amp;size=46261&amp;status=done&amp;width=663\" style=\"max-width: 600px; width: 663px;\" /></p><p><br /></p><p>&lt;!--more--&gt;</p><h2 id=\"a8ea117a\">google mvp</h2><p><br /></p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1560609574407-ea399c51-ce34-4da6-89f4-e33617c0b6e7.png#align=left&amp;display=inline&amp;height=374&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=374&amp;originWidth=552&amp;size=224865&amp;status=done&amp;width=552\" style=\"max-width: 600px; width: 552px;\" /></p><h3 id=\"BasePresenter\">BasePresenter</h3><p><br /></p><pre data-lang=\"java\"><code>public interface BasePresenter {\n    //可以用来初始化相关的数据\n    void start();\n}</code></pre><p><br /></p><h3 id=\"BaseView\">BaseView</h3><p><br /></p><pre data-lang=\"java\"><code>public interface BaseView&lt;T&gt; {\n    //view层可以引用Presenter\n    void setPresenter(T presenter);\n}</code></pre><p><br /></p><h3 id=\"module\">module</h3><p><br /></p><h4 id=\"contract\">contract</h4><p>这个是根据具体模块，抽象更多功能的类</p><p><br /></p><pre data-lang=\"java\"><code>public interface TasksContract {\n    interface View extends BaseView&lt;Presenter&gt; {\n//可以再设计更多抽象方法···············\n        void showTasks(List&lt;Task&gt; tasks);\n    }\n    interface Presenter extends BasePresenter {\n//可以再设计更多抽象方法···············\n        void loadTasks(boolean forceUpdate);\n    }\n}</code></pre><p><br /></p><h4 id=\"View\">View</h4><p><br /></p><pre data-lang=\"java\"><code>public class TasksFragment extends Fragment implements TasksContract.View {\n    private TasksContract.Presenter mPresenter;\n//其他方法略····················\n    @Override\n    public void showTasks(List&lt;Task&gt; tasks) {\n        //Presenter向model获取数据后，将回调此方法，返回有数据的tasks给View层\n    }\n    @Override\n    public void setPresenter(@NonNull TasksContract.Presenter presenter) {\n    //Presenter实例化后回调TasksContract.View 中setPresenter()方法，从而View层也获取到Presenter的引用\n        mPresenter = checkNotNull(presenter);\n    }\n}</code></pre><p><br /></p><h4 id=\"Presenter\">Presenter</h4><p><br /></p><pre data-lang=\"java\"><code>public class TasksPresenter implements TasksContract.Presenter {\n//数据层data包中的封装类\n    private final TasksRepository mTasksRepository;\n//view层\n    private final TasksContract.View mTasksView;\n    public TasksPresenter(@NonNull TasksRepository tasksRepository, @NonNull TasksContract.View tasksView) {\n        mTasksRepository = checkNotNull(tasksRepository, &quot;tasksRepository cannot be null&quot;);\n        mTasksView = checkNotNull(tasksView, &quot;tasksView cannot be null!&quot;);\n//使View层得到Presenter的引用\n        mTasksView.setPresenter(this);\n    }\n}</code></pre><p><br /></p><h3 id=\"Activity\">Activity</h3><p><br /></p><p>在Activity中初始化Presenter的实现类，即可完成MVP模式的分层,view层只做视图展示，model层负责查询数据，Presenter负责View和model的代理。</p><p><br /></p><pre data-lang=\"java\"><code>// Create the presenter\nmTasksPresenter = new TasksPresenter(\n        Injection.provideTasksRepository(getApplicationContext()), tasksFragment);</code></pre>",
    "body_lake": "<!doctype lake><p>tags: [设计模式<span>,mvp,android设计模式</span>]</p><p>categories: 设计模式</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22ta1WY%22%7D\"></card><p><br /></p><h1 id=\"MnP5e\"><cursor />参考链接</h1><p><br /></p><p><a href=\"https://github.com/googlesamples/android-architecture/tree/todo-mvp/\" target=\"_blank\">《android-architecture》-googlesample</a></p><p><br /></p><h1 id=\"a1b97d97\">mvp设计模式</h1><p><br /></p><h2 id=\"f411d0f1\">说明</h2><p><br /></p><p>  和传统的mvc不同的的是，原先controller的概念变为presenter，原意为“代理”的意思，mvp设计模式中，model和view的交互完全由Presenter进行代理，简单理解就是，View请求Model时，是先发送给Presenter，Presenter收到请求，再发送请求给Model，Model响应数据回Presenter，Presenter再响应回View，此时完成交互。Model请求View也是差不多的过程。</p><p>  mvp设计模式在Android最为常用。</p><p><br /></p><h2 id=\"58f3538c\">传统MVC和MVP之间的图示比较</h2><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1560609538338-a7b7ddad-8142-4f3f-a6de-a42e9ca574ed.png%22%2C%22originWidth%22%3A612%2C%22originHeight%22%3A305%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A66298%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A612%2C%22height%22%3A305%7D\"></card></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1560609522736-9af018f0-8023-4170-b0a7-d00f9dac3c25.png%22%2C%22originWidth%22%3A663%2C%22originHeight%22%3A189%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A46261%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A663%2C%22height%22%3A189%7D\"></card></p><p><br /></p><p>&lt;!--more--&gt;</p><h2 id=\"a8ea117a\">google mvp</h2><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1560609574407-ea399c51-ce34-4da6-89f4-e33617c0b6e7.png%22%2C%22originWidth%22%3A552%2C%22originHeight%22%3A374%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A224865%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A552%2C%22height%22%3A374%7D\"></card></p><h3 id=\"BasePresenter\">BasePresenter</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2248a972e8%22%2C%22code%22%3A%22public%20interface%20BasePresenter%20%7B%5Cn%20%20%20%20%2F%2F%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3%E7%9A%84%E6%95%B0%E6%8D%AE%5Cn%20%20%20%20void%20start()%3B%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"BaseView\">BaseView</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22bc451fe4%22%2C%22code%22%3A%22public%20interface%20BaseView%3CT%3E%20%7B%5Cn%20%20%20%20%2F%2Fview%E5%B1%82%E5%8F%AF%E4%BB%A5%E5%BC%95%E7%94%A8Presenter%5Cn%20%20%20%20void%20setPresenter(T%20presenter)%3B%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"module\">module</h3><p><br /></p><h4 id=\"contract\">contract</h4><p>这个是根据具体模块，抽象更多功能的类</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%220ac627cb%22%2C%22code%22%3A%22public%20interface%20TasksContract%20%7B%5Cn%20%20%20%20interface%20View%20extends%20BaseView%3CPresenter%3E%20%7B%5Cn%2F%2F%E5%8F%AF%E4%BB%A5%E5%86%8D%E8%AE%BE%E8%AE%A1%E6%9B%B4%E5%A4%9A%E6%8A%BD%E8%B1%A1%E6%96%B9%E6%B3%95%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%5Cn%20%20%20%20%20%20%20%20void%20showTasks(List%3CTask%3E%20tasks)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20interface%20Presenter%20extends%20BasePresenter%20%7B%5Cn%2F%2F%E5%8F%AF%E4%BB%A5%E5%86%8D%E8%AE%BE%E8%AE%A1%E6%9B%B4%E5%A4%9A%E6%8A%BD%E8%B1%A1%E6%96%B9%E6%B3%95%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%5Cn%20%20%20%20%20%20%20%20void%20loadTasks(boolean%20forceUpdate)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h4 id=\"View\">View</h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%225519a66a%22%2C%22code%22%3A%22public%20class%20TasksFragment%20extends%20Fragment%20implements%20TasksContract.View%20%7B%5Cn%20%20%20%20private%20TasksContract.Presenter%20mPresenter%3B%5Cn%2F%2F%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95%E7%95%A5%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20showTasks(List%3CTask%3E%20tasks)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2FPresenter%E5%90%91model%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%90%8E%EF%BC%8C%E5%B0%86%E5%9B%9E%E8%B0%83%E6%AD%A4%E6%96%B9%E6%B3%95%EF%BC%8C%E8%BF%94%E5%9B%9E%E6%9C%89%E6%95%B0%E6%8D%AE%E7%9A%84tasks%E7%BB%99View%E5%B1%82%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20setPresenter(%40NonNull%20TasksContract.Presenter%20presenter)%20%7B%5Cn%20%20%20%20%2F%2FPresenter%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%90%8E%E5%9B%9E%E8%B0%83TasksContract.View%20%E4%B8%ADsetPresenter()%E6%96%B9%E6%B3%95%EF%BC%8C%E4%BB%8E%E8%80%8CView%E5%B1%82%E4%B9%9F%E8%8E%B7%E5%8F%96%E5%88%B0Presenter%E7%9A%84%E5%BC%95%E7%94%A8%5Cn%20%20%20%20%20%20%20%20mPresenter%20%3D%20checkNotNull(presenter)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h4 id=\"Presenter\">Presenter</h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22dde6dbdc%22%2C%22code%22%3A%22public%20class%20TasksPresenter%20implements%20TasksContract.Presenter%20%7B%5Cn%2F%2F%E6%95%B0%E6%8D%AE%E5%B1%82data%E5%8C%85%E4%B8%AD%E7%9A%84%E5%B0%81%E8%A3%85%E7%B1%BB%5Cn%20%20%20%20private%20final%20TasksRepository%20mTasksRepository%3B%5Cn%2F%2Fview%E5%B1%82%5Cn%20%20%20%20private%20final%20TasksContract.View%20mTasksView%3B%5Cn%20%20%20%20public%20TasksPresenter(%40NonNull%20TasksRepository%20tasksRepository%2C%20%40NonNull%20TasksContract.View%20tasksView)%20%7B%5Cn%20%20%20%20%20%20%20%20mTasksRepository%20%3D%20checkNotNull(tasksRepository%2C%20%5C%22tasksRepository%20cannot%20be%20null%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20mTasksView%20%3D%20checkNotNull(tasksView%2C%20%5C%22tasksView%20cannot%20be%20null!%5C%22)%3B%5Cn%2F%2F%E4%BD%BFView%E5%B1%82%E5%BE%97%E5%88%B0Presenter%E7%9A%84%E5%BC%95%E7%94%A8%5Cn%20%20%20%20%20%20%20%20mTasksView.setPresenter(this)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22mode%22%3A%22java%22%7D\"></card><p><br /></p><h3 id=\"Activity\">Activity</h3><p><br /></p><p>在Activity中初始化Presenter的实现类，即可完成MVP模式的分层,view层只做视图展示，model层负责查询数据，Presenter负责View和model的代理。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%228f00c56a%22%2C%22code%22%3A%22%2F%2F%20Create%20the%20presenter%5CnmTasksPresenter%20%3D%20new%20TasksPresenter(%5Cn%20%20%20%20%20%20%20%20Injection.provideTasksRepository(getApplicationContext())%2C%20tasksFragment)%3B%22%2C%22mode%22%3A%22java%22%7D\"></card>",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-13T14:26:10.000Z",
    "deleted_at": null,
    "created_at": "2019-06-15T10:03:17.000Z",
    "updated_at": "2019-07-13T14:26:10.000Z",
    "published_at": "2019-06-15T14:40:03.000Z",
    "first_published_at": "2019-06-15T10:16:20.000Z",
    "word_count": 482,
    "cover": null,
    "description": "tags: [设计模式,mvp,android设计模式]categories: 设计模式参考链接《android-architecture》-googlesamplemvp设计模式说明  和传统的mvc不同的的是，原先controller的概念变为presenter，原意为“代理”的意思，mv...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1769627,
    "slug": "ie8w42",
    "title": "oracle之表空间数据文件扩容",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [oracle,表空间]<br />categories: oracle\n\n---\n\n\n\n<a name=\"xLiK6\"></a>\n# 参考链接\n<a name=\"8DpMF\"></a>\n## 查询表空间使用情况\n\n```sql\n\n----查询表空间使用情况---     \n    \nSELECT UPPER(F.TABLESPACE_NAME) \"表空间名\",     \nD.TOT_GROOTTE_MB \"表空间大小(M)\",     \nD.TOT_GROOTTE_MB - F.TOTAL_BYTES \"已使用空间(M)\",     \nTO_CHAR(ROUND((D.TOT_GROOTTE_MB - F.TOTAL_BYTES) / D.TOT_GROOTTE_MB * 100,2),'990.99') \"使用比\",     \nF.TOTAL_BYTES \"空闲空间(M)\",     \nF.MAX_BYTES \"最大块(M)\"    \nFROM (SELECT TABLESPACE_NAME,     \nROUND(SUM(BYTES) / (1024 * 1024), 2) TOTAL_BYTES,     \nROUND(MAX(BYTES) / (1024 * 1024), 2) MAX_BYTES     \nFROM SYS.DBA_FREE_SPACE     \nGROUP BY TABLESPACE_NAME) F,     \n(SELECT DD.TABLESPACE_NAME,     \nROUND(SUM(DD.BYTES) / (1024 * 1024), 2) TOT_GROOTTE_MB     \nFROM SYS.DBA_DATA_FILES DD     \nGROUP BY DD.TABLESPACE_NAME) D     \nWHERE D.TABLESPACE_NAME = F.TABLESPACE_NAME     \nORDER BY 4 DESC;  \n\n```\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1558687529242-c9957964-97f0-4623-a24f-36fbb5504edb.png#align=left&display=inline&height=191&name=image.png&originHeight=191&originWidth=614&size=13664&status=done&width=614)\n\n```sql\n\n--查看表空间是否具有自动扩展的能力     \nSELECT T.TABLESPACE_NAME,D.FILE_NAME,     \nD.AUTOEXTENSIBLE,D.BYTES,D.MAXBYTES,D.STATUS     \nFROM DBA_TABLESPACES T,DBA_DATA_FILES D     \nWHERE T.TABLESPACE_NAME =D.TABLESPACE_NAME     \n ORDER BY TABLESPACE_NAME,FILE_NAME; \n```\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1558687557539-d579743f-cc38-4f5c-927b-b24816a50bef.png#align=left&display=inline&height=213&name=image.png&originHeight=213&originWidth=866&size=24491&status=done&width=866)\n\n<a name=\"woEPM\"></a>\n## 表空间扩容\n通常默认的表空间都一个数据文件\n<a name=\"xQFMD\"></a>\n### 给表空间增加数据文件\n```sql\n\nALTER TABLESPACE app_data ADD DATAFILE  \n'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP03.DBF' SIZE 50M;  \n```\n<a name=\"0s5nB\"></a>\n### 新增数据文件，并且允许数据文件自动增长\n\n```sql\nALTER TABLESPACE app_data ADD DATAFILE\n'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP04.DBF' SIZE 50M\nAUTOEXTEND ON NEXT 5M MAXSIZE 31G;\n```\n<a name=\"Bbhkr\"></a>\n### 允许已存在的数据文件自动增长\n```sql\n\nALTER DATABASE DATAFILE 'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP03.DBF'  \nAUTOEXTEND ON NEXT 5M MAXSIZE 100M;\n```\n\n<a name=\"Oe2uv\"></a>\n### 手工改变已存在数据文件的大小\n\n```sql\nALTER DATABASE DATAFILE 'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP02.DBF'  \nRESIZE 100M;\n```\n\n<a name=\"HuT2f\"></a>\n# oracle之表空间数据文件扩容\n",
    "body_draft": "",
    "body_html": "<p>tags: [oracle,<span>表空间</span>]</p><p>categories: <span>oracle</span></p><p><br /></p><hr /><p><br /></p><p><br /></p><h1 id=\"xLiK6\">参考链接</h1><h2 id=\"8DpMF\">查询表空间使用情况</h2><p><br /></p><pre data-lang=\"sql\"><code>\n----查询表空间使用情况---     \n    \nSELECT UPPER(F.TABLESPACE_NAME) &quot;表空间名&quot;,     \nD.TOT_GROOTTE_MB &quot;表空间大小(M)&quot;,     \nD.TOT_GROOTTE_MB - F.TOTAL_BYTES &quot;已使用空间(M)&quot;,     \nTO_CHAR(ROUND((D.TOT_GROOTTE_MB - F.TOTAL_BYTES) / D.TOT_GROOTTE_MB * 100,2),'990.99') &quot;使用比&quot;,     \nF.TOTAL_BYTES &quot;空闲空间(M)&quot;,     \nF.MAX_BYTES &quot;最大块(M)&quot;    \nFROM (SELECT TABLESPACE_NAME,     \nROUND(SUM(BYTES) / (1024 * 1024), 2) TOTAL_BYTES,     \nROUND(MAX(BYTES) / (1024 * 1024), 2) MAX_BYTES     \nFROM SYS.DBA_FREE_SPACE     \nGROUP BY TABLESPACE_NAME) F,     \n(SELECT DD.TABLESPACE_NAME,     \nROUND(SUM(DD.BYTES) / (1024 * 1024), 2) TOT_GROOTTE_MB     \nFROM SYS.DBA_DATA_FILES DD     \nGROUP BY DD.TABLESPACE_NAME) D     \nWHERE D.TABLESPACE_NAME = F.TABLESPACE_NAME     \nORDER BY 4 DESC;  \n</code></pre><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1558687529242-c9957964-97f0-4623-a24f-36fbb5504edb.png#align=left&amp;display=inline&amp;height=191&amp;name=image.png&amp;originHeight=191&amp;originWidth=614&amp;size=13664&amp;status=done&amp;width=614\" style=\"max-width: 600px; width: 614px;\" /></p><p><br /></p><pre data-lang=\"sql\"><code>\n--查看表空间是否具有自动扩展的能力     \nSELECT T.TABLESPACE_NAME,D.FILE_NAME,     \nD.AUTOEXTENSIBLE,D.BYTES,D.MAXBYTES,D.STATUS     \nFROM DBA_TABLESPACES T,DBA_DATA_FILES D     \nWHERE T.TABLESPACE_NAME =D.TABLESPACE_NAME     \n ORDER BY TABLESPACE_NAME,FILE_NAME; </code></pre><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1558687557539-d579743f-cc38-4f5c-927b-b24816a50bef.png#align=left&amp;display=inline&amp;height=213&amp;name=image.png&amp;originHeight=213&amp;originWidth=866&amp;size=24491&amp;status=done&amp;width=866\" style=\"max-width: 600px; width: 866px;\" /></p><p><br /></p><h2 id=\"woEPM\">表空间扩容</h2><p>通常默认的表空间都一个数据文件</p><h3 id=\"xQFMD\"><span style=\"color: #333333;\">给表空间增加数据文件</span></h3><pre data-lang=\"sql\"><code>\nALTER TABLESPACE app_data ADD DATAFILE  \n'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP03.DBF' SIZE 50M;  </code></pre><h3 id=\"0s5nB\"><span style=\"color: #333333;\">新增数据文件，并且允许数据文件自动增长</span></h3><p><br /></p><pre data-lang=\"sql\"><code>ALTER TABLESPACE app_data ADD DATAFILE\n'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP04.DBF' SIZE 50M\nAUTOEXTEND ON NEXT 5M MAXSIZE 31G;</code></pre><h3 id=\"Bbhkr\"><span style=\"color: #333333;\">允许已存在的数据文件自动增长</span></h3><pre data-lang=\"sql\"><code>\nALTER DATABASE DATAFILE 'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP03.DBF'  \nAUTOEXTEND ON NEXT 5M MAXSIZE 100M;</code></pre><p><br /></p><h3 id=\"Oe2uv\"><span style=\"color: #333333;\">手工改变已存在数据文件的大小</span></h3><p><br /></p><pre data-lang=\"sql\"><code>ALTER DATABASE DATAFILE 'D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\EDWTEST\\APP02.DBF'  \nRESIZE 100M;</code></pre><p><br /></p><h1 id=\"HuT2f\">oracle之表空间数据文件扩容</h1>",
    "body_lake": "<!doctype lake><p>tags: [oracle,<span>表空间</span>]</p><p>categories: <span>oracle</span></p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22ta1WY%22%7D\"></card><p><br /></p><p><br /></p><h1 id=\"xLiK6\">参考链接</h1><h2 id=\"8DpMF\">查询表空间使用情况</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%5Cn----%E6%9F%A5%E8%AF%A2%E8%A1%A8%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5---%20%20%20%20%20%5Cn%20%20%20%20%5CnSELECT%20UPPER(F.TABLESPACE_NAME)%20%5C%22%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D%5C%22%2C%20%20%20%20%20%5CnD.TOT_GROOTTE_MB%20%5C%22%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%A4%A7%E5%B0%8F(M)%5C%22%2C%20%20%20%20%20%5CnD.TOT_GROOTTE_MB%20-%20F.TOTAL_BYTES%20%5C%22%E5%B7%B2%E4%BD%BF%E7%94%A8%E7%A9%BA%E9%97%B4(M)%5C%22%2C%20%20%20%20%20%5CnTO_CHAR(ROUND((D.TOT_GROOTTE_MB%20-%20F.TOTAL_BYTES)%20%2F%20D.TOT_GROOTTE_MB%20*%20100%2C2)%2C'990.99')%20%5C%22%E4%BD%BF%E7%94%A8%E6%AF%94%5C%22%2C%20%20%20%20%20%5CnF.TOTAL_BYTES%20%5C%22%E7%A9%BA%E9%97%B2%E7%A9%BA%E9%97%B4(M)%5C%22%2C%20%20%20%20%20%5CnF.MAX_BYTES%20%5C%22%E6%9C%80%E5%A4%A7%E5%9D%97(M)%5C%22%20%20%20%20%5CnFROM%20(SELECT%20TABLESPACE_NAME%2C%20%20%20%20%20%5CnROUND(SUM(BYTES)%20%2F%20(1024%20*%201024)%2C%202)%20TOTAL_BYTES%2C%20%20%20%20%20%5CnROUND(MAX(BYTES)%20%2F%20(1024%20*%201024)%2C%202)%20MAX_BYTES%20%20%20%20%20%5CnFROM%20SYS.DBA_FREE_SPACE%20%20%20%20%20%5CnGROUP%20BY%20TABLESPACE_NAME)%20F%2C%20%20%20%20%20%5Cn(SELECT%20DD.TABLESPACE_NAME%2C%20%20%20%20%20%5CnROUND(SUM(DD.BYTES)%20%2F%20(1024%20*%201024)%2C%202)%20TOT_GROOTTE_MB%20%20%20%20%20%5CnFROM%20SYS.DBA_DATA_FILES%20DD%20%20%20%20%20%5CnGROUP%20BY%20DD.TABLESPACE_NAME)%20D%20%20%20%20%20%5CnWHERE%20D.TABLESPACE_NAME%20%3D%20F.TABLESPACE_NAME%20%20%20%20%20%5CnORDER%20BY%204%20DESC%3B%20%20%5Cn%22%2C%22id%22%3A%226s6lt%22%7D\"></card><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1558687529242-c9957964-97f0-4623-a24f-36fbb5504edb.png%22%2C%22originWidth%22%3A614%2C%22originHeight%22%3A191%2C%22name%22%3A%22image.png%22%2C%22size%22%3A13664%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A614%2C%22height%22%3A191%7D\"></card></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%5Cn--%E6%9F%A5%E7%9C%8B%E8%A1%A8%E7%A9%BA%E9%97%B4%E6%98%AF%E5%90%A6%E5%85%B7%E6%9C%89%E8%87%AA%E5%8A%A8%E6%89%A9%E5%B1%95%E7%9A%84%E8%83%BD%E5%8A%9B%20%20%20%20%20%5CnSELECT%20T.TABLESPACE_NAME%2CD.FILE_NAME%2C%20%20%20%20%20%5CnD.AUTOEXTENSIBLE%2CD.BYTES%2CD.MAXBYTES%2CD.STATUS%20%20%20%20%20%5CnFROM%20DBA_TABLESPACES%20T%2CDBA_DATA_FILES%20D%20%20%20%20%20%5CnWHERE%20T.TABLESPACE_NAME%20%3DD.TABLESPACE_NAME%20%20%20%20%20%5Cn%20ORDER%20BY%20TABLESPACE_NAME%2CFILE_NAME%3B%20%22%2C%22id%22%3A%22AQTWb%22%7D\"></card><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1558687557539-d579743f-cc38-4f5c-927b-b24816a50bef.png%22%2C%22originWidth%22%3A866%2C%22originHeight%22%3A213%2C%22name%22%3A%22image.png%22%2C%22size%22%3A24491%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A866%2C%22height%22%3A213%7D\"></card></p><p><br /></p><h2 id=\"woEPM\">表空间扩容</h2><p>通常默认的表空间都一个数据文件</p><h3 id=\"xQFMD\"><span style=\"color: #333333;\">给表空间增加数据文件</span></h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%5CnALTER%20TABLESPACE%20app_data%20ADD%20DATAFILE%20%20%5Cn'D%3A%5C%5CORACLE%5C%5CPRODUCT%5C%5C10.2.0%5C%5CORADATA%5C%5CEDWTEST%5C%5CAPP03.DBF'%20SIZE%2050M%3B%20%20%22%2C%22id%22%3A%22qdaDC%22%7D\"></card><h3 id=\"0s5nB\"><span style=\"color: #333333;\">新增数据文件，并且允许数据文件自动增长</span></h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22ALTER%20TABLESPACE%20app_data%20ADD%20DATAFILE%5Cn'D%3A%5C%5CORACLE%5C%5CPRODUCT%5C%5C10.2.0%5C%5CORADATA%5C%5CEDWTEST%5C%5CAPP04.DBF'%20SIZE%2050M%5CnAUTOEXTEND%20ON%20NEXT%205M%20MAXSIZE%2031G%3B%22%2C%22id%22%3A%22sMi8W%22%7D\"></card><h3 id=\"Bbhkr\"><span style=\"color: #333333;\">允许已存在的数据文件自动增长</span></h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%5CnALTER%20DATABASE%20DATAFILE%20'D%3A%5C%5CORACLE%5C%5CPRODUCT%5C%5C10.2.0%5C%5CORADATA%5C%5CEDWTEST%5C%5CAPP03.DBF'%20%20%5CnAUTOEXTEND%20ON%20NEXT%205M%20MAXSIZE%20100M%3B%22%2C%22id%22%3A%22oxQm4%22%7D\"></card><p><br /></p><h3 id=\"Oe2uv\"><span style=\"color: #333333;\">手工改变已存在数据文件的大小</span></h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22ALTER%20DATABASE%20DATAFILE%20'D%3A%5C%5CORACLE%5C%5CPRODUCT%5C%5C10.2.0%5C%5CORADATA%5C%5CEDWTEST%5C%5CAPP02.DBF'%20%20%5CnRESIZE%20100M%3B%22%2C%22id%22%3A%22liqZP%22%7D\"></card><p><br /></p><h1 id=\"HuT2f\">oracle之表空间数据文件扩容</h1>",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-07-02T07:27:55.000Z",
    "deleted_at": null,
    "created_at": "2019-05-24T08:37:39.000Z",
    "updated_at": "2019-07-02T07:27:55.000Z",
    "published_at": "2019-06-25T09:59:36.000Z",
    "first_published_at": "2019-06-24T09:12:19.000Z",
    "word_count": 392,
    "cover": null,
    "description": "tags: [oracle,表空间]categories: oracle参考链接查询表空间使用情况 ----查询表空间使用情况---           SELECT UPPER(F.TABLESPACE_NAME) &quot;表空间名&quot;,      D.TOT_GROOTTE_M...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1731563,
    "slug": "bgvw5i",
    "title": "oracle之不会触发索引的六个条件",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-21T08:36:41.000Z",
    "deleted_at": null,
    "created_at": "2019-05-21T08:29:48.000Z",
    "updated_at": "2019-05-24T08:37:11.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "转载链接https://www.cnblogs.com/dw008/articles/3258788.htmloracle之不会触发索引的六个条件Oracle 索引的目标是避免全表扫描，提高查询效率，但有些时候却适得其反。例如一张表中有上百万条数据，对某个字段加了索引，但是查询时性能并没有什么...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1633392,
    "slug": "xg2mli",
    "title": "java之如何使当前程序使用代理",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags:[java, 代理]\n\ncategories: java\n\n---\n\n\n<a name=\"VKpaC\"></a>\n# 参考链接\n\n[java中设置网络代理——简书@jijs](https://www.jianshu.com/p/9e1abe05314d) \n\n<a name=\"9rrtR\"></a>\n# java之如何使当前程序使用代理\n<a name=\"jldiB\"></a>\n## 概述\n<a name=\"cSPtQ\"></a>\n## java中支持的代理\njava中支持 HTTP代理、HTTPS代理、Socket代理、FTP代理 。\n\n<!--more-->\n<a name=\"emjLU\"></a>\n## 程序中编写程序使用代理\n\n```java\n//使用http协议\nSystem.setProperty(\"http.proxyHost\", \"192.168.10.130\");\nSystem.setProperty(\"http.proxyPort\", \"808\");\nSystem.setProperty(\"http.nonProxyHosts\", \"192.168.3.249 | 192.168.3.100\");\n//https代理\nSystem.setProperty(\"https.proxyHost\", \"192.168.10.130\");\nSystem.setProperty(\"https.proxyPort\", \"808\");\nSystem.setProperty(\"https.nonProxyHosts\", \"192.168.3.249 | 192.168.3.100\");\n//ftp代理\nSystem.setProperty(\"ftp.proxyHost\", \"192.168.10.130\");\nSystem.setProperty(\"ftp.proxyPort\", \"808\");\nSystem.setProperty(\"ftp.nonProxyHosts\", \"192.168.3.249 | 192.168.3.100\");\n//使用socks协议连接\nProperties prop = System.getProperties();\nprop.put(\"proxySet\", true);\nprop.setProperty(\"socksProxyHost\", \"143.168.16.188\");\nprop.setProperty(\"socksProxyPort\", \"1780\");\n//注意：socks无法使用忽略IP配置\n//prop.setProperty(\"nonProxyHosts\", \"192.168.1.82\");//192.168.1.82 | 192.168.3.100\n\n```\n\n<a name=\"lasfA\"></a>\n## jvm变量中设置代理\n\n```powershell\n# 在系统启动时，使用-D项来设置代理。\n# http代理\njava -Dhttp.ProxyHost=143.168.16.188 -Dhttp.ProxyPort=1780 com.test.mydemo\n# https代理\njava -Dhttps.ProxyHost=143.168.16.188 -Dhttps.ProxyPort=1780 com.test.mydemo\n# ftp代理\njava -Dftp.ProxyHost=143.168.16.188 -Dftp.ProxyPort=1780 com.test.mydemo\n# socks代理\njava -Dsocks.ProxyHost=143.168.16.188 -Dsocks.ProxyPort=1780 com.test.mydemo\n```\n\n",
    "body_draft": "",
    "body_html": "<p><span style=\"background-color: transparent;\">tags:[</span><span style=\"background-color: transparent;\">java</span><span style=\"background-color: transparent;\">, </span><span style=\"background-color: transparent;\">代理</span><span style=\"background-color: transparent;\">]</span><br /></p><p>categories: <span>java</span></p><hr /><p><br /></p><h1 id=\"VKpaC\">参考链接</h1><p><br /></p><p><a href=\"https://www.jianshu.com/p/9e1abe05314d\" target=\"_blank\">java中设置网络代理——简书@jijs</a> </p><p><br /></p><h1 id=\"9rrtR\">java之如何使当前程序使用代理</h1><h2 id=\"jldiB\">概述</h2><h2 id=\"cSPtQ\">java中支持的代理</h2><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">java中支持 HTTP代理、HTTPS代理、Socket代理、FTP代理 。</span></p><p><br /></p><p>&lt;!--more--&gt;</p><h2 id=\"emjLU\">程序中编写程序使用代理</h2><p><br /></p><pre data-lang=\"java\"><code>//使用http协议\nSystem.setProperty(&quot;http.proxyHost&quot;, &quot;192.168.10.130&quot;);\nSystem.setProperty(&quot;http.proxyPort&quot;, &quot;808&quot;);\nSystem.setProperty(&quot;http.nonProxyHosts&quot;, &quot;192.168.3.249 | 192.168.3.100&quot;);\n//https代理\nSystem.setProperty(&quot;https.proxyHost&quot;, &quot;192.168.10.130&quot;);\nSystem.setProperty(&quot;https.proxyPort&quot;, &quot;808&quot;);\nSystem.setProperty(&quot;https.nonProxyHosts&quot;, &quot;192.168.3.249 | 192.168.3.100&quot;);\n//ftp代理\nSystem.setProperty(&quot;ftp.proxyHost&quot;, &quot;192.168.10.130&quot;);\nSystem.setProperty(&quot;ftp.proxyPort&quot;, &quot;808&quot;);\nSystem.setProperty(&quot;ftp.nonProxyHosts&quot;, &quot;192.168.3.249 | 192.168.3.100&quot;);\n//使用socks协议连接\nProperties prop = System.getProperties();\nprop.put(&quot;proxySet&quot;, true);\nprop.setProperty(&quot;socksProxyHost&quot;, &quot;143.168.16.188&quot;);\nprop.setProperty(&quot;socksProxyPort&quot;, &quot;1780&quot;);\n//注意：socks无法使用忽略IP配置\n//prop.setProperty(&quot;nonProxyHosts&quot;, &quot;192.168.1.82&quot;);//192.168.1.82 | 192.168.3.100\n</code></pre><p><br /></p><h2 id=\"lasfA\">jvm变量中设置代理</h2><p><br /></p><pre data-lang=\"powershell\"><code># 在系统启动时，使用-D项来设置代理。\n# http代理\njava -Dhttp.ProxyHost=143.168.16.188 -Dhttp.ProxyPort=1780 com.test.mydemo\n# https代理\njava -Dhttps.ProxyHost=143.168.16.188 -Dhttps.ProxyPort=1780 com.test.mydemo\n# ftp代理\njava -Dftp.ProxyHost=143.168.16.188 -Dftp.ProxyPort=1780 com.test.mydemo\n# socks代理\njava -Dsocks.ProxyHost=143.168.16.188 -Dsocks.ProxyPort=1780 com.test.mydemo</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><p><span style=\"background-color: transparent;\">tags:<cursor />[</span><span style=\"background-color: transparent;\">java</span><span style=\"background-color: transparent;\">, </span><span style=\"background-color: transparent;\">代理</span><span style=\"background-color: transparent;\">]</span><br /></p><p>categories: <span>java</span></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22TEC2k%22%7D\"></card><p><br /></p><h1 id=\"VKpaC\">参考链接</h1><p><br /></p><p><a href=\"https://www.jianshu.com/p/9e1abe05314d\" target=\"_blank\">java中设置网络代理——简书@jijs</a> </p><p><br /></p><h1 id=\"9rrtR\">java之如何使当前程序使用代理</h1><h2 id=\"jldiB\">概述</h2><h2 id=\"cSPtQ\">java中支持的代理</h2><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">java中支持 HTTP代理、HTTPS代理、Socket代理、FTP代理 。</span></p><p><br /></p><p>&lt;!--more--&gt;</p><h2 id=\"emjLU\">程序中编写程序使用代理</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%2F%2F%E4%BD%BF%E7%94%A8http%E5%8D%8F%E8%AE%AE%5CnSystem.setProperty(%5C%22http.proxyHost%5C%22%2C%20%5C%22192.168.10.130%5C%22)%3B%5CnSystem.setProperty(%5C%22http.proxyPort%5C%22%2C%20%5C%22808%5C%22)%3B%5CnSystem.setProperty(%5C%22http.nonProxyHosts%5C%22%2C%20%5C%22192.168.3.249%20%7C%20192.168.3.100%5C%22)%3B%5Cn%2F%2Fhttps%E4%BB%A3%E7%90%86%5CnSystem.setProperty(%5C%22https.proxyHost%5C%22%2C%20%5C%22192.168.10.130%5C%22)%3B%5CnSystem.setProperty(%5C%22https.proxyPort%5C%22%2C%20%5C%22808%5C%22)%3B%5CnSystem.setProperty(%5C%22https.nonProxyHosts%5C%22%2C%20%5C%22192.168.3.249%20%7C%20192.168.3.100%5C%22)%3B%5Cn%2F%2Fftp%E4%BB%A3%E7%90%86%5CnSystem.setProperty(%5C%22ftp.proxyHost%5C%22%2C%20%5C%22192.168.10.130%5C%22)%3B%5CnSystem.setProperty(%5C%22ftp.proxyPort%5C%22%2C%20%5C%22808%5C%22)%3B%5CnSystem.setProperty(%5C%22ftp.nonProxyHosts%5C%22%2C%20%5C%22192.168.3.249%20%7C%20192.168.3.100%5C%22)%3B%5Cn%2F%2F%E4%BD%BF%E7%94%A8socks%E5%8D%8F%E8%AE%AE%E8%BF%9E%E6%8E%A5%5CnProperties%20prop%20%3D%20System.getProperties()%3B%5Cnprop.put(%5C%22proxySet%5C%22%2C%20true)%3B%5Cnprop.setProperty(%5C%22socksProxyHost%5C%22%2C%20%5C%22143.168.16.188%5C%22)%3B%5Cnprop.setProperty(%5C%22socksProxyPort%5C%22%2C%20%5C%221780%5C%22)%3B%5Cn%2F%2F%E6%B3%A8%E6%84%8F%EF%BC%9Asocks%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E5%BF%BD%E7%95%A5IP%E9%85%8D%E7%BD%AE%5Cn%2F%2Fprop.setProperty(%5C%22nonProxyHosts%5C%22%2C%20%5C%22192.168.1.82%5C%22)%3B%2F%2F192.168.1.82%20%7C%20192.168.3.100%5Cn%22%2C%22id%22%3A%22UUq8r%22%7D\"></card><p><br /></p><h2 id=\"lasfA\">jvm变量中设置代理</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22%23%20%E5%9C%A8%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%97%B6%EF%BC%8C%E4%BD%BF%E7%94%A8-D%E9%A1%B9%E6%9D%A5%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86%E3%80%82%5Cn%23%20http%E4%BB%A3%E7%90%86%5Cnjava%20-Dhttp.ProxyHost%3D143.168.16.188%20-Dhttp.ProxyPort%3D1780%20com.test.mydemo%5Cn%23%20https%E4%BB%A3%E7%90%86%5Cnjava%20-Dhttps.ProxyHost%3D143.168.16.188%20-Dhttps.ProxyPort%3D1780%20com.test.mydemo%5Cn%23%20ftp%E4%BB%A3%E7%90%86%5Cnjava%20-Dftp.ProxyHost%3D143.168.16.188%20-Dftp.ProxyPort%3D1780%20com.test.mydemo%5Cn%23%20socks%E4%BB%A3%E7%90%86%5Cnjava%20-Dsocks.ProxyHost%3D143.168.16.188%20-Dsocks.ProxyPort%3D1780%20com.test.mydemo%22%2C%22id%22%3A%22z7dnI%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-07T09:28:50.000Z",
    "deleted_at": null,
    "created_at": "2019-05-05T04:13:10.000Z",
    "updated_at": "2019-05-30T06:20:28.000Z",
    "published_at": "2019-05-05T13:42:32.000Z",
    "first_published_at": "2019-05-05T06:14:05.000Z",
    "word_count": 342,
    "cover": null,
    "description": "tags:[java, 代理]categories: java参考链接java中设置网络代理——简书@jijs java之如何使当前程序使用代理概述java中支持的代理java中支持 HTTP代理、HTTPS代理、Socket代理、FTP代理 。&lt;!--more--&gt;程序中编写程序...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1522553,
    "slug": "sdy2y3",
    "title": "js之IE浏览器下打开F12，js才能正常运行",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-04-12T14:58:08.000Z",
    "deleted_at": null,
    "created_at": "2019-04-12T03:36:39.000Z",
    "updated_at": "2019-04-12T14:58:08.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "参考链接解决IE8及以下浏览器不支持console代码——前端开发博客@1644View  js之IE浏览器下打开F12，js才能正常运行",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1432823,
    "slug": "at1mwy",
    "title": "java之各种日期格式",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-27T03:45:49.000Z",
    "deleted_at": null,
    "created_at": "2019-03-27T03:45:44.000Z",
    "updated_at": "2019-03-27T03:46:02.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1421799,
    "slug": "sogvik",
    "title": "oracle之记录被另一个用户锁住",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [oracle,数据库]<br />categories: oracle\n\n---\n\n\n<a name=\"ea6f3b87\"></a>\n# 参考链接\n[oracle \"记录被另一个用户锁定\"——博客园@流年煮雪](https://www.cnblogs.com/angusbao/p/7521430.html)\n\n<!--more-->\n<a name=\"ef2bb941\"></a>\n# oracle之记录被另一个用户锁住\n\n```powershell\nSQL> select object_id,session_id,locked_mode from v$locked_object;\n\n OBJECT_ID SESSION_ID LOCKED_MODE\n\n---------- ---------- -----------\n\n    74605         11           3\n\nSQL> select t2.username,t2.sid,t2.serial#,t2.logon_time from v$locked_object t1,\n\nv$session t2 where t1.session_id=t2.sid order by t2.logon_time;\n\nUSERNAME                        SID        SERIAL#    LOGON_TIME\n\n------------------------------ ---------- ---------- --------------\n\nFSET                                11       2430     25-3月 -19\n\nSQL>  alter system kill session '11,2430' ;\n\n系统已更改。\n\nSQL> select object_id,session_id,locked_mode from v$locked_object;\n\n未选定行\n```\n\n",
    "body_draft": "",
    "body_html": "<p>tags: [<span>oracle</span>,数据库]</p><p>categories: oracle</p><p><br /></p><hr /><p><br /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://www.cnblogs.com/angusbao/p/7521430.html\" target=\"_blank\">oracle &quot;记录被另一个用户锁定&quot;——博客园@流年煮雪</a></p><p><br /></p><p><span>&lt;!--more--&gt;</span></p><h1 id=\"ef2bb941\">oracle之记录被另一个用户锁住</h1><p><br /></p><pre data-lang=\"powershell\"><code>SQL&gt; select object_id,session_id,locked_mode from v$locked_object;\n\n OBJECT_ID SESSION_ID LOCKED_MODE\n\n---------- ---------- -----------\n\n    74605         11           3\n\nSQL&gt; select t2.username,t2.sid,t2.serial#,t2.logon_time from v$locked_object t1,\n\nv$session t2 where t1.session_id=t2.sid order by t2.logon_time;\n\nUSERNAME                        SID        SERIAL#    LOGON_TIME\n\n------------------------------ ---------- ---------- --------------\n\nFSET                                11       2430     25-3月 -19\n\nSQL&gt;  alter system kill session '11,2430' ;\n\n系统已更改。\n\nSQL&gt; select object_id,session_id,locked_mode from v$locked_object;\n\n未选定行</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><p>tags: [<span>oracle</span>,数据库]</p><p>categories: oracle</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22SRxYL%22%7D\"></card><p><br /><cursor /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://www.cnblogs.com/angusbao/p/7521430.html\" target=\"_blank\">oracle &quot;记录被另一个用户锁定&quot;——博客园@流年煮雪</a></p><p><br /></p><p><span>&lt;!--more--&gt;</span></p><h1 id=\"ef2bb941\">oracle之记录被另一个用户锁住</h1><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22SQL%3E%20select%20object_id%2Csession_id%2Clocked_mode%20from%20v%24locked_object%3B%5Cn%5Cn%20OBJECT_ID%20SESSION_ID%20LOCKED_MODE%5Cn%5Cn----------%20----------%20-----------%5Cn%5Cn%20%20%20%2074605%20%20%20%20%20%20%20%20%2011%20%20%20%20%20%20%20%20%20%20%203%5Cn%5CnSQL%3E%20select%20t2.username%2Ct2.sid%2Ct2.serial%23%2Ct2.logon_time%20from%20v%24locked_object%20t1%2C%5Cn%5Cnv%24session%20t2%20where%20t1.session_id%3Dt2.sid%20order%20by%20t2.logon_time%3B%5Cn%5CnUSERNAME%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20SID%20%20%20%20%20%20%20%20SERIAL%23%20%20%20%20LOGON_TIME%5Cn%5Cn------------------------------%20----------%20----------%20--------------%5Cn%5CnFSET%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2011%20%20%20%20%20%20%202430%20%20%20%20%2025-3%E6%9C%88%20-19%5Cn%5CnSQL%3E%20%20alter%20system%20kill%20session%20'11%2C2430'%20%3B%5Cn%5Cn%E7%B3%BB%E7%BB%9F%E5%B7%B2%E6%9B%B4%E6%94%B9%E3%80%82%5Cn%5CnSQL%3E%20select%20object_id%2Csession_id%2Clocked_mode%20from%20v%24locked_object%3B%5Cn%5Cn%E6%9C%AA%E9%80%89%E5%AE%9A%E8%A1%8C%22%2C%22id%22%3A%22yd9Di%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-05T07:19:52.000Z",
    "deleted_at": null,
    "created_at": "2019-03-25T03:58:05.000Z",
    "updated_at": "2019-05-05T07:19:52.000Z",
    "published_at": "2019-05-05T07:19:52.000Z",
    "first_published_at": "2019-03-25T04:05:35.000Z",
    "word_count": 136,
    "cover": null,
    "description": "tags: [oracle,数据库]categories: oracle参考链接oracle &quot;记录被另一个用户锁定&quot;——博客园@流年煮雪&lt;!--more--&gt;oracle之记录被另一个用户锁住SQL&gt; select object_id,session_i...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1420669,
    "slug": "gmwolv",
    "title": "工具之tcping",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-25T02:14:22.000Z",
    "deleted_at": null,
    "created_at": "2019-03-25T02:14:05.000Z",
    "updated_at": "2019-03-25T02:14:22.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "http://www.maixj.net/ict/tcping-14064",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1397287,
    "slug": "sh387r",
    "title": "oracle之索引",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-19T15:58:26.000Z",
    "deleted_at": null,
    "created_at": "2019-03-19T15:41:41.000Z",
    "updated_at": "2019-03-19T15:58:26.000Z",
    "published_at": "2019-03-19T15:41:41.000Z",
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1380264,
    "slug": "br8s4r",
    "title": "定时任务之cron表达式",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-16T09:51:38.000Z",
    "deleted_at": null,
    "created_at": "2019-03-16T09:50:00.000Z",
    "updated_at": "2019-03-16T09:51:38.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "参考链接java 定时任务之——cron表达式详解——CSDN@萝卜-青菜  ",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1335480,
    "slug": "ug2d5n",
    "title": "spring boot之配置数据源时提示无法加载驱动类",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [oracle,spring,spring boot]<br />categories: spring boot\n\n---\n\n\n<a name=\"ea6f3b87\"></a>\n# 参考链接\n[](https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721)[Difference between Oracle jdbc driver classes?](https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721)[——stackoverflow@bw_üezi](https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721)  \n\n<!--more-->\n<a name=\"af3c8dff\"></a>\n# spring boot之配置数据源时提示spring boot Cannot load driver class: oracle.jdbc.driver.OracleDriver\n\n1. 环境的maven是自定义了本地仓库位置，但是idea配置maven的设置时却引用的C:\\Users\\Administrator\\.m2\\repository，如果自定义了，iDea中也一定要配置好。\n1. Idea设置问题，由于我环境的maven是自定义了本地仓库位置，但是idea配置maven的设置时却引用的C:\\Users\\Administrator\\.m2\\repository，如果自定义了，iDea中也一定要配置好。\n\n<!--more-->\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1551884347572-64098d3c-b391-4934-9ee4-793fb17d85a6.png#align=left&display=inline&height=649&name=image.png&originHeight=649&originWidth=818&size=43119&status=done&width=818)\n\n3. oracle9i开始就不允许使用__oracle.jdbc.driver.OracleDriver__驱动名,而需要使用****oracle.jdbc.OracleDriver****\n\n \n\n4. 没有初始化相应的bean，或者没有使用注解@Bean使用于相关数源方法，以下我是之前错误的代码\n\n```java\n@ConfigurationProperties(\"oracle.datasource\")\npublic DataSourceProperties oracleDataSourceProperties(){\n   return new DataSourceProperties();\n}\n@Bean\npublic DataSource oracleDataSource() {\n   DataSourceProperties dataSourceProperties =oracleDataSourceProperties();\n   System.out.println(\"oracle.datasource: {}\"+dataSourceProperties.getUrl());\n   return dataSourceProperties.initializeDataSourceBuilder().build();\n}\n@Bean\n@Resource\npublic PlatformTransactionManager oracleTxManager(DataSource oracleDataSource) {\n   return new DataSourceTransactionManager(oracleDataSource);\n}\n```\n\n以上如果仔细看，可以看到oracleDataSourceProperties()这个方法没有使用注解@Bean，导致其一个bean在初始时找不到,我在打印输出时提示“oracle.datasource: {}null”\n",
    "body_draft": "",
    "body_html": "<p>tags: [<span>oracle,spring,spring boot</span>]</p><p>categories: spring boot</p><p><br /></p><hr /><p><br /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721\" target=\"_blank\"></a><a href=\"https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721\" target=\"_blank\">Difference between Oracle jdbc driver classes?</a><a href=\"https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721\" target=\"_blank\">——stackoverflow@bw_üezi</a>  </p><p><br /></p><p>&lt;!--more--&gt;</p><h1 id=\"af3c8dff\">spring boot之配置数据源时提示spring boot Cannot load driver class: oracle.jdbc.driver.OracleDriver</h1><ol start=\"1\"><li><span class=\"lake-fontsize-10\">环境的maven是自定义了本地仓库位置，但是idea配置maven的设置时却引用的C:\\Users\\Administrator\\.m2\\repository，如果自定义了，iDea中也一定要配置好。</span></li><li><span class=\"lake-fontsize-10\">Idea设置问题，由于我环境的maven是自定义了本地仓库位置，但是idea配置maven的设置时却引用的C:\\Users\\Administrator\\.m2\\repository，如果自定义了，iDea中也一定要配置好。</span></li></ol><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1551884347572-64098d3c-b391-4934-9ee4-793fb17d85a6.png#align=left&amp;display=inline&amp;height=649&amp;name=image.png&amp;originHeight=649&amp;originWidth=818&amp;size=43119&amp;status=done&amp;width=818\" style=\"max-width: 600px; width: 818px;\" /></p><ol start=\"3\"><li><span class=\"lake-fontsize-12\">oracle9i开始就不允许使用</span><em><em>oracle.jdbc.driver.OracleDriver</em></em><span class=\"lake-fontsize-12\">驱动名,而需要使用</span><strong><strong>oracle.jdbc.OracleDriver</strong></strong></li></ol><p><span class=\"lake-fontsize-10\" style=\"color: #000000;\"> </span></p><ol start=\"4\"><li><span class=\"lake-fontsize-10\" style=\"color: #000000;\">没有初始化相应的bean，或者没有使用注解@Bean使用于相关数源方法，以下我是之前错误的代码</span></li></ol><p><br /></p><pre data-lang=\"java\"><code>@ConfigurationProperties(&quot;oracle.datasource&quot;)\npublic DataSourceProperties oracleDataSourceProperties(){\n   return new DataSourceProperties();\n}\n@Bean\npublic DataSource oracleDataSource() {\n   DataSourceProperties dataSourceProperties =oracleDataSourceProperties();\n   System.out.println(&quot;oracle.datasource: {}&quot;+dataSourceProperties.getUrl());\n   return dataSourceProperties.initializeDataSourceBuilder().build();\n}\n@Bean\n@Resource\npublic PlatformTransactionManager oracleTxManager(DataSource oracleDataSource) {\n   return new DataSourceTransactionManager(oracleDataSource);\n}</code></pre><p><br /></p><p><span class=\"lake-fontsize-10\" style=\"color: #000000;\">以上如果仔细看，可以看到</span><span class=\"lake-fontsize-10\" style=\"color: #000000;\">oracleDataSourceProperties</span><span class=\"lake-fontsize-10\" style=\"color: #000000;\">()这个方法没有使用注解@Bean，导致其一个bean在初始时找不到,我在打印输出时提示“<span class=\"lake-fontsize-10\" style=\"color: #000000;\">oracle.datasource: {}null</span>”</span></p>",
    "body_lake": "<!doctype lake><p>tags: [<span>oracle,spring,spring boot</span>]</p><p>categories: spring boot</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22ta1WY%22%7D\"></card><p><br /><cursor /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721\" target=\"_blank\"></a><a href=\"https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721\" target=\"_blank\">Difference between Oracle jdbc driver classes?</a><a href=\"https://stackoverflow.com/questions/6202653/difference-between-oracle-jdbc-driver-classes/6202721#6202721\" target=\"_blank\">——stackoverflow@bw_üezi</a>  </p><p><br /></p><p>&lt;!--more--&gt;</p><h1 id=\"af3c8dff\">spring boot之配置数据源时提示spring boot Cannot load driver class: oracle.jdbc.driver.OracleDriver</h1><ol start=\"1\"><li><span class=\"lake-fontsize-10\">环境的maven是自定义了本地仓库位置，但是idea配置maven的设置时却引用的C:\\Users\\Administrator\\.m2\\repository，如果自定义了，iDea中也一定要配置好。</span></li><li><span class=\"lake-fontsize-10\">Idea设置问题，由于我环境的maven是自定义了本地仓库位置，但是idea配置maven的设置时却引用的C:\\Users\\Administrator\\.m2\\repository，如果自定义了，iDea中也一定要配置好。</span></li></ol><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1551884347572-64098d3c-b391-4934-9ee4-793fb17d85a6.png%22%2C%22originWidth%22%3A818%2C%22originHeight%22%3A649%2C%22name%22%3A%22image.png%22%2C%22size%22%3A43119%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A818%2C%22height%22%3A649%7D\"></card></p><ol start=\"3\"><li><span class=\"lake-fontsize-12\">oracle9i开始就不允许使用</span><em><em>oracle.jdbc.driver.OracleDriver</em></em><span class=\"lake-fontsize-12\">驱动名,而需要使用</span><strong><strong>oracle.jdbc.OracleDriver</strong></strong></li></ol><p><span class=\"lake-fontsize-10\" style=\"color: #000000;\"> </span></p><ol start=\"4\"><li><span class=\"lake-fontsize-10\" style=\"color: #000000;\">没有初始化相应的bean，或者没有使用注解@Bean使用于相关数源方法，以下我是之前错误的代码</span></li></ol><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%40ConfigurationProperties(%5C%22oracle.datasource%5C%22)%5Cnpublic%20DataSourceProperties%20oracleDataSourceProperties()%7B%5Cn%20%20%20return%20new%20DataSourceProperties()%3B%5Cn%7D%5Cn%40Bean%5Cnpublic%20DataSource%20oracleDataSource()%20%7B%5Cn%20%20%20DataSourceProperties%20dataSourceProperties%20%3DoracleDataSourceProperties()%3B%5Cn%20%20%20System.out.println(%5C%22oracle.datasource%3A%20%7B%7D%5C%22%2BdataSourceProperties.getUrl())%3B%5Cn%20%20%20return%20dataSourceProperties.initializeDataSourceBuilder().build()%3B%5Cn%7D%5Cn%40Bean%5Cn%40Resource%5Cnpublic%20PlatformTransactionManager%20oracleTxManager(DataSource%20oracleDataSource)%20%7B%5Cn%20%20%20return%20new%20DataSourceTransactionManager(oracleDataSource)%3B%5Cn%7D%22%2C%22id%22%3A%22zsxMT%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-10\" style=\"color: #000000;\">以上如果仔细看，可以看到</span><span class=\"lake-fontsize-10\" style=\"color: #000000;\">oracleDataSourceProperties</span><span class=\"lake-fontsize-10\" style=\"color: #000000;\">()这个方法没有使用注解@Bean，导致其一个bean在初始时找不到,我在打印输出时提示“<span class=\"lake-fontsize-10\" style=\"color: #000000;\">oracle.datasource: {}null</span>”</span></p>",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-06-15T10:28:01.000Z",
    "deleted_at": null,
    "created_at": "2019-03-06T14:55:02.000Z",
    "updated_at": "2019-06-15T10:28:01.000Z",
    "published_at": "2019-05-05T07:21:34.000Z",
    "first_published_at": "2019-03-06T15:01:21.000Z",
    "word_count": 306,
    "cover": null,
    "description": "tags: [oracle,spring,spring boot]categories: spring boot参考链接Difference between Oracle jdbc driver classes?——stackoverflow@bw_üezi  &lt;!--more--&gt...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1330249,
    "slug": "zutyc3",
    "title": "maven之安装第三方jar到本地 出现 The goal you specified requires a project to execute but there is no POM in this directory 错误",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [maven,oracle]<br />categories: maven\n\n---\n\n\n<a name=\"bd1bf7e7\"></a>\n# 转载链接\n\n[https://www.cnblogs.com/demonrain/p/5674091.html——博客园@demonrain](https://www.cnblogs.com/demonrain/p/5674091.html)\n\n<a name=\"a1db7c12\"></a>\n# maven之安装第三方jar到本地 出现 The goal you specified requires a project to execute but there is no POM in this directory 错误\n\n```powershell\nmvn install:install-file \"-Dfile=cobra.jar\" \"-DgroupId=com.cobra\" \"-DartifactId=cobra\" \"-Dversion=0.98.4\" \"-Dpackaging=jar\" \"-DgeneratePom=true\"\n```\n\n",
    "body_draft": "",
    "body_html": "<p>tags: [<span>maven</span>,oracle]</p><p>categories: maven</p><p><br /></p><hr /><p><br /></p><h1 id=\"bd1bf7e7\">转载链接</h1><p><br /></p><p><a href=\"https://www.cnblogs.com/demonrain/p/5674091.html\" target=\"_blank\">https://www.cnblogs.com/demonrain/p/5674091.html——博客园@demonrain</a></p><p><br /></p><h1 id=\"a1db7c12\">maven之安装第三方jar到本地 出现 The goal you specified requires a project to execute but there is no POM in this directory 错误</h1><p><br /></p><pre data-lang=\"powershell\"><code>mvn install:install-file &quot;-Dfile=cobra.jar&quot; &quot;-DgroupId=com.cobra&quot; &quot;-DartifactId=cobra&quot; &quot;-Dversion=0.98.4&quot; &quot;-Dpackaging=jar&quot; &quot;-DgeneratePom=true&quot;</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><p>tags: [<span>maven</span>,oracle]</p><p>categories: maven</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%2280208%22%7D\"></card><p><br /><cursor /></p><h1 id=\"bd1bf7e7\">转载链接</h1><p><br /></p><p><a href=\"https://www.cnblogs.com/demonrain/p/5674091.html\" target=\"_blank\">https://www.cnblogs.com/demonrain/p/5674091.html——博客园@demonrain</a></p><p><br /></p><h1 id=\"a1db7c12\">maven之安装第三方jar到本地 出现 The goal you specified requires a project to execute but there is no POM in this directory 错误</h1><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22mvn%20install%3Ainstall-file%20%5C%22-Dfile%3Dcobra.jar%5C%22%20%5C%22-DgroupId%3Dcom.cobra%5C%22%20%5C%22-DartifactId%3Dcobra%5C%22%20%5C%22-Dversion%3D0.98.4%5C%22%20%5C%22-Dpackaging%3Djar%5C%22%20%5C%22-DgeneratePom%3Dtrue%5C%22%22%2C%22id%22%3A%22ZeGkx%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-05T07:18:29.000Z",
    "deleted_at": null,
    "created_at": "2019-03-05T15:19:33.000Z",
    "updated_at": "2019-05-05T07:18:38.000Z",
    "published_at": "2019-05-05T07:18:38.000Z",
    "first_published_at": "2019-03-13T08:12:50.000Z",
    "word_count": 79,
    "cover": null,
    "description": "tags: [maven,oracle]categories: maven转载链接https://www.cnblogs.com/demonrain/p/5674091.html——博客园@demonrainmaven之安装第三方jar到本地 出现 The goal you specified...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1330116,
    "slug": "lg01px",
    "title": "mysql之Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"bd1bf7e7\"></a>\n# 转载链接\n[Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdb——CSDN@不信成不了大牛](https://blog.csdn.net/anaini1314/article/details/71157791)  \n<a name=\"16f5f9f6\"></a>\n# mysql之Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver\n\n异常错误：Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.\n\n这个问题 是在我整合项目过程中出现的，用了最新的mysql 连接驱动<br />以前版本的jdbc.properties\n\n```\njdbc.driverClass   = com.mysql.dbc.Driver\njdbc.url= jdbc:mysql://127.0.0.1:3306/db?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT\njdbc.username = root\njdbc.password = root123\n```\n\n现在按照最新官方提示支持将com.mysql.jdbc.Driver  改为  com.mysql.cj.jdbc.Driver\n\n```\njdbc.driverClass   = com.mysql.cj.jdbc.Driver\njdbc.url= jdbc:mysql://127.0.0.1:3306/db?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT\njdbc.username = root\njdbc.password = root123\n```\n\n\n---------------------  <br />作者：不信成不了大牛  <br />来源：CSDN  <br />原文：https://blog.csdn.net/anaini1314/article/details/71157791  <br />版权声明：本文为博主原创文章，转载请附上博文链接！\n",
    "body_draft": "",
    "body_html": "<h1 id=\"bd1bf7e7\">转载链接</h1><p><a href=\"https://blog.csdn.net/anaini1314/article/details/71157791\" target=\"_blank\">Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdb——CSDN@不信成不了大牛</a>  </p><h1 id=\"16f5f9f6\">mysql之Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver</h1><p><br /></p><p>异常错误：Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.</p><p><br /></p><p>这个问题 是在我整合项目过程中出现的，用了最新的mysql 连接驱动</p><p>以前版本的jdbc.properties</p><p><br /></p><pre><code>jdbc.driverClass   = com.mysql.dbc.Driver\njdbc.url= jdbc:mysql://127.0.0.1:3306/db?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT\njdbc.username = root\njdbc.password = root123</code></pre><p><br /></p><p>现在按照最新官方提示支持将com.mysql.jdbc.Driver  改为  com.mysql.cj.jdbc.Driver</p><p><br /></p><pre><code>jdbc.driverClass   = com.mysql.cj.jdbc.Driver\njdbc.url= jdbc:mysql://127.0.0.1:3306/db?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT\njdbc.username = root\njdbc.password = root123</code></pre><p><br /></p><p><br /></p><p>---------------------  </p><p>作者：不信成不了大牛  </p><p>来源：CSDN  </p><p>原文：https://blog.csdn.net/anaini1314/article/details/71157791  </p><p>版权声明：本文为博主原创文章，转载请附上博文链接！</p>",
    "body_lake": "<!doctype lake><h1 id=\"bd1bf7e7\">转载链接</h1><p><a href=\"https://blog.csdn.net/anaini1314/article/details/71157791\" target=\"_blank\">Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdb——CSDN@不信成不了大牛</a>  </p><h1 id=\"16f5f9f6\">mysql之Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver</h1><p><br /></p><p>异常错误：Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.</p><p><br /></p><p>这个问题 是在我整合项目过程中出现的，用了最新的mysql 连接驱动</p><p>以前版本的jdbc.properties</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22jdbc.driverClass%20%20%20%3D%20com.mysql.dbc.Driver%5Cnjdbc.url%3D%20jdbc%3Amysql%3A%2F%2F127.0.0.1%3A3306%2Fdb%3FuseUnicode%3Dtrue%26characterEncoding%3Dutf8%26serverTimezone%3DGMT%5Cnjdbc.username%20%3D%20root%5Cnjdbc.password%20%3D%20root123%22%7D\"></card><p><br /></p><p>现在按照最新官方提示支持将com.mysql.jdbc.Driver  改为  com.mysql.cj.jdbc.Driver</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22jdbc.driverClass%20%20%20%3D%20com.mysql.cj.jdbc.Driver%5Cnjdbc.url%3D%20jdbc%3Amysql%3A%2F%2F127.0.0.1%3A3306%2Fdb%3FuseUnicode%3Dtrue%26characterEncoding%3Dutf8%26serverTimezone%3DGMT%5Cnjdbc.username%20%3D%20root%5Cnjdbc.password%20%3D%20root123%22%7D\"></card><p><br /></p><p><br /></p><p>---------------------  </p><p>作者：不信成不了大牛  </p><p>来源：CSDN  </p><p>原文：https://blog.csdn.net/anaini1314/article/details/71157791  </p><p>版权声明：本文为博主原创文章，转载请附上博文链接！</p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-05T14:14:27.000Z",
    "deleted_at": null,
    "created_at": "2019-03-05T14:11:05.000Z",
    "updated_at": "2019-03-05T14:14:27.000Z",
    "published_at": "2019-03-05T14:14:27.000Z",
    "first_published_at": "2019-03-05T14:14:27.000Z",
    "word_count": 257,
    "cover": null,
    "description": "转载链接Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdb——CSDN@不信成不了大牛  mysql之Loading class `com.my...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1330055,
    "slug": "oe3u39",
    "title": "maven之如何引入oracle依赖",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [maven,oracle]<br />categories: maven\n\n---\n\n\n<a name=\"bd1bf7e7\"></a>\n# 转载链接\n[spring boot pom文件引入oracle依赖，具体方法——CSDN@gaoqiang1112](https://blog.csdn.net/gaoqiang1112/article/details/79482069)  \n\n**出现问题：**<br />  使用Maven管理项目时候，在【pom.xml】中会提示错误：Missing artifact com.[oracle](https://www.baidu.com/s?wd=oracle&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd):ojdbc14:jar:10.2.0.4.0；如图所示<br />![](https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050386-c6d850ce-3204-425a-afd4-b53f69704667.png#align=left&display=inline&height=121&originHeight=121&originWidth=397&size=0&status=done&width=397)<br />**造成原因：**<br />   Oracle商业版权版权问题，Maven中央仓库没有这个资源<br />**决解方法：**<br />   在Maven本地仓库添加Oracle.jar[驱动包](https://www.baidu.com/s?wd=%E9%A9%B1%E5%8A%A8%E5%8C%85&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)<br />（注解：Maven本地仓库位置，一般默认在C盘，如：C：用户>XXX用户名>.m2>repository>）\n\n<!--more-->\n\n**  解决步骤：**<br />    一、Maven环境变量<br />      先检查Maven环境变量是否配置好：【windows+R】->输入【cmd】打开命令窗口->输入【mvn -v】，如果有版本信息表示已经配置好，否则需配置<br />![](https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050397-7e8e6407-8275-4a15-ae53-9ffea77f2368.png#align=left&display=inline&height=161&originHeight=161&originWidth=573&size=0&status=done&width=573)<br />      配置Maven环境变量（前提：已经安装好JDK并配置好其环境变量）；<br />      1、【我的电脑】->【属性】->【高级系统设置】->【高级】->【环境变量】->【系统变量】->【新建】，新建系统环境变量MAVEN_HOME，并设置值为你安装的目录<br />![](https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050440-12a0bbcf-ff90-4141-ad2f-97a47391e505.png#align=left&display=inline&height=180&originHeight=180&originWidth=650&size=0&status=done&width=650)<br />      2、更新系统Path变量，添加 ;AVEN_HOME%\\bin;<br />    二、安装Oracle驱动包到Maven本地仓库中<br />      1、下载ojdbc6.jar，复制到Maven本地仓库中<br />oracle官方驱动下载 <br />[http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html](http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html) <br />需要登录 <br />[百度云下载](http://pan.baidu.com/s/1pLEoY9t)<br />![](https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050437-02e55243-a4db-402a-b630-3be7bff74947.png#align=left&display=inline&height=126&originHeight=126&originWidth=693&size=0&status=done&width=693)\n\n      2、打开命令窗口，输入：\n\n      mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.4.0 -Dpackaging=jar -Dfile=C:\\Users\\asus-00000\\.m2\\repository\\com\\oracle\\ojdbc14\\10.20.4.0\\ojdbc6.jar （红色固定，绿色为你安装位置）<br />这里多说一嘴,也不知道什么时候起  我们习惯把我们的repository库放在d盘跟目录下   这个安装语句 有2个要注意的地方  1个是绿色部分我们要换成自己ojdbc6.jar所存放的位置 另一个是 这个语句默认会将我们调整后的10.2.0.4.0放到电脑默认的库位置,也就是我绿色的部分  我的电脑是这样的 所以如果你放在了d盘的根目录下,并且你的项目中配置的maven也换成了你自己设定的地方,那么请去他转化后的地方将生成好的ojdbc14-10.2.0.4.0.jar复制到你的d盘里\n\n        原先ojdbc6.jar会转化出新的ojdbc14-10.2.0.4.0.jar（如原先有这包要先删除才不会出现冲突），在命令窗口出现 BUILD SUCCESS 字样表示成功<br />![](https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050421-b66fd60a-1dee-42c0-9468-166d302a5d35.png#align=left&display=inline&height=157&originHeight=157&originWidth=718&size=0&status=done&width=718)\n\n     ![](https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050475-8bb68ebf-0249-42d3-a741-1111b5c575ae.png#align=left&display=inline&height=328&originHeight=328&originWidth=519&size=0&status=done&width=519)<br />    三、项目更新<br />      右键项目->【Maven】->【Update Project】->在Available Maven Codebases勾选要更新的项目->勾选Force Update of Sapshots/Releases->【OK】\n",
    "body_draft": "",
    "body_html": "<p>tags: [<span>maven</span>,oracle]</p><p>categories: maven</p><p><br /></p><hr /><p><br /></p><h1 id=\"bd1bf7e7\">转载链接</h1><p><a href=\"https://blog.csdn.net/gaoqiang1112/article/details/79482069\" target=\"_blank\">spring boot pom文件引入oracle依赖，具体方法——CSDN@gaoqiang1112</a>  </p><p><br /></p><p><strong>出现问题：</strong></p><p>  使用Maven管理项目时候，在【pom.xml】中会提示错误：<span style=\"color: #CC0000;\">Missing artifact com.<a href=\"https://www.baidu.com/s?wd=oracle&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd\" target=\"_blank\">oracle</a>:ojdbc14:jar:10.2.0.4.0</span>；如图所示</p><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050386-c6d850ce-3204-425a-afd4-b53f69704667.png#align=left&amp;display=inline&amp;height=121&amp;originHeight=121&amp;originWidth=397&amp;size=0&amp;status=done&amp;width=397\" style=\"max-width: 600px; width: 397px;\" /></p><p><strong>造成原因：</strong></p><p>   Oracle商业版权版权问题，Maven中央仓库没有这个资源</p><p><strong>决解方法：</strong></p><p>   在Maven本地仓库添加Oracle.jar<a href=\"https://www.baidu.com/s?wd=%E9%A9%B1%E5%8A%A8%E5%8C%85&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd\" target=\"_blank\">驱动包</a></p><p><span style=\"color: #999999;\">（注解：Maven本地仓库位置，一般默认在C盘，如：C：用户&gt;XXX用户名&gt;.m2&gt;repository&gt;）</span></p><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><p><strong><span class=\"lake-fontsize-9\">  解决步骤</span>：</strong></p><p>    一、Maven环境变量</p><p>      先检查Maven环境变量是否配置好：【windows+R】-&gt;输入【cmd】打开命令窗口-&gt;输入【mvn -v】，如果有版本信息表示已经配置好，否则需配置</p><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050397-7e8e6407-8275-4a15-ae53-9ffea77f2368.png#align=left&amp;display=inline&amp;height=161&amp;originHeight=161&amp;originWidth=573&amp;size=0&amp;status=done&amp;width=573\" style=\"max-width: 600px; width: 573px;\" /></p><p>      配置Maven环境变量（前提：已经安装好JDK并配置好其环境变量）；</p><p>      1、【我的电脑】-&gt;【属性】-&gt;【高级系统设置】-&gt;【高级】-&gt;【环境变量】-&gt;【系统变量】-&gt;【新建】，新建系统环境变量MAVEN_HOME，并设置值为你安装的目录</p><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050440-12a0bbcf-ff90-4141-ad2f-97a47391e505.png#align=left&amp;display=inline&amp;height=180&amp;originHeight=180&amp;originWidth=650&amp;size=0&amp;status=done&amp;width=650\" style=\"max-width: 600px; width: 650px;\" /></p><p>      2、更新系统Path变量，添加<span style=\"color: #FF0000;\"> ;AVEN_HOME%\\bin;</span></p><p>    二、安装Oracle驱动包到Maven本地仓库中</p><p>      1、下载ojdbc6.jar，复制到Maven本地仓库中</p><p><span>oracle官方驱动下载 </span></p><p><a href=\"http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html\" target=\"_blank\">http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html</a> </p><p><span>需要登录 </span></p><p><a href=\"http://pan.baidu.com/s/1pLEoY9t\" target=\"_blank\">百度云下载</a></p><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050437-02e55243-a4db-402a-b630-3be7bff74947.png#align=left&amp;display=inline&amp;height=126&amp;originHeight=126&amp;originWidth=693&amp;size=0&amp;status=done&amp;width=693\" style=\"max-width: 600px; width: 693px;\" /></p><p><br /></p><p>      2、打开命令窗口，输入：<span style=\"color: #CC0000;\"><br /></span></p><p><span style=\"color: #CC0000;\">      mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.4.0 -Dpackaging=jar -Dfile=</span><span style=\"color: #009900;\">C:\\Users\\asus-00000\\.m2\\repository\\com\\oracle\\ojdbc14\\10.20.4.0\\ojdbc6.jar </span><span style=\"color: #999999;\">（红色固定，绿色为你安装位置）</span></p><p><span style=\"color: #999999;\"><span>这里多说一嘴,也不知道什么时候起  我们习惯把我们的repository库放在d盘跟目录下   这个安装语句 有2个要注意的地方  1个是绿色部分我们要换成自己ojdbc6.jar所存放的位置 另一个是 这个语句默认会将我们调整后的10.2.0.4.0放到电脑默认的库位置,也就是我绿色的部分  我的电脑是这样的 所以如果你放在了d盘的根目录下,并且你的项目中配置的maven也换成了你自己设定的地方,那么请去他转化后的地方将生成好的<span>ojdbc14-10.2.0.4.0.jar复制到你的d盘里</span></span><br /></span></p><p>        原先ojdbc6.jar会转化出新的ojdbc14-10.2.0.4.0.jar<span style=\"color: #999999;\">（如原先有这包要先删除才不会出现冲突）</span>，在命令窗口出现 BUILD SUCCESS 字样表示成功</p><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050421-b66fd60a-1dee-42c0-9468-166d302a5d35.png#align=left&amp;display=inline&amp;height=157&amp;originHeight=157&amp;originWidth=718&amp;size=0&amp;status=done&amp;width=718\" style=\"max-width: 600px; width: 718px;\" /></p><p><br /></p><p>     <img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1551794050475-8bb68ebf-0249-42d3-a741-1111b5c575ae.png#align=left&amp;display=inline&amp;height=328&amp;originHeight=328&amp;originWidth=519&amp;size=0&amp;status=done&amp;width=519\" style=\"max-width: 600px; width: 519px;\" /></p><p>    三、项目更新</p><p>      右键项目-&gt;【Maven】-&gt;【Update Project】-&gt;在Available Maven Codebases勾选要更新的项目-&gt;勾选Force Update of Sapshots/Releases-&gt;【OK】</p>",
    "body_lake": "<!doctype lake><p>tags: [<span>maven</span>,oracle]</p><p>categories: maven</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22TvhFD%22%7D\"></card><p><br /><cursor /></p><h1 id=\"bd1bf7e7\">转载链接</h1><p><a href=\"https://blog.csdn.net/gaoqiang1112/article/details/79482069\" target=\"_blank\">spring boot pom文件引入oracle依赖，具体方法——CSDN@gaoqiang1112</a>  </p><p><br /></p><p><strong>出现问题：</strong></p><p>  使用Maven管理项目时候，在【pom.xml】中会提示错误：<span style=\"color: #CC0000;\">Missing artifact com.<a href=\"https://www.baidu.com/s?wd=oracle&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd\" target=\"_blank\">oracle</a>:ojdbc14:jar:10.2.0.4.0</span>；如图所示</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1551794050386-c6d850ce-3204-425a-afd4-b53f69704667.png%22%2C%22originWidth%22%3A397%2C%22originHeight%22%3A121%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A397%2C%22height%22%3A121%7D\"></card></p><p><strong>造成原因：</strong></p><p>   Oracle商业版权版权问题，Maven中央仓库没有这个资源</p><p><strong>决解方法：</strong></p><p>   在Maven本地仓库添加Oracle.jar<a href=\"https://www.baidu.com/s?wd=%E9%A9%B1%E5%8A%A8%E5%8C%85&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd\" target=\"_blank\">驱动包</a></p><p><span style=\"color: #999999;\">（注解：Maven本地仓库位置，一般默认在C盘，如：C：用户&gt;XXX用户名&gt;.m2&gt;repository&gt;）</span></p><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><p><strong><span class=\"lake-fontsize-9\">  解决步骤</span>：</strong></p><p>    一、Maven环境变量</p><p>      先检查Maven环境变量是否配置好：【windows+R】-&gt;输入【cmd】打开命令窗口-&gt;输入【mvn -v】，如果有版本信息表示已经配置好，否则需配置</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1551794050397-7e8e6407-8275-4a15-ae53-9ffea77f2368.png%22%2C%22originWidth%22%3A573%2C%22originHeight%22%3A161%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A573%2C%22height%22%3A161%7D\"></card></p><p>      配置Maven环境变量（前提：已经安装好JDK并配置好其环境变量）；</p><p>      1、【我的电脑】-&gt;【属性】-&gt;【高级系统设置】-&gt;【高级】-&gt;【环境变量】-&gt;【系统变量】-&gt;【新建】，新建系统环境变量MAVEN_HOME，并设置值为你安装的目录</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1551794050440-12a0bbcf-ff90-4141-ad2f-97a47391e505.png%22%2C%22originWidth%22%3A650%2C%22originHeight%22%3A180%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A650%2C%22height%22%3A180%7D\"></card></p><p>      2、更新系统Path变量，添加<span style=\"color: #FF0000;\"> ;AVEN_HOME%\\bin;</span></p><p>    二、安装Oracle驱动包到Maven本地仓库中</p><p>      1、下载ojdbc6.jar，复制到Maven本地仓库中</p><p><span>oracle官方驱动下载 </span></p><p><a href=\"http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html\" target=\"_blank\">http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html</a> </p><p><span>需要登录 </span></p><p><a href=\"http://pan.baidu.com/s/1pLEoY9t\" target=\"_blank\">百度云下载</a></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1551794050437-02e55243-a4db-402a-b630-3be7bff74947.png%22%2C%22originWidth%22%3A693%2C%22originHeight%22%3A126%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A693%2C%22height%22%3A126%7D\"></card></p><p><br /></p><p>      2、打开命令窗口，输入：<span style=\"color: #CC0000;\"><br /></span></p><p><span style=\"color: #CC0000;\">      mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.4.0 -Dpackaging=jar -Dfile=</span><span style=\"color: #009900;\">C:\\Users\\asus-00000\\.m2\\repository\\com\\oracle\\ojdbc14\\10.20.4.0\\ojdbc6.jar </span><span style=\"color: #999999;\">（红色固定，绿色为你安装位置）</span></p><p><span style=\"color: #999999;\"><span>这里多说一嘴,也不知道什么时候起  我们习惯把我们的repository库放在d盘跟目录下   这个安装语句 有2个要注意的地方  1个是绿色部分我们要换成自己ojdbc6.jar所存放的位置 另一个是 这个语句默认会将我们调整后的10.2.0.4.0放到电脑默认的库位置,也就是我绿色的部分  我的电脑是这样的 所以如果你放在了d盘的根目录下,并且你的项目中配置的maven也换成了你自己设定的地方,那么请去他转化后的地方将生成好的<span>ojdbc14-10.2.0.4.0.jar复制到你的d盘里</span></span><br /></span></p><p>        原先ojdbc6.jar会转化出新的ojdbc14-10.2.0.4.0.jar<span style=\"color: #999999;\">（如原先有这包要先删除才不会出现冲突）</span>，在命令窗口出现 BUILD SUCCESS 字样表示成功</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1551794050421-b66fd60a-1dee-42c0-9468-166d302a5d35.png%22%2C%22originWidth%22%3A718%2C%22originHeight%22%3A157%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A718%2C%22height%22%3A157%7D\"></card></p><p><br /></p><p>     <card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1551794050475-8bb68ebf-0249-42d3-a741-1111b5c575ae.png%22%2C%22originWidth%22%3A519%2C%22originHeight%22%3A328%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A519%2C%22height%22%3A328%7D\"></card></p><p>    三、项目更新</p><p>      右键项目-&gt;【Maven】-&gt;【Update Project】-&gt;在Available Maven Codebases勾选要更新的项目-&gt;勾选Force Update of Sapshots/Releases-&gt;【OK】</p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-05T07:17:59.000Z",
    "deleted_at": null,
    "created_at": "2019-03-05T13:48:26.000Z",
    "updated_at": "2019-05-05T07:17:59.000Z",
    "published_at": "2019-05-05T07:17:59.000Z",
    "first_published_at": "2019-03-05T13:56:45.000Z",
    "word_count": 664,
    "cover": null,
    "description": "tags: [maven,oracle]categories: maven转载链接spring boot pom文件引入oracle依赖，具体方法——CSDN@gaoqiang1112  出现问题：  使用Maven管理项目时候，在【pom.xml】中会提示错误：Missing artifac...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1270103,
    "slug": "ivm3hq",
    "title": "oracle之重装系统后恢复",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [oracle,数据库]<br />categories: oracle\n\n---\n\n\n<a name=\"ea6f3b87\"></a>\n# 参考链接\n[Oracle数据库冷备份与恢复（救命稻草）——博客园@Hellow world](https://www.cnblogs.com/arxive/p/9437152.html?tdsourcetag=s_pctim_aiomsg)  （这篇文章参考测试了很久，很遗憾没有成功）<br />[重装系统后ORACLE的恢复——CSDN@haiross](https://blog.csdn.net/haiross/article/details/18550523)  （注：用户能够登录了，但是在navicat中双击用户查看表时报错了，错误忘记了好像是“sql查询错误[][][][][]”，没有成功，但是有了启发，能登录说明这个方法可能是可行的）<br />[Windows Server 2012上安装.NET Framework 3.5——CSDN@lvmenglong888](https://blog.csdn.net/sunny_lv/article/details/73603360)<br />[Oracle监听服务无法启动——博客园@Leis](https://www.cnblogs.com/leis/p/5525844.html)  （注：试过问题二改注册表没有成功）<br />[Oracle监听服务无法启动——ITPUB博客@chenoracle](http://blog.itpub.net/29785807/viewspace-2131834/)  （注：试过没有成功，但是有了启发，觉得可能是监听配置有问题）<br />[ORA-12514: TNS:监听程序当前无法识别连接描述符中请求的服务——CSDN@麦田](https://blog.csdn.net/a921122/article/details/51878992)  （注：没有成功）<br />[关于Win7 64位下：Navicat无法连接64位Oracle 11gR2：Cannot load OCI DLL 87 解决方法——CSDN@a921122](https://blog.csdn.net/a921122/article/details/51878992)  （注：后面发现不是oracle问题，可能是oracle配置变更了navicat无法访问）<br />[](https://www.cnblogs.com/loveling-0239/p/6547409.html)[处理错误：ORA-27101: shared memory realm does not exist 解决方](https://www.cnblogs.com/loveling-0239/p/6547409.html)[](https://www.cnblogs.com/loveling-0239/p/6547409.html)[案](https://www.cnblogs.com/loveling-0239/p/6547409.html)[——博客园@AlgorithmInit](https://www.cnblogs.com/loveling-0239/p/6547409.html)  （注：成功）<br />[ORA-27101: shared memory realm does not exist 错误的处理——博客园@lpioneer](https://blog.csdn.net/lpioneer/article/details/6109933)（注：这篇看过不太一样，但是有试过没有成功） \n\n<a name=\"c83d32c2\"></a>\n# oracle之重装系统后恢复\n<a name=\"59683fbc\"></a>\n## 简述\noracle恢复我也是模模糊糊的，毕竟我对oracle不是很熟悉，不一定保证能成功，如果想要百分百成功的可以不用看下去。<br /><!--more-->\n<a name=\"a96b396f\"></a>\n## 具体操作分析\n\n1. 第一次我是采用“[Oracle数据库冷备份与恢复（救命稻草）——博客园@Hellow world](https://www.cnblogs.com/arxive/p/9437152.html?tdsourcetag=s_pctim_aiomsg)  ”中冷恢复法，测试了很久没有成功\n1. 第二次我是采用“[重装系统后ORACLE的恢复——CSDN@haiross](https://blog.csdn.net/haiross/article/details/18550523)”用户能够登录了，但是在navicat中双击用户查看表时报错了，错误忘记了好像是“sql查询错误[][][][][]”，没有成功，但是有了启发，能登录说明这个方法可能是可行的，我也有了怀疑，可能是重装的oralce配置跟之前系统的还是有区别，然后仔细思考，**安装oracle的时候一直提示“.net framework 3.5无法安装”**\n1. 在服务器上安装**.net framework 3.5**，并将oracle卸载了，注册表也删除干净，重新启动\n1. **重新安装oracle，创建与旧oracle一模一样的实例，停掉所有服务，将旧oracle安装目录整个替换为新oracle，直接重新启动服务器，启动完成后查看服务，**发现只有监听程序没有启动，尝试启动后失败提示“启动服务失败，无法找到对应文件”\n1. 参考文件“[Oracle监听服务无法启动——ITPUB博客@chenoracle](http://blog.itpub.net/29785807/viewspace-2131834/)”后怀疑1521端口被占用，遂使用“net Configuration Assistant”删除1521监听，重新创建一个1522新监听，测试没有成功，但是测试连接ip:1521/orcl时居然成功旧数据也可以查询，但是我已经删除1521的监听程序，我发现其他实例连接不行，仔细查看发现居然三个监听服务，“OracleOraDb11g_home1TNSListener”、“OracleTNSListener”、“OracleTNSListenerLISTNER2”；经测试发现在我创建“OracleTNSListenerLISTNER2”时，oracle自动帮我创建了“OracleTNSListener”，这个明显是1521端口监听程序，仔细思考1521可以那么“OracleTNSListener”一定可以使用，遂删除“OracleTNSListenerLISTNER2”监听程序\n1. 在通过sqlplus尝试连接其他实例jzcc，报错“ORA-27101: shared memory realm does not exist”，参考“[处理错误：ORA-27101: shared memory realm does not exist 解决方](https://www.cnblogs.com/loveling-0239/p/6547409.html)[](https://www.cnblogs.com/loveling-0239/p/6547409.html)[案](https://www.cnblogs.com/loveling-0239/p/6547409.html)[——博客园@AlgorithmInit](https://www.cnblogs.com/loveling-0239/p/6547409.html)  ”，测试成功，原来恢复后，实例服务虽然打启动了，但是实例数据库没有打开，需要用sysdba登录 ，调用startup打开数据库实例。\n\n![](https://cdn.nlark.com/yuque/0/2019/png/244275/1550592701794-be5b7d15-cc1a-45dc-ac6a-e255ccb64f73.png#align=left&display=inline&height=449&originHeight=449&originWidth=679&size=0&status=done&width=679)<br />![](https://cdn.nlark.com/yuque/0/2019/png/244275/1550592738223-a093d680-6243-483f-8532-811d71fcb822.png#align=left&display=inline&height=316&originHeight=316&originWidth=613&size=0&status=done&width=613)\n<a name=\"25f9c7fa\"></a>\n## 总结\n\n1. 需要保存跟之前一样的环境，一样配置，即操作系统、计算机名、oracle版本（桌面版或者是企业版必须一致）、windows的配置(.net framework 3.5)\n1. 重新安装oracle，创建与旧oracle一模一样的实例，停掉所有服务，将旧oracle安装目录整个替换为新oracle，直接重新启动服务器。\n1. 此时你可能会发现，只有监听服务没有启动，重新配置监听，使用“net Configuration Assistant”删除1521监听，重新建立1521监听\n1. 查看oracle实例服务是否启动，已经启动，进入cmd管理员\n\n```powershell\nset oracle_sid=sid\nsqlplus / as sysdba\nstartup\n```\n\n以下图片中代码与上面相同\n\n![](https://cdn.nlark.com/yuque/0/2019/png/244275/1550592738223-a093d680-6243-483f-8532-811d71fcb822.png)\n",
    "body_draft": "",
    "body_html": "<p>tags: [<span>oracle</span>,数据库]</p><p>categories: oracle</p><p><br /></p><hr /><p><br /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://www.cnblogs.com/arxive/p/9437152.html?tdsourcetag=s_pctim_aiomsg\" target=\"_blank\">Oracle数据库冷备份与恢复（救命稻草）——博客园@Hellow world</a>  （这篇文章参考测试了很久，很遗憾没有成功）</p><p><a href=\"https://blog.csdn.net/haiross/article/details/18550523\" target=\"_blank\">重装系统后ORACLE的恢复——CSDN@haiross</a>  （注：用户能够登录了，但是在navicat中双击用户查看表时报错了，错误忘记了好像是“<span>sql查询错误[][][][][]</span>”，<span>没有成功，但是有了启发，能登录说明这个方法可能是可行的</span>）</p><p><a href=\"https://blog.csdn.net/sunny_lv/article/details/73603360\" target=\"_blank\">Windows Server 2012上安装.NET Framework 3.5——CSDN@lvmenglong888</a></p><p><a href=\"https://www.cnblogs.com/leis/p/5525844.html\" target=\"_blank\">Oracle监听服务无法启动——博客园@Leis</a>  （注：试过问题二改注册表没有成功）</p><p><a href=\"http://blog.itpub.net/29785807/viewspace-2131834/\" target=\"_blank\">Oracle监听服务无法启动——ITPUB博客@chenoracle</a>  （注：试过没有成功，但是有了启发，觉得可能是监听配置有问题）</p><p><a href=\"https://blog.csdn.net/a921122/article/details/51878992\" target=\"_blank\">ORA-12514: TNS:监听程序当前无法识别连接描述符中请求的服务——CSDN@麦田</a><span>  （注：没有成功）</span></p><p><a href=\"https://blog.csdn.net/a921122/article/details/51878992\" target=\"_blank\">关于Win7 64位下：Navicat无法连接64位Oracle 11gR2：Cannot load OCI DLL 87 解决方法——CSDN@a921122</a>  （注：<span>后面发现不是oracle问题，可能是oracle配置变更了navicat无法访问）</span></p><p><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\"></a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">处理错误：ORA-27101: shared memory realm does not exist 解决方</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\"></a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">案</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">——博客园@AlgorithmInit</a>  （注：成功）</p><p><a href=\"https://blog.csdn.net/lpioneer/article/details/6109933\" target=\"_blank\">ORA-27101: shared memory realm does not exist 错误的处理——博客园@lpioneer</a>（注：这篇看过不太一样，但是有试过没有成功） </p><p><br /></p><h1 id=\"c83d32c2\">oracle之重装系统后恢复</h1><h2 id=\"59683fbc\">简述</h2><p>oracle恢复我也是模模糊糊的，毕竟我对oracle不是很熟悉，不一定保证能成功，如果想要百分百成功的可以不用看下去。</p><p>&lt;!--more--&gt;</p><h2 id=\"a96b396f\">具体操作分析</h2><ol><li>第一次我是采用“<a href=\"https://www.cnblogs.com/arxive/p/9437152.html?tdsourcetag=s_pctim_aiomsg\" target=\"_blank\">Oracle数据库冷备份与恢复（救命稻草）——博客园@Hellow world</a>  ”中冷恢复法，测试了很久没有成功</li><li>第二次我是采用“<a href=\"https://blog.csdn.net/haiross/article/details/18550523\" target=\"_blank\">重装系统后ORACLE的恢复——CSDN@haiross</a>”<span>用户能够登录了，但是在navicat中双击用户查看表时报错了，错误忘记了好像是“</span><span>sql查询错误[][][][][]</span><span>”，没有成功，但是有了启发，能登录说明这个方法可能是可行的，我也有了怀疑，可能是重装的oralce配置跟之前系统的还是有区别，然后仔细思考，</span><strong><span>安装oracle的时候一直提示“.net framework 3.5无法安装”</span></strong></li><li>在服务器上安装<strong><span>.net framework 3.5</span></strong><span>，并将oracle卸载了，注册表也删除干净，重新启动</span></li><li><strong><span>重新安装oracle，创建与旧oracle一模一样的实例，停掉所有服务，将旧oracle安装目录整个替换为新oracle，直接重新启动服务器，启动完成后查看服务，</span></strong><span>发现只有监听程序没有启动，尝试启动后失败提示“启动服务失败，无法找到对应文件”</span></li><li>参考文件“<a href=\"http://blog.itpub.net/29785807/viewspace-2131834/\" target=\"_blank\">Oracle监听服务无法启动——ITPUB博客@chenoracle</a>”后怀疑1521端口被占用，遂使用“net Configuration Assistant”删除1521监听，重新创建一个<span>1522</span>新监听，测试没有成功，但是测试连接ip:1521/orcl时居然成功旧数据也可以查询，但是我已经删除1521的监听程序，我发现其他实例连接不行，仔细查看发现居然三个监听服务，“OracleOraDb11g_home1TNSListener”、“OracleTNSListener”、“OracleTNSListenerLISTNER2”；经测试发现在我创建<span>“OracleTNSListenerLISTNER2”时，oracle自动帮我创建了<span>“OracleTNSListener”，这个明显是1521端口监听程序，仔细思考1521可以那么<span>“OracleTNSListener”一定可以使用，遂删除<span>“OracleTNSListenerLISTNER2”监听程序</span></span></span></span></li><li><span><span><span><span>在通过sqlplus尝试连接其他实例jzcc，报错“ORA-27101: shared memory realm does not exist”，参考“<a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">处理错误：ORA-27101: shared memory realm does not exist 解决方</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\"></a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">案</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">——博客园@AlgorithmInit</a>  ”，测试成功，原来恢复后，实例服务虽然打启动了，但是实例数据库没有打开，需要用sysdba登录 ，调用startup打开数据库实例。</span></span></span></span></li></ol><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550592701794-be5b7d15-cc1a-45dc-ac6a-e255ccb64f73.png#align=left&amp;display=inline&amp;height=449&amp;originHeight=449&amp;originWidth=679&amp;size=0&amp;status=done&amp;width=679\" style=\"max-width: 600px; width: 679px;\" /></p><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550592738223-a093d680-6243-483f-8532-811d71fcb822.png#align=left&amp;display=inline&amp;height=316&amp;originHeight=316&amp;originWidth=613&amp;size=0&amp;status=done&amp;width=613\" style=\"max-width: 600px; width: 613px;\" /></p><h2 id=\"25f9c7fa\">总结</h2><ol><li>需要保存跟之前一样的环境，一样配置，即操作系统、计算机名、oracle版本（桌面版或者是企业版必须一致）、windows的配置(.net framework 3.5)</li><li><span>重新安装oracle，创建与旧oracle一模一样的实例，停掉所有服务，将旧oracle安装目录整个替换为新oracle，直接重新启动服务器。</span></li><li><span>此时你可能会发现，只有监听服务没有启动，重新配置监听，使用<span>“net Configuration Assistant”删除1521监听，重新建立1521监听</span></span></li><li>查看oracle实例服务是否启动，已经启动，进入cmd管理员</li><p><br /></p></ol><pre data-lang=\"powershell\"><code>set oracle_sid=sid\nsqlplus / as sysdba\nstartup</code></pre><ol><p>以下图片中代码与上面相同</p></ol><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550592738223-a093d680-6243-483f-8532-811d71fcb822.png\" style=\"width: 377px; height: 194px;\" /></p>",
    "body_lake": "<!doctype lake><p>tags: [<span>oracle</span>,数据库]</p><p>categories: oracle</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22eHz8S%22%7D\"></card><p><br /><cursor /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://www.cnblogs.com/arxive/p/9437152.html?tdsourcetag=s_pctim_aiomsg\" target=\"_blank\">Oracle数据库冷备份与恢复（救命稻草）——博客园@Hellow world</a>  （这篇文章参考测试了很久，很遗憾没有成功）</p><p><a href=\"https://blog.csdn.net/haiross/article/details/18550523\" target=\"_blank\">重装系统后ORACLE的恢复——CSDN@haiross</a>  （注：用户能够登录了，但是在navicat中双击用户查看表时报错了，错误忘记了好像是“<span>sql查询错误[][][][][]</span>”，<span>没有成功，但是有了启发，能登录说明这个方法可能是可行的</span>）</p><p><a href=\"https://blog.csdn.net/sunny_lv/article/details/73603360\" target=\"_blank\">Windows Server 2012上安装.NET Framework 3.5——CSDN@lvmenglong888</a></p><p><a href=\"https://www.cnblogs.com/leis/p/5525844.html\" target=\"_blank\">Oracle监听服务无法启动——博客园@Leis</a>  （注：试过问题二改注册表没有成功）</p><p><a href=\"http://blog.itpub.net/29785807/viewspace-2131834/\" target=\"_blank\">Oracle监听服务无法启动——ITPUB博客@chenoracle</a>  （注：试过没有成功，但是有了启发，觉得可能是监听配置有问题）</p><p><a href=\"https://blog.csdn.net/a921122/article/details/51878992\" target=\"_blank\">ORA-12514: TNS:监听程序当前无法识别连接描述符中请求的服务——CSDN@麦田</a><span>  （注：没有成功）</span></p><p><a href=\"https://blog.csdn.net/a921122/article/details/51878992\" target=\"_blank\">关于Win7 64位下：Navicat无法连接64位Oracle 11gR2：Cannot load OCI DLL 87 解决方法——CSDN@a921122</a>  （注：<span>后面发现不是oracle问题，可能是oracle配置变更了navicat无法访问）</span></p><p><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\"></a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">处理错误：ORA-27101: shared memory realm does not exist 解决方</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\"></a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">案</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">——博客园@AlgorithmInit</a>  （注：成功）</p><p><a href=\"https://blog.csdn.net/lpioneer/article/details/6109933\" target=\"_blank\">ORA-27101: shared memory realm does not exist 错误的处理——博客园@lpioneer</a>（注：这篇看过不太一样，但是有试过没有成功） </p><p><br /></p><h1 id=\"c83d32c2\">oracle之重装系统后恢复</h1><h2 id=\"59683fbc\">简述</h2><p>oracle恢复我也是模模糊糊的，毕竟我对oracle不是很熟悉，不一定保证能成功，如果想要百分百成功的可以不用看下去。</p><p>&lt;!--more--&gt;</p><h2 id=\"a96b396f\">具体操作分析</h2><ol><li>第一次我是采用“<a href=\"https://www.cnblogs.com/arxive/p/9437152.html?tdsourcetag=s_pctim_aiomsg\" target=\"_blank\">Oracle数据库冷备份与恢复（救命稻草）——博客园@Hellow world</a>  ”中冷恢复法，测试了很久没有成功</li><li>第二次我是采用“<a href=\"https://blog.csdn.net/haiross/article/details/18550523\" target=\"_blank\">重装系统后ORACLE的恢复——CSDN@haiross</a>”<span>用户能够登录了，但是在navicat中双击用户查看表时报错了，错误忘记了好像是“</span><span>sql查询错误[][][][][]</span><span>”，没有成功，但是有了启发，能登录说明这个方法可能是可行的，我也有了怀疑，可能是重装的oralce配置跟之前系统的还是有区别，然后仔细思考，</span><strong><span>安装oracle的时候一直提示“.net framework 3.5无法安装”</span></strong></li><li>在服务器上安装<strong><span>.net framework 3.5</span></strong><span>，并将oracle卸载了，注册表也删除干净，重新启动</span></li><li><strong><span>重新安装oracle，创建与旧oracle一模一样的实例，停掉所有服务，将旧oracle安装目录整个替换为新oracle，直接重新启动服务器，启动完成后查看服务，</span></strong><span>发现只有监听程序没有启动，尝试启动后失败提示“启动服务失败，无法找到对应文件”</span></li><li>参考文件“<a href=\"http://blog.itpub.net/29785807/viewspace-2131834/\" target=\"_blank\">Oracle监听服务无法启动——ITPUB博客@chenoracle</a>”后怀疑1521端口被占用，遂使用“net Configuration Assistant”删除1521监听，重新创建一个<span>1522</span>新监听，测试没有成功，但是测试连接ip:1521/orcl时居然成功旧数据也可以查询，但是我已经删除1521的监听程序，我发现其他实例连接不行，仔细查看发现居然三个监听服务，“OracleOraDb11g_home1TNSListener”、“OracleTNSListener”、“OracleTNSListenerLISTNER2”；经测试发现在我创建<span>“OracleTNSListenerLISTNER2”时，oracle自动帮我创建了<span>“OracleTNSListener”，这个明显是1521端口监听程序，仔细思考1521可以那么<span>“OracleTNSListener”一定可以使用，遂删除<span>“OracleTNSListenerLISTNER2”监听程序</span></span></span></span></li><li><span><span><span><span>在通过sqlplus尝试连接其他实例jzcc，报错“ORA-27101: shared memory realm does not exist”，参考“<a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">处理错误：ORA-27101: shared memory realm does not exist 解决方</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\"></a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">案</a><a href=\"https://www.cnblogs.com/loveling-0239/p/6547409.html\" target=\"_blank\">——博客园@AlgorithmInit</a>  ”，测试成功，原来恢复后，实例服务虽然打启动了，但是实例数据库没有打开，需要用sysdba登录 ，调用startup打开数据库实例。</span></span></span></span></li></ol><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550592701794-be5b7d15-cc1a-45dc-ac6a-e255ccb64f73.png%22%2C%22originWidth%22%3A679%2C%22originHeight%22%3A449%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A679%2C%22height%22%3A449%7D\"></card></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550592738223-a093d680-6243-483f-8532-811d71fcb822.png%22%2C%22originWidth%22%3A613%2C%22originHeight%22%3A316%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A613%2C%22height%22%3A316%7D\"></card></p><h2 id=\"25f9c7fa\">总结</h2><ol><li>需要保存跟之前一样的环境，一样配置，即操作系统、计算机名、oracle版本（桌面版或者是企业版必须一致）、windows的配置(.net framework 3.5)</li><li><span>重新安装oracle，创建与旧oracle一模一样的实例，停掉所有服务，将旧oracle安装目录整个替换为新oracle，直接重新启动服务器。</span></li><li><span>此时你可能会发现，只有监听服务没有启动，重新配置监听，使用<span>“net Configuration Assistant”删除1521监听，重新建立1521监听</span></span></li><li>查看oracle实例服务是否启动，已经启动，进入cmd管理员</li><p><br /></p></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22set%20oracle_sid%3Dsid%5Cnsqlplus%20%2F%20as%20sysdba%5Cnstartup%22%2C%22id%22%3A%226I1yW%22%7D\"></card><ol><p>以下图片中代码与上面相同</p></ol><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550592738223-a093d680-6243-483f-8532-811d71fcb822.png\" style=\"width: 377px; height: 194px;\" /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-05T07:21:03.000Z",
    "deleted_at": null,
    "created_at": "2019-02-19T15:12:33.000Z",
    "updated_at": "2019-05-05T07:21:03.000Z",
    "published_at": "2019-05-05T07:21:03.000Z",
    "first_published_at": "2019-02-19T16:18:07.000Z",
    "word_count": 1134,
    "cover": null,
    "description": "tags: [oracle,数据库]categories: oracle参考链接Oracle数据库冷备份与恢复（救命稻草）——博客园@Hellow world  （这篇文章参考测试了很久，很遗憾没有成功）重装系统后ORACLE的恢复——CSDN@haiross  （注：用户能够登录了，但是在n...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1265754,
    "slug": "zxy4nd",
    "title": "svn之svn server重装系统恢复",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [svn,版本控制工具]<br />categories: svn<br />---\n<a name=\"bd1bf7e7\"></a>\n# 转载链接\n[windows操作系统重装后恢复svn仓库、tortoisesvn客户端信息、及权限信息的方法——博客园@mni_Ya](http://www.cnblogs.com/painwhy/p/4085873.html)  \n<a name=\"019fa851\"></a>\n# svn之svn server重装系统恢复\n<a name=\"0585c62f\"></a>\n## **SVN仓库信息的恢复（使用visual svn作为svn服务器的）**\n前提：必须要有原来的仓库文件<br />a.下载与原来同样版本的visual svn或者下载最新的visualsvn 。因为你不知道原来的visualsvn的版本，所以安装旧的版本是无法恢复仓库信息的，提示错误 Expected FS format between '1' and '3'; found format '4'。<br />visual svn下载地址：[https://www.visualsvn.com/server/](https://www.visualsvn.com/server/)<br />b.安装完之后把原来的仓库文件放入新的仓库位置\n\n<!--more-->\n\n<a name=\"ae5a8d41\"></a>\n## svn客户端信息的恢复（使用tortoiseSvn作为客户端）\n前提必须要有原来的svn文件<br />只要安装和从前tortoiseSvn一个版本的就好，版本信息可以在你的文件中的svn目录中看到，为隐藏目录<br />tortoiseSvn下载地址：[http://tortoisesvn.net/downloads.html](http://tortoisesvn.net/downloads.html)\n<a name=\"41ed8f57\"></a>\n## svn权限恢复\n只要你记得原来的用户名密码可以直接用，要是不记得使用visualsvn建立一个新的用户分配权限，调节成没有权限是不行的<br /> <br />这是笔者重装了一次操作系统，总结出来恢复svn信息的方法，希望对遇到同样问题的人有帮助。\n\n",
    "body_draft": "",
    "body_html": "<p>tags: [<span>svn</span>,版本控制工具]</p><p>categories: svn</p><p>---</p><h1 id=\"bd1bf7e7\">转载链接</h1><p><a href=\"http://www.cnblogs.com/painwhy/p/4085873.html\" target=\"_blank\">windows操作系统重装后恢复svn仓库、tortoisesvn客户端信息、及权限信息的方法——博客园@mni_Ya</a>  </p><h1 id=\"019fa851\">svn之svn server重装系统恢复</h1><h2 id=\"0585c62f\"><strong>SVN仓库信息的恢复（使用visual svn作为svn服务器的）</strong></h2><p>前提：必须要有原来的仓库文件</p><p>a.下载与原来同样版本的visual svn或者下载最新的visualsvn 。因为你不知道原来的visualsvn的版本，所以安装旧的版本是无法恢复仓库信息的，提示错误 Expected FS format between '1' and '3'; found format '4'。</p><p>visual svn下载地址：<a href=\"https://www.visualsvn.com/server/\" target=\"_blank\">https://www.visualsvn.com/server/</a></p><p>b.安装完之后把原来的仓库文件放入新的仓库位置</p><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><h2 id=\"ae5a8d41\">svn客户端信息的恢复（使用tortoiseSvn作为客户端）</h2><p>前提必须要有原来的svn文件</p><p>只要安装和从前tortoiseSvn一个版本的就好，版本信息可以在你的文件中的svn目录中看到，为隐藏目录</p><p>tortoiseSvn下载地址：<a href=\"http://tortoisesvn.net/downloads.html\" target=\"_blank\">http://tortoisesvn.net/downloads.html</a></p><h2 id=\"41ed8f57\">svn权限恢复</h2><p>只要你记得原来的用户名密码可以直接用，要是不记得使用visualsvn建立一个新的用户分配权限，调节成没有权限是不行的</p><p> </p><p>这是笔者重装了一次操作系统，总结出来恢复svn信息的方法，希望对遇到同样问题的人有帮助。</p><p><br /></p>",
    "body_lake": "<!doctype lake><p>tags: [<span>svn</span>,版本控制工具]</p><p>categories: svn<cursor /></p><p>---</p><h1 id=\"bd1bf7e7\">转载链接</h1><p><a href=\"http://www.cnblogs.com/painwhy/p/4085873.html\" target=\"_blank\">windows操作系统重装后恢复svn仓库、tortoisesvn客户端信息、及权限信息的方法——博客园@mni_Ya</a>  </p><h1 id=\"019fa851\">svn之svn server重装系统恢复</h1><h2 id=\"0585c62f\"><strong>SVN仓库信息的恢复（使用visual svn作为svn服务器的）</strong></h2><p>前提：必须要有原来的仓库文件</p><p>a.下载与原来同样版本的visual svn或者下载最新的visualsvn 。因为你不知道原来的visualsvn的版本，所以安装旧的版本是无法恢复仓库信息的，提示错误 Expected FS format between '1' and '3'; found format '4'。</p><p>visual svn下载地址：<a href=\"https://www.visualsvn.com/server/\" target=\"_blank\">https://www.visualsvn.com/server/</a></p><p>b.安装完之后把原来的仓库文件放入新的仓库位置</p><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><h2 id=\"ae5a8d41\">svn客户端信息的恢复（使用tortoiseSvn作为客户端）</h2><p>前提必须要有原来的svn文件</p><p>只要安装和从前tortoiseSvn一个版本的就好，版本信息可以在你的文件中的svn目录中看到，为隐藏目录</p><p>tortoiseSvn下载地址：<a href=\"http://tortoisesvn.net/downloads.html\" target=\"_blank\">http://tortoisesvn.net/downloads.html</a></p><h2 id=\"41ed8f57\">svn权限恢复</h2><p>只要你记得原来的用户名密码可以直接用，要是不记得使用visualsvn建立一个新的用户分配权限，调节成没有权限是不行的</p><p> </p><p>这是笔者重装了一次操作系统，总结出来恢复svn信息的方法，希望对遇到同样问题的人有帮助。</p><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-03T09:15:44.000Z",
    "deleted_at": null,
    "created_at": "2019-02-19T03:02:06.000Z",
    "updated_at": "2019-03-03T09:15:45.000Z",
    "published_at": "2019-03-03T09:15:44.000Z",
    "first_published_at": "2019-02-19T03:16:02.000Z",
    "word_count": 361,
    "cover": null,
    "description": "tags: [svn,版本控制工具]categories: svn---转载链接windows操作系统重装后恢复svn仓库、tortoisesvn客户端信息、及权限信息的方法——博客园@mni_Ya  svn之svn server重装系统恢复SVN仓库信息的恢复（使用visual svn作为s...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1249986,
    "slug": "nctgk1",
    "title": "spring之spring boot",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-05T13:49:15.000Z",
    "deleted_at": null,
    "created_at": "2019-02-14T14:43:16.000Z",
    "updated_at": "2019-03-05T13:49:15.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "参考链接String Iinitializtionspring bootquick start首先进入spring 官网在projects下进入spring初始化页面",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1246600,
    "slug": "yd4suv",
    "title": "oracle之技术经验",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [oracle,数据库]<br />categories: oracle\n\n---\n\n\n<a name=\"f66bd8f4\"></a>\n# ****O****ra****cle****经验****\n \n<a name=\"e9a9187c\"></a>\n## ****申明****\n本文大部分资料来自《深入理解Oracle 12c数据库管理》，但是也有自己的个人观点，大家也去看这本书\n<a name=\"e05dce83\"></a>\n## ****简介****\n\tOracle数据库已经是当今世界技术前沿了，因为它优点突出 <br />有以下优点：<br />(1) 拥有其他数据库系统所没有的表空间概念；<br />(2) 拥有真正的等级锁功能<br />(3) 拥有多版本数据功能，读写操作不会相互等待（我觉得是非常的好特性）<br />(4) 拥有更快的处理速度和更高的安全性；<br />(5) 拥有丰富的数据字典，易于DBA判断数据库的各种情况；<br />(6) 拥有非常简单明了的备份与恢复原理<br />(7) Oracle数据库可以启动到多个阶段，DBA可以在不同的情况下，通过启动到特定的阶段解决一些特殊问题<br />(8) Oracle可以跨越多种软、硬平台。\n\n<a name=\"362eced1\"></a>\n## ****Oracle****安装和创建****(****由于本文作者觉得linux太花费时间，故只有这部分讲解到linux****)****\nOracle安装一般有两种，一种是图形界面的安装，另一种是无界面安装。建议是无界面，因为图形界面在宽带不足情况下，可能出现加载远程界面慢的问题，而且不能自动化。无界面可以依靠应答文件来安装。\n<a name=\"712f5efa\"></a>\n### ****了解OFA标准****\nOFA标准是指oracle的目录结构和文件名，然而大部分DBA（database manager数据库管理员简称DBA）都在一定程度上自定义了，以适应于不同的环境。<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117219355-d3c0e3a0-41c9-45c4-ae0c-a89fe13bccb3.png#align=left&display=inline&height=507&name=image.png&originHeight=507&originWidth=835&size=295404&status=done&width=835)<br /><!--more-->\n<a name=\"119c5730\"></a>\n### ****库的高速缓存和数据字典的高速缓存****\n \n<a name=\"a55e5de5\"></a>\n#### ****库的高速缓存****\n是用来存放你实际表的数据块的，如表TAB_A里实际存放的若干条数据记录，一般都存放在用户的表空间里。<br /> <br /> \n<a name=\"773d69a4\"></a>\n#### ****数据字典的高速缓存****\n用来存放表的定义，如表TAB_A，有几个字段，每个字段的类型、长度，表空间等，这类信息在你建表后会存放在系统表里，都是在SYSTEM表空间下，ORACLE运行时，这些信息被装入数据字典高速缓存里。<br /> \n<a name=\"7f04d897\"></a>\n#### ****数据字典的意思是****\n简单的说就和我们小学用的词典的目录一样  要查询个表的数据 首先要确认这个词典（数据库）中有这个词语（表）  吧<br /> \n<a name=\"2655d132\"></a>\n### ****安装oracle****\n \n<a name=\"061f72da\"></a>\n#### ****创建对应的权限的O****S****用户组****\n我们需要linux上创建一些OS用户组，安装完oracle之后就可以为linuxOS用户组分配的相应的数据库操作权限，正常来说OS用户组（注：用户和用户组是不一样的）的创建是属于系统管理员（SA）的工作，但是大部分情况没有SA。<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117248391-cbfc23d8-2f3c-4bb5-b862-65300cfb607d.png#align=left&display=inline&height=488&name=image.png&originHeight=488&originWidth=822&size=254798&status=done&width=822)<br />不必根据一字不差照搬组名，可以根据不一样环境来配置。<br /> \n<a name=\"657ad920\"></a>\n##### ****运行linux命令，创建组****\n我们只按照简单的功能来分组就好了，oinstall负责安装和卸载权限，dba具有完全操作权限，oper只具有数据库操作权限（包含一些删除表，创建表，修改等待权限 ）<br />groupadd oinstall<br />groupadd dba<br />groupadd oper<br /> \n<a name=\"ccd2979a\"></a>\n###### ****查看创建的OS组****\ncat /etc/group<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117306714-eef5438b-f88e-43d4-9ecb-0d43990fe65f.png#align=left&display=inline&height=386&name=image.png&originHeight=386&originWidth=281&size=12073&status=done&width=281)<br />1000、1001、1002是我们组的ID\n<a name=\"87c9fadb\"></a>\n##### ****创建用户并分配组****\nuseradd -u 500 -g oinstall -G dba , oper oracle<br />将组ID设置500(其他同事可能需要人执行相同的组ID来执行所有安装)<br />创建主属组为oinstall，创建副属组为dba,oper<br />-g 和-G，分别是分配主属组和附属组的意思。\n<a name=\"d82e410e\"></a>\n###### ****查看用户信息****\ncat /etc/passwd<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117322832-e84ea737-28ec-450b-9087-7f6f9c5272ea.png#align=left&display=inline&height=385&name=image.png&originHeight=385&originWidth=827&size=30460&status=done&width=827)<br /> \n<a name=\"e7d20343\"></a>\n###### ****删除修改用户，或者用户组****\n修改删除用户组：groupmod、groupdel<br />修改删除用户：usermod、userdel<br />以上命令需要使用系统管理员登录\n<a name=\"11c5905d\"></a>\n#### ****查看linux环境信息****\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117345109-376aba41-14b7-46f6-9e38-8141c9886cfb.png#align=left&display=inline&height=401&name=image.png&originHeight=401&originWidth=860&size=45732&status=done&width=860)以下为我本人系统的信息<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117364504-14c00655-46d0-4c60-a248-84661ea1cb04.png#align=left&display=inline&height=452&name=image.png&originHeight=452&originWidth=666&size=29951&status=done&width=666)<br />grep MemTotal  /proc/meminfo<br />free –t<br />df –h /tmp<br />df –h<br />cat /proc/version<br />uname –r<br /> <br />rpm –q <package name> 查询是否已经安装必须的软件包\n<a name=\"fdd1ae5b\"></a>\n## ****管理数据库****\n \n<a name=\"dfc119cb\"></a>\n### ****S****ysdba数据库账号****\n这个账号可拥有除了关闭数据库以外的所有操作权限<br />as sysdba作为系统管理员登录\n<a name=\"6aee7bf5\"></a>\n### ****第一次操作数据库****\nstartup onmount 启动后台进程并分配内存，此命令执行后，sql*plus会读取ORACLE_HOME/dbs中的初始化文件，会使后台进程和内存区域初始化，这样你就拥有了oracle的实例，但是还没有数据库<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117384566-27b7d3ce-0863-4a79-ac04-4ec4bfc56b98.png#align=left&display=inline&height=228&name=image.png&originHeight=228&originWidth=603&size=11983&status=done&width=603)<br />oracle实例是指后台进程和内存区域，oracle数据库是指磁盘上的物理文件（数据文件、控制文件、联机重做日志文件）\n<a name=\"187ec332\"></a>\n### ****表空间****\n<a name=\"fcf86c6f\"></a>\n#### ****查询TEMP临时表空间****\nselect*from database_properties where property_name='DEFAULT_TEMP_TABLESPACE';<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117405819-4e8691dc-3239-445c-b58e-e77a25fa45f4.png#align=left&display=inline&height=202&name=image.png&originHeight=202&originWidth=620&size=7894&status=done&width=620)\n<a name=\"5d4d5693\"></a>\n#### ****USER表空间****\nselect*from database_properties<br />where roperty_name='DEFAULT_PERMANENT_TABLESPACE';<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117417926-a850da9d-5066-484f-9f27-e1aedcadea79.png#align=left&display=inline&height=172&name=image.png&originHeight=172&originWidth=632&size=7080&status=done&width=632)\n<a name=\"00caab79\"></a>\n### ****连接标识****\n<a name=\"8d258c38\"></a>\n#### ****Oracle 的OCI Driver 和 Thin Driver的区别****\n有以下两种标识方式：<br /> <br />jdbc:oracle:oci8:@shdb<br /> <br />1）从使用上来说，oci必须在客户机上安装oracle客户端或才能连接，而thin就不需要，因此从使用上来讲thin还是更加方便，这也是thin比较常见的原因。 <br />2）原理上来看，thin是纯java实现tcp/ip的c/s通讯；而oci方式,客户端通过native java method调用c library访问服务端，而这个c library就是oci(oracle called interface)，因此这个oci总是需要随着oracle客户端安装（从oracle10.1.0开始，单独提供OCI Instant Client，不用再完整的安装client） <br />3）它们分别是不同的驱动类别，oci是二类驱动， thin是四类驱动，但它们在功能上并无差异。<br /> \n<a name=\"3a0f1856\"></a>\n### ****查询实例名（SID）****\nsqlplus / as sysdba<br />show parameter instance_name<br /> \n<a name=\"f858894c\"></a>\n## ****配置用户和数据库对象****\n<a name=\"f8876e5d\"></a>\n## ****创建和维护大型数据库对象、分区和索引****\n<a name=\"d2adec7f\"></a>\n## ****备份和恢复****\n<a name=\"01a62dbc\"></a>\n## ****数据库自动化及常见问题解决方法****\n<a name=\"9d2f273a\"></a>\n## ****管理窗口和可插入数据库****\n<a name=\"d579eb7d\"></a>\n## ****Oracle 导入导出及连接****\n<a name=\"ea6f3b87\"></a>\n### ****参考链接****\n[Oracle数据库导入导出命令总结](http://blog.itpub.net/21614165/viewspace-766937/)<br />[sqlplus连接远程数据库](http://blog.csdn.net/wildin/article/details/5850252)<br />[ORACLE的impdp和expdp命令](http://www.cnblogs.com/wanghongyun/p/6307652.html)<br />[oracle expdp——红黑联盟](https://www.2cto.com/database/201304/203709.html)\n<a name=\"02babed4\"></a>\n### ****exp 和imp导入导出****\n<a name=\"f77e0e7c\"></a>\n#### ****导出命令 (exp)****\n****格式：****\n\n```\nexp [用户名]/[密码]@[主机ip]:[端口号]/[SID/service] file=d:\\zhpt.dmp full=n\n```\n\nfile是导出路径full=n,表示是否导出主机数据库上全部用户，n表示否，y表示是<br />exp abc/abc@183.233.179.165:1521/orcl file=d:\\zhpt.dmp full=y<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117435502-1497acdc-62e6-4f06-bcb2-86eb61c72693.png#align=left&display=inline&height=34&name=image.png&originHeight=34&originWidth=625&size=2889&status=done&width=625)<br />如果密码出特殊符号，使用`\"\"\"`包裹，如果其他地址有特殊符号，需要用`\\`转义，需要指定用户导出可以使用`owner`\n\n```powershell\nexp grz/\"\"\"g2011*)\"\"\"@19.129.180.19:1521/oracle file=gr20190410.dmp owner in \\(\\'gr\\',\\'jzs'\\) full=n\n```\n\n<a name=\"606fd7a7\"></a>\n#### ****导入数据库（imp）****\n\n```powershell\n# full 表示是否导出全部数据，一定要设置\n# log 输出日志文件# fromuser 从哪一个用户导入\n# touser 导入到哪个用户\n# ignore=y buffer=100000000; 修改缓冲区大小，有时sql语句过长，会造成缓冲区空间不足\nimp username/pwd@orcl file=d:\\zhpt.dmp log=C:\\data\\logname.log full=y\n# 或者\nimp username/pwd@orcl file=E:\\20171108.dmp fromuser=username touser= username log=D:\\webBackend\\kingzheng\\住房保障系统\\fszfbz201711191635.log full=n\n# 或者\nimp username/pwd@orcl file=d:\\zhpt.dmp log=C:\\data\\logname.log full=y ignore=y buffer=100000000;\n```\n \n<a name=\"69a49bc6\"></a>\n### ****expdp和impdp创建数据泵导入导出**** ****\n<a name=\"f0c6d9cb\"></a>\n#### ****需要先创建数据泵****\n数据泵，说白了就是指定一个目录给oracle，但是oracle不会帮你创建的，需要自己先实际地创建\n\n```sql\n#  查看所有数据泵地址\nselect * from dba_directories;# 创建数据泵，数据泵地址即为你的导出导入地址文件地址\ncreate directory myname as 'D:\\temp\\数据泵地址';# 授予权限 sshe这个用户可读可写\ngrant read,write on directory dpdata1 to sshe;\n\nsql>--可以使用以下语句查看目录操作权限\nsql>  SELECT privilege, directory_name, DIRECTORY_PATH FROM user_tab_privs t, all_directories d WHERE t.table_name(+) = d.directory_name ORDER BY 2, 1; \n```\n\n**注意：** 数据泵地址以及文件dmp需要自己创建\n<a name=\"837cb31c\"></a>\n#### ****导出数据（expdp）****\n这种数据泵效率非常高，但是使用这种数据泵导出的数据，****一般情况下只在本机导出****，需要用impdp导入\n\n```\nrem my_dir是数据泵名称\n\nrem exclude table:\"in(表名,列名2，……)\"不导出某些表\n\nexpdp test/test@orcl directory=my_dir dumpfile=my.dmp exclude=table:\\\"in \\(\\'DEPT\\',\\'EMP\\'\\)\\\" SCHEMAS=FSJSCX\n```\n\n<a name=\"Impdp\"></a>\n#### ****Impdp****\n跟expdp的语法格式差不多\n\n```\n impdp test/test@orcl DIRECTORY=my_dir  DUMPFILE=my.dmp SCHEMAS=test logfile=%logfile%\n```\n \n<a name=\"d303267a\"></a>\n##### ****问题：****\n<a name=\"29398c59\"></a>\n###### ****这些对象由 FSZJZ 导出, 而不是当前用户****\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117805403-46bf4a8c-9f04-4d1a-9def-916cf1fd0a66.png#align=left&display=inline&height=134&name=image.png&originHeight=134&originWidth=517&size=10915&status=done&width=517)<br />导出是哪个用户，导入时用户也要相同，需要自己再创建一个用户<br /> \n<a name=\"2e846665\"></a>\n###### ****只有管理员用户，才可以导入****\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550117815821-b03a30e3-3157-4e16-8e5d-4cfb4766f698.png#align=left&display=inline&height=80&name=image.png&originHeight=80&originWidth=412&size=4702&status=done&width=412) \n<a name=\"5b692eb8\"></a>\n###### ****ora-28759 无法打开文件****\n以下这两句可能在不同的操作系统，支持不同，不太清楚，我服务器，两个都是sever2008，但是只有一个报这个错误，这个报错确实跟用户连接有关系，****最好是采用second****<br /> \n<a name=\"88e73bd4\"></a>\n### ****sqlplus 远程连接数据库****\n<a name=\"ce1ec2ce\"></a>\n#### ****远程连接****\n\n```\n命令：sqlplus 用户名/密码@ip地址[:端口]/service_name [as sysdba]\n\n示例：sqlplus sys/pwd@ip:1521/test as sysdba\n```\n\n<a name=\"0dfbe902\"></a>\n#### ****常用命令****\n\n```\nSQL>set colsep' ';　　　　 //-域输出分隔符\n\nSQL>set echo off;　　　　 //显示start启动的脚本中的每个sql命令，缺省为on\n\nSQL> set echo on              //设置运行命令是是否显示语句\n\nSQL> set feedback on;       //设置显示“已选择XX行”\n\nSQL>set feedback off;　    //回显本次sql命令处理的记录条数，缺省为on\n\nSQL>set heading off;　　 //输出域标题，缺省为on\n\nSQL>set pagesize 0;　　    //输出每页行数，缺省为24,为了避免分页，可设定为0。\n\nSQL>set linesize 80;　　   //输出一行字符个数，缺省为80\n\nSQL>set numwidth 12;　    //输出number类型域长度，缺省为10\n\nSQL>set termout off;　　   //显示脚本中的命令的执行结果，缺省为on\n\nSQL>set trimout on;　　　//去除标准输出每行的拖尾空格，缺省为off\n\nSQL>set trimspool on;　　//去除重定向（spool）输出每行的拖尾空格，缺省为off\n\nSQL>set serveroutput on; //设置允许显示输出类似dbms_output\n\nSQL> set timing on;          //设置显示“已用时间：XXXX”\n\nSQL> set autotrace on;    //设置允许对执行的sql进行分析\n\nSQL> set verify off;           //可以关闭和打开提示确认信息old 1和new 1的显示.\n```\n\n导出结果到文本：<br />spool<spool_flat_file><br />例如：spool d:\\Spool_flatquery.txt<br />这样，SQL*Plus将把所有的输出以及在屏幕上的命令等都指定给该文件。<br />执行查询输出。此时，系统并没有把结果保存到文件中，而是保存到缓冲区中。<br />查询结束后，关闭文件即可。命令格式为：spool off。\n<a name=\"df0cbcf7\"></a>\n### ****oracle之jdbc连接oracle****\n<a name=\"b5f7449a\"></a>\n#### ****使用sid方式：****\n\n```\njdbc:oracle:thin:@host:port:SID \n\nExample: jdbc:oracle:thin:@localhost:1521:orcl \n```\n\n<a name=\"e0db0567\"></a>\n#### ****使用服务名方式****\n使用服务名的方式，这种格式是Oracle 推荐的格式，因为对于集群来说，每个节点的SID 是不一样的，但是SERVICE_NAME 确可以包含所有节点。\n\n```\njdbc:oracle:thin:@//host:port/service_name\n\nExample:jdbc:oracle:thin:@//localhost:1521/orcl.city.com\n```\n\n<a name=\"859540a4\"></a>\n#### ****使用TNSName ****\n[]()使用[TNSName ]()， 要实现这种连接方式首先要建立tnsnames.ora文件，然后通过System.setProperty指明这个文件路径。再通过上面URL中的@符号指定文件中的要使用到的资源。<br />这种格式我现在水平几乎没见过，对于我来说用得到这种的情况并不多吧。当然既然是通过配置文件来读取指定资源肯定也可以直接将资源拿出来放在URL中，直接放在URL中的URL模版是下面这样的（tnsnames.ora这个文件中放的就是@符号后面的那一段代码，当然用文件的好处就是可以配置多个，便于管理）：\n\n```\njdbc:oracle:thin:@TNSName \n\nExample: jdbc:oracle:thin:@TNS_ALIAS_NAME\n\njdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL= TCP)(HOST=hostA)(PORT= 1522))(ADDRESS=(PROTOCOL=TCP)(HOST=your host)(PORT=1521)))(SOURCE_ROUTE=yes)(CONNECT_DATA=(SERVICE_NAME=your service_name)))\n```\n\n<a name=\"efbc27b9\"></a>\n## ****Oracle obj（plsql中解释为对象）****\n<a name=\"019aaceb\"></a>\n#### ****Function 函数****\n \n<a name=\"d283ab83\"></a>\n#### ****Procedure 存储过程****\n<a name=\"ea6f3b87-1\"></a>\n##### ****参考链接****\n[Oracle创建存储过程、创建函数、创建包——博客园@helong](https://www.cnblogs.com/helong/articles/2093807.html) <br />[ORACLE执行存储过程权限不足——CSDN@He之涅槃](https://blog.csdn.net/u010109335/article/details/60577055)<br /> \n<a name=\"e3127cc1\"></a>\n##### ****格式****\n\n```\ncreate or replace procedure procedure_name(Name in out type, Name in out type, ...) isbegin\n\n  end procedure_name;\n```\n\n<a name=\"1a63ac23\"></a>\n##### ****示例****\n\n```sql\n--自动创建表格，并update数据\n\n--dbms_output.put_line()需要先在command（命令行界面）“set serverout on ”打开输出\n\ncreate or replace procedure update_qylxid_of_null_for_rygx\n\nAuthid Current_User\n\nis\n\n  v_date varchar2(8);--定义日期变量\n\n  v_sql varchar2(2000);--定义动态sql\n\n  v_tablename varchar2(20);--定义动态表名\n\n  begin\n\n   select to_char(sysdate,'yyyymmdd') into v_date from dual;--取日期变量\n\n   v_tablename := 'T_'||v_date;--为动态表命名\n\n   v_sql := 'create table '||v_tablename||'as select*from t_qy';--为动态sql赋值\n\n   dbms_output.put_line(v_sql);--打印sql语句\n\n   execute immediate v_sql;--执行动态sql\n\n   v_sql:='update t_qy t set t.LXID=(select LXID from t_qy_qy lx where lx.bh=t.bh and lx.LX =t.dm) where  t.lxid is null';\n\n   dbms_output.put_line(v_sql);--打印sql语句\n\n   execute immediate v_sql;--执行动态sql\n\nend update_qylxid_of_null_for_rygx;\n```\n\n<a name=\"50d52dd9\"></a>\n##### ****常见问题****\n<a name=\"1fc98647\"></a>\n###### ****ORACLE执行存储过程权限不足****\n[ORACLE执行存储过程权限不足——CSDN@He之涅槃](https://blog.csdn.net/u010109335/article/details/60577055)\n\n```\n--需要增加Authid Current_User\n\n--AUTHID DEFINER （定义者权限）：指编译存储对象的所有者。也是默认权限模式。\n\n--AUTHID CURRENT_USER（调用者权限）：指拥有当前会话权限的模式，这可能和当前登录用户相同或不同(alter session set current_schema 可以改变调用者Schema)create or replace PROCEDURE 存储过程名称\n\nAuthid Current_User\n\nIS \n\nBEGIN\n\n \n\n……；\n\nEND;\n\n \n```\n\n<a name=\"618d4aaf\"></a>\n#### ****Database link 数据库链接****\n即在需要在两个不同的数据库中连接表或者查询数据时，可创建数据库链接\n<a name=\"481feccf\"></a>\n##### ****如何使用****\n\n```\n--user_tables 是DBLINK_test所链接的用户的表\n\nselect * from user_tables@DBLINK_test;\n\n--链接可以方便于多个数据库用户关联查询数据，非常方便,mytable 是你当前登录用户的表\n\nselect * from user_tables@DBLINK_test t,mytable t2 where t2.id=t.id;\n```\n\n<a name=\"ea6f3b87-2\"></a>\n##### ****参考链接****\n[oracle中的database link如何使用——百度经验@wangzhiqing999](#best-answer-746405041)\n<a name=\"345cd1b6\"></a>\n##### ****oracle sql创建****\n\n```\n\n-- Drop existing old  database link --DBLINK_test是database link的名称drop database link DBLINK_test;-- Create new database link -- other_db 为用户名 pwd为密码create database link DBLINK_test\n\n  connect to other_db IDENTIFIED BY  pwd\n\n  using '(DESCRIPTION =\n\n(ADDRESS_LIST =\n\n(ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521))\n\n)\n\n(CONNECT_DATA =\n\n(SERVICE_NAME = orcl)\n\n)\n\n)';--查询 database link select * from dba_db_links;\n```\n\n如果创建全局dblink，必须使用systm或sys用户，在database前加public\n\n```\ncreate  public  database link DBLINK_test\n\n  connect to other_db IDENTIFIED BY  pwd\n\n  using '(DESCRIPTION =\n\n(ADDRESS_LIST =\n\n(ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521))\n\n)\n\n(CONNECT_DATA =\n\n(SERVICE_NAME = orcl)\n\n)\n\n)';\n```\n\n<a name=\"5f005e3c\"></a>\n##### ****通过plsql创建****\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550118003862-eccf0b6e-7132-4106-aa23-e2b350ce0b5b.png#align=left&display=inline&height=408&name=image.png&originHeight=408&originWidth=327&size=22765&status=done&width=327) <br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550118072979-b08dec8d-fd6a-4d8f-99cc-50fbc1e4e75c.png#align=left&display=inline&height=376&name=image.png&originHeight=376&originWidth=971&size=30163&status=done&width=971) <br /> \n<a name=\"146704a5\"></a>\n## ****常用函数及sql实例****\n<a name=\"ea6f3b87-3\"></a>\n### ****参考链接****\n[Oracle中replace函数的使用](http://www.cnblogs.com/harvey888/p/5957656.html)<br />[Oracle round函数是什么意思?怎么运用?](https://zhidao.baidu.com/question/14756835.html)<br />[oracle的nvl](https://zhidao.baidu.com/question/552089573.html)<br />[Oracle 中 decode 函数用法](http://www.cnblogs.com/vinsonLu/p/3512526.html)<br />[[oracle] to_date() 与 to_char() 日期和字符串转换](http://www.cnblogs.com/gaojing/archive/2008/11/07/1328657.html)<br />[Oracle的Cast的用法](http://blog.csdn.net/ziwen00/article/details/8685858) <br />[Oracle 大小写转换函数——博客园@Twang](https://www.cnblogs.com/wangfuyou/p/6605166.html)\n<a name=\"ca48b68b\"></a>\n### ****常用函数****\n<a name=\"2a18f8a8\"></a>\n#### ****判断是否为数字****\n\n```\n# 注意只能判断纯数字，不带小数,判断带小数方式请查看下文“常用sql”创建函数\n\nSELECT nvl2(translate('123','/1234567890','/'),'CHAR','NUMBER')   \n\nFROM   dual ;\n```\n\n<a name=\"da5a6765\"></a>\n#### ****add_months()日期增加，以月为单位****\n\n```\nadd_months(sysdate,12)--增加一年\n\nadd_months(sysdate,-12)--减去一年\n\nsysdate+1 --加一天\n```\n\n<a name=\"c79a4a1b\"></a>\n#### ****to_date()****\n\n```\nto_date(\"要转换的字符串\",\"转换的格式\")\n\nto_date(t.access_date,'yyyy-mm-dd hh24:mi:ss')--2005-12-25 13:25:59\n\nTO_DATE('17-DEC-1980', 'DD-MON-YYYY','NLS_DATE_LANGUAGE=American')--日期语言\n```\n\n<a name=\"b0a57818\"></a>\n#### ****replace替换字符****\n\n```\nreplace(原字段，'原字段旧内容','原字段新内容')--替换字符串\n```\n\n<a name=\"fecd35a6\"></a>\n#### ****round四舍五入****\n\n```\n`round(number)``round(number, decimal_places )`\n\n \n\nnumber ---需要四舍五入的数字\n\ndecimal_places ---从哪里开始四舍五入，此参数是下标，预设为0\n\n \n\nselect round(123.456, 0) from dual;     --- 123 \n```\n\n<a name=\"2510b668\"></a>\n#### ****nvl如果为空返回新值****\n \n```\nnvl(字段名，'新的返回的值')\n\n如果提供的字段的值为空，则将返回这个新值，注意：只是返回了这个值，并不是update到表中\n\n \n\n nvl(name,'小明')---name为空，返回小明\n```\n\n<a name=\"d623ee97\"></a>\n#### ****decode逻辑判断简化****\n\n```\ndecode(条件,值1,返回值1,值2,返回值2,...值n,返回值n,缺省值)\n\n \n\n该函数的含义如下：IF 条件=值1 THEN\n\n　　　　RETURN(翻译值1)\n\nELSIF 条件=值2 THEN\n\n　　　　RETURN(翻译值2)\n\n　　　　......\n\nELSIF 条件=值n THEN\n\n　　　　RETURN(翻译值n)ELSE\n\n　　　　RETURN(缺省值)\n\nEND IF\n\ndecode(字段或字段的运算，值1，值2，值3）\n\n \n\n该函数的含义如下：\n\n 这个函数运行的结果是，当字段或字段的运算的值等于值1时，该函数返回值2，否则返回值3\n\n 当然值1，值2，值3也可以是表达式，这个函数使得某些sql语句简单了许多\n 注意：值2和值3的数据类型必须一致\n```\n\n\n\n<a name=\"4e7db3ce\"></a>\n#### ****sys_guid()生成唯一32位字符串****\n\n```\nsys_guid()\n```\n\n<a name=\"774534e1\"></a>\n#### ****CAST(expr AS type_name) 数值类型转换****\n\n```\n--例\n\ncast(R.MONTH as int)--将月份转换为整型类型\n```\n\n<a name=\"5b106349\"></a>\n#### ****大小写转换****\n\n```\nselect UPPER('Test') as u from dual; --转大写\n\nselect LOWER('Test') as l from dual;--转小写\n```\n\n<a name=\"7db7c5f3\"></a>\n#### ****截取字符串****\n\n```\n--截取身份证出生日期\n\nto_date(substr('XXXXXXXXXXXXXXXXX',7,8),'YYYYMMDD')\n```\n\n<a name=\"425d8a49\"></a>\n#### ****删除左右字符、添加左右字符****\n\n```\nltrim(原字符,'需要删除的字符')--删除左边字符\n\nrtrim(原字符,'需要删除的字符')--删除右边字符\n\nLPAD(原字符,'需要添加的字符') --添加字符在左边\n\nRPAD(原字符,'需要添加的字符') --添加字符在右边--例\n\nltrim('abcdefg','abc')--删除左边abc，输出defg\n\nltrim('abqwert','abc')--删除左边ab，输出qwert\n\n \n\n \n\n \n\n \n\n \n```\n\n<a name=\"349ddcfc\"></a>\n### ****Sql实例****\n<a name=\"89f6884e\"></a>\n#### ****判断数字****（****创建函数****）****\n\n```\ncreate or replace function isNumber(p in varchar2)return number\n\nis\n\nresult number;begin\n\nresult := to_number(p);return 1;\n\nexceptionwhen VALUE_ERROR then return 0;end;\n```\n\n导出表结构\n\n```\nSELECT B.TABLE_NAME     AS \"表名\",\n\n       C.COMMENTS       AS \"表说明\",\n\n       B.COLUMN_ID      AS \"字段序号\",\n\n       B.COLUMN_NAME    AS \"字段名\",\n\n       B.DATA_TYPE      AS \"字段数据类型\",\n\n       B.DATA_LENGTH    AS \"数据长度\",\n\n       B.DATA_PRECISION AS \"整数位\",\n\n       B.DATA_SCALE     AS \"小数位\",\n\n       A.COMMENTS       AS \"字段说明\"\n\n  FROM ALL_COL_COMMENTS A, ALL_TAB_COLUMNS B, ALL_TAB_COMMENTS C\n\nWHERE A.TABLE_NAME IN (SELECT U.TABLE_NAME FROM USER_ALL_TABLES U)\n\n   AND A.OWNER = B.OWNER\n\n   AND A.TABLE_NAME = B.TABLE_NAME\n\n   AND A.COLUMN_NAME = B.COLUMN_NAME\n\n   AND C.TABLE_NAME = A.TABLE_NAME\n\n   AND C.OWNER = A.OWNER\n\n   AND A.OWNER = 'PYE'ORDER BY A.TABLE_NAME, B.COLUMN_ID;\n```\n\n<a name=\"abcdb7f1\"></a>\n#### ****修改不符合的时间，修改年份和月份**\n-\n\n```\n-更新有/的时间、有两个/的日期、月份为1位数的，改为两位数select  (substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))),substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime)),(length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'/',''))),t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'/','')))>=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'/','')))=2\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'/','')))>=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'/','')))=2\n\n--更新有/的时间、有两个/的日期、年份为1位数的，改为两位数select (substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)), t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'/','')))>=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'/','')))=1\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'/','')))>=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'/','')))=1\n\n \n\n--更新有/的时间、有两个-的日期、月份为1位数的，改为两位数select  (substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))),t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'-','')))>=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'-','')))=2\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'-','')))>=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'-','')))=2\n\n--更新有-的时间、有两个-的日期、年份为1位数的，改为两位数select (substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)), t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'-','')))>=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'-','')))=1\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)<10 and  (length(t.stime)-length(replace(t.stime,'-','')))>=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'-','')))=1\n\n \n\n \n```\n\n<a name=\"37a3a350\"></a>\n#### 查看所有表空间及容量\n\n```\nSELECT DBF.TABLESPACE_NAME,\n       DBF.TOTALSPACE \"总量(M)\",\n       DBF.TOTALBLOCKS AS 总块数,\n       DBF.TOTALSPACE-DFS.FREESPACE \"使用量(M)\",\n       DBF.TOTALBLOCKS-DFS.FREEBLOCKS AS 使用块数,      \n       DFS.FREESPACE \"剩余总量(M)\",\n       DFS.FREEBLOCKS \"剩余块数\",\n       (DFS.FREESPACE / DBF.TOTALSPACE) * 100 \"空闲比例\"\n  FROM (SELECT T.TABLESPACE_NAME,\n               SUM(T.BYTES) / 1024 / 1024 TOTALSPACE,\n               SUM(T.BLOCKS) TOTALBLOCKS\n          FROM DBA_DATA_FILES T\n         GROUP BY T.TABLESPACE_NAME) DBF,\n       (SELECT TT.TABLESPACE_NAME,\n               SUM(TT.BYTES) / 1024 / 1024 FREESPACE,\n               SUM(TT.BLOCKS) FREEBLOCKS\n          FROM DBA_FREE_SPACE TT\n         GROUP BY TT.TABLESPACE_NAME) DFS\n WHERE TRIM(DBF.TABLESPACE_NAME) = TRIM(DFS.TABLESPACE_NAME);\n```\n\n<a name=\"c60f6138\"></a>\n#### oracle表空间不足时处理\n表空间数据文件最大是32G，也就是说扩容最大为32G \n<a name=\"e7a0542d\"></a>\n##### 参考链接： \n[oracle 11g 导入数据库，表空间超过32G的解决办法——CSDN@冷静cc](https://blog.csdn.net/love_java_cc/article/details/52857363)  <br />[oracle 表空间不足解决办法大全——百度经验@javababy5](https://jingyan.baidu.com/article/48b37f8d6ca1eb1a646488dc.html)\n\n<a name=\"b7cc6308\"></a>\n##### 第一，可能表空间还未达到最大扩容内存，但未设置自动扩容\n\n```\n--修改数据文件内存50m为当前数据文件的内存大小\nalter database datafile 'D:\\ORACLE\\PRODUCT\\ORADATA\\TEST\\USERS01.DBF' resize 50m;\n--增加数据文件自动扩容功能,每次扩容为50m，最大不会超过32G\nalterdatabase datafile 'D:\\ORACLE\\PRODUCT\\ORADATA\\TEST\\USERS01.DBF' autoextend onnext 50m maxsize 32767m; \n```\n<a name=\"e3470cfa\"></a>\n##### 第二，表空间数据文件已经达到32G，则可以通过增加数据文件方式\n\n```\n--USERS是你的表空间名，H:\\IDE\\oracle\\oradata\\orcl\\USERS02.dbf可以改为你的任意地址，最好放在一起方便，\n--每次扩容50m，最大32G\nalter tablespace USERS  \nadd datafile 'H:\\IDE\\oracle\\oradata\\orcl\\USERS02.dbf' size 50m \nautoextend on next 50m maxsize 32767m;\n```\n\n\n<a name=\"5dc99f6e\"></a>\n## ****问题****\n<a name=\"122f6443\"></a>\n### ****oracle之违反唯一约束条件****\n出现这个原因，除了自己手动新增ID的情况外，还有就是引用自己创建的sequance，导入新表数据后，没有将新的sequance导入进来，可以将新sequance导入进来，也可以自动手动修改<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550118277133-fbbfbc99-569b-4a1e-ad5a-cf655ef6f786.png#align=left&display=inline&height=199&name=image.png&originHeight=199&originWidth=822&size=21888&status=done&width=822) <br /> \n<a name=\"e2d3e6c0\"></a>\n### ****修改字符集****\n<a name=\"ea6f3b87-4\"></a>\n#### ****参考链接****\n[如何改oracle AL16UTF16为AL32UTF8——百度知道](https://link.jianshu.com/?t=https://zhidao.baidu.com/question/134444813.html)<br />[建库时AL16UTF16字符集怎么设置？——出处: ITPUB论坛－中国最专业的IT技术社区](https://link.jianshu.com/?t=http://www.itpub.net/thread-505857-1-1.html%23pid3728655)<br />****操作：****\n\n```\nMicrosoft Windows [版本 6.1.7601]\n\n版权所有 (c) 2009 Microsoft Corporation。保留所有权利。\n\n \n\nC:\\Users\\Administrator>sqlplus / as sysdba\n\n \n\nSQL*Plus: Release 11.2.0.1.0 Production on 星期四 1月 11 12:00:49 2018\n\n \n\nCopyright (c) 1982, 2010, Oracle.  All rights reserved.\n\n \n\n \n\n连接到:\n\nOracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production\n\nWith the Partitioning, OLAP, Data Mining and Real Application Testing options\n\n \n\nSQL> shutdown immediate\n\n数据库已经关闭。\n\n已经卸载数据库。\n\nORACLE 例程已经关闭。\n\nSQL> startup mount\n\nORACLE 例程已经启动。\n\n \n\nTotal System Global Area 3290345472 bytes\n\nFixed Size                  2180224 bytes\n\nVariable Size            2164263808 bytes\n\nDatabase Buffers         1107296256 bytes\n\nRedo Buffers               16605184 bytes\n\n数据库装载完毕。\n\nSQL> ALTER SYSTEM ENABLE RESTRICTED SESSION;\n\n \n\n系统已更改。\n\n \n\nSQL> ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0;\n\n \n\n系统已更改。\n\n \n\nSQL> ALTER SYSTEM SET AQ_TM_PROCESSES=0;\n\n \n\n系统已更改。\n\n \n\nSQL> ALTER DATABASE OPEN;\n\n \n\n数据库已更改。\n\n \n\nSQL> ALTER DATABASE CHARACTER SET AL32UTF8;\n\nALTER DATABASE CHARACTER SET AL32UTF8\n\n*\n\n第 1 行出现错误:\n\nORA-12712: 新字符集必须为旧字符集的超集\n\n \n\n \n\nSQL> ALTER DATABASE CHARACTER SET AL16UTF16;\n\nALTER DATABASE CHARACTER SET AL16UTF16\n\n*\n\n第 1 行出现错误:\n\nORA-12712: 新字符集必须为旧字符集的超集# ALTER DATABASE national CHARACTER SET AL16UTF16;\n\n \n\nSQL> ALTER DATABASE character set INTERNAL_USE AL32UTF8;\n\n \n\n数据库已更改。\n\n \n\nSQL> SHUTDOWN IMMEDIATE;\n\n数据库已经关闭。\n\n已经卸载数据库。\n\nORACLE 例程已经关闭。\n\nSQL> STARTUP\n\nORACLE 例程已经启动。\n\n \n\nTotal System Global Area 3290345472 bytes\n\nFixed Size                  2180224 bytes\n\nVariable Size            2164263808 bytes\n\nDatabase Buffers         1107296256 bytes\n\nRedo Buffers               16605184 bytes\n\n数据库装载完毕。\n\n数据库已经打开。\n\nSQL>\n```\n\nALTER DATABASE character set INTERNAL_USE AL32UTF8;<br />INTERNAL_USE有点像是强制修改，其他用户角色可能会报错\n<a name=\"bf52b411\"></a>\n#### ****其他问题****\n<a name=\"3e2e31b2\"></a>\n##### ****AL16UTF16不能作为character set****\nAL16UTF16 不能用做数据库的character set，只能用做national character set 。<br />character set必须是single byte 7-bit ASCII或是单字节EBCDIC的子集，因此fixed width的多字节字符集(AL16UTF16)就不能做为character set。<br /> <br />你可以用如下这样用的：\n\n```\nCHARACTER SET US7ASCII NATIONAL CHARACTER SET AL16UTF16\n\n或是\n\nCHARACTER SET zhs16cgb231280  NATIONAL CHARACTER SET AL16UTF16\n\n \n\n \n\n \n\n \n```\n\n<a name=\"46b308ed\"></a>\n### ****如何修改服务名service_name****\n<a name=\"bd1bf7e7\"></a>\n##### ****转载链接****\n[如何修改 service_name](https://link.jianshu.com/?t=https://www.2cto.com/kf/201311/259856.html)\n<a name=\"d48898d5\"></a>\n##### ****例：****\n<a name=\"64162c1b\"></a>\n###### ****service_name原有环境：****\n\n```\nsid： mynewdb\n\nglobal_name：mynewdb\n\nservice_names： MYNEWDB\n\ndb_domain  ：\n\ndb_name：mynewdb\n```\n\n<a name=\"f0740534\"></a>\n###### ****需要修改如下：****\n\n```\nglobal_name：mynewdb\n\nservice_names： test\n\ndb_domain  ：\n\ndb_name：mynewdb\n```\n\n<a name=\"568a025c\"></a>\n##### ****方法：****\n服务器端：<br />alter system set service_names='test';<br />这里采用静态注册，同时还要修改下 listener.ora\n\n```\nSID_LIST_LISTENER =\n\n  (SID_LIST =\n\n    (SID_DESC =\n\n      (SID_NAME = PLSExtProc)\n\n      (ORACLE_HOME =/u01/app/oracle/product/11.2.0/dbhome_1)\n\n      (PROGRAM = extproc)\n\n    )\n\n        (SID_DESC=\n\n        (GLOBAL_DBNAME = mynewdb)\n\n        (ORALCE_HOME = /u01/app/oracle/product/11.2.0/dbhome_1)\n\n        (SID_NAME = mynewdb)\n\n        )\n\n        (SID_DESC=\n\n        (GLOBAL_DBNAME = test)  -------这个是需要添加\n\n        (ORALCE_HOME = /u01/app/oracle/product/11.2.0/dbhome_1)\n\n        (SID_NAME = mynewdb)    ------这个还是原来的实例名\n\n        )\n\n  )\n```\n\ncmd下执行命令lsnrctl reload<br />查看监听状态lsnrctl status<br />L\n\n```\nSNRCTL>\n\nConnecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.80.11.202)(PORT=1521)))\n\nSTATUS of the LISTENER\n\n------------------------\n\nAlias                     LISTENER\n\nVersion                   TNSLSNR for [Linux](https://www.2cto.com/os/linux/): Version 11.2.0.1.0 - Production\n\nStart Date                21-NOV-2013 00:09:35\n\nUptime                    0 days 20 hr. 30 min. 55 sec\n\nTrace Level               off\n\nSecurity                  ON: Local OS Authentication\n\nSNMP                      OFF\n\nListener Parameter File   /u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora\n\nListener Log File         /u01/app/oracle/diag/tnslsnr/oracle11g/listener/alert/log.xml\n\nListening Endpoints Summary...\n\n  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=10.80.11.202)(PORT=1521)))\n\nServices Summary...\n\nService \"PLSExtProc\" has 1 instance(s).\n\n  Instance \"PLSExtProc\", status UNKNOWN, has 1 handler(s) for this service...\n\nService \"mynewdb\" has 1 instance(s).\n\n  Instance \"mynewdb\", status UNKNOWN, has 1 handler(s) for this service...\n\nService \"test\" has 1 instance(s).\n\n  Instance \"mynewdb\", status UNKNOWN, has 1 handler(s) for this service...\n\nThe command completed successfully\n```\n\n可以看到新的 Service \"test\" 已经可以使用了<br />客户端配置：<br />net manager 配置 服务名为 test ，ip为数据库服务器主机ip，相应端口。<br />测试连接：\n\n```\nSQL>  conn sys/oracle@test as sysdba\n\n已连接。\n\nSQL>\n```\n\n当然不使用静态注册，动态注册也可以<br /> \n<a name=\"3158f60d\"></a>\n### ****警告日志文件****\n不知道日志文件在哪的，可以使用这个命令<br />select value from v$diag_info where name='Diag Trace';<br />以下是我的输出地址\n\n```\nSQL> select value from v$diag_info where name='Diag Trace';\n\n \n\nVALUE\n\n--------------------------------------------------------------------------------\n\nD:\\FLYINGCLOUD\\diag\\rdbms\\odb\\odb\\trace\n\n \n\n \n```\n\n<a name=\"9e2e81b7\"></a>\n## ****开发工具配置及问题****\n<a name=\"Plsql\"></a>\n### ****Plsql****\n<a name=\"d672874c\"></a>\n#### ****plsql设置可显示的查询记录条数****\ntools->prifereces->window types->sql window->records per page<br />查询所有记录<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550118425257-e4d6330a-e5f6-4e7e-932c-fb25cf372fd2.png#align=left&display=inline&height=591&name=image.png&originHeight=591&originWidth=564&size=92527&status=done&width=564) \n<a name=\"5c094ab1\"></a>\n#### ****plsql如何查询sql执行计划****\n[怎么使用plsql查看执行计划](https://link.jianshu.com/?t=https://jingyan.baidu.com/article/ab69b270bffc2e2ca7189fee.html)<br />执行计划可以用计划sql执行的性能<br />选中需要执行的sql语句，然后按F5，或者直接点击\"执行计划\"\n<a name=\"e33957e7\"></a>\n#### ****PLSQL工具如何远程连接数据库****\n<a name=\"ea6f3b87-5\"></a>\n##### ****参考链接****\n[如何配置pl/sql 连接远程oracle服务器——百度知道](https://link.jianshu.com/?t=https://zhidao.baidu.com/question/333852172.html)\n<a name=\"d7ecf9b4\"></a>\n##### ****方法1：****\n找到oracle的安装目录。如：C:\\oracle\\product\\10.2.0\\db_1\\network\\ADMIN<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550118449158-f157887f-799b-4b90-a947-2218b90f25ac.png#align=left&display=inline&height=30&name=image.png&originHeight=30&originWidth=311&size=2681&status=done&width=311) <br />添加如下内容<br />其中中文部分是需要修改的部分，除第一个“本地实例名”外，其他需要跟远程数据库管理员咨询，本地实例名就是方便自己识别数据库的一个名字，可以自定义。\n\n```\n本地实例名 =\n\n  (DESCRIPTION =\n\n    (ADDRESS = (PROTOCOL = TCP)(HOST = 远程数据库IP地址)(PORT = 远程服务器端口号))\n\n    (CONNECT_DATA =\n\n      (SERVER = DEDICATED)\n\n      (SERVICE_NAME = 远程数据库服务名)\n\n    )\n\n  )\n```\n\n然后打开pl/sql就能看到自己创建的链接，如图：<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550118496776-446fbbd8-7f17-4ec9-be0b-219d248b2910.png#align=left&display=inline&height=204&name=image.png&originHeight=204&originWidth=392&size=17502&status=done&width=392) <br />方法2：<br /> <br /> \n<a name=\"5d64018c\"></a>\n##### ****方法2：****\n<a name=\"ef35ed63\"></a>\n###### ****格式：****\nip:端口/sid\n<a name=\"614fc656\"></a>\n###### ****示例：****\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1550118525263-c7c6ad21-d3fb-4563-9154-f8bc23c3f375.png#align=left&display=inline&height=209&name=image.png&originHeight=209&originWidth=393&size=10049&status=done&width=393) \n",
    "body_draft": "",
    "body_html": "<p>tags: [<span>oracle</span>,数据库]</p><p>categories: oracle</p><p><br /></p><hr /><p><br /></p><h1 id=\"f66bd8f4\" style=\"text-align: center;\"><strong><strong>O</strong></strong><strong><strong>ra</strong></strong><strong><strong>cle</strong></strong><strong><strong>经验</strong></strong></h1><p><span class=\"lake-fontsize-10\"> </span></p><h2 id=\"e9a9187c\"><strong><strong>申明</strong></strong></h2><p><span class=\"lake-fontsize-10\">本文大部分资料来自《深入理解</span><span class=\"lake-fontsize-10\">Oracle 12c数据库管理</span><span class=\"lake-fontsize-10\">》，但是也有自己的个人观点，大家也去看这本书</span></p><h2 id=\"e05dce83\"><strong><strong>简介</strong></strong></h2><p><span class=\"lake-fontsize-10\">\t</span><span class=\"lake-fontsize-10\">Oracle</span><span class=\"lake-fontsize-10\">数据库已经是当今世界技术前沿了，因为它优点突出 </span></p><p><span class=\"lake-fontsize-10\">有以下优点：</span></p><p><span class=\"lake-fontsize-10\"><span>(1) </span></span><span class=\"lake-fontsize-10\">拥有其他数据库系统所没有的表空间概念；</span></p><p><span class=\"lake-fontsize-10\"><span>(2) </span></span><span class=\"lake-fontsize-10\">拥有真正的等级锁功能</span></p><p><span class=\"lake-fontsize-10\"><span>(3) </span></span><span class=\"lake-fontsize-10\">拥有多版本数据功能，读写操作不会相互等待（我觉得是非常的好特性）</span></p><p><span class=\"lake-fontsize-10\"><span>(4) </span></span><span class=\"lake-fontsize-10\">拥有更快的处理速度和更高的安全性；</span></p><p><span class=\"lake-fontsize-10\"><span>(5) </span></span><span class=\"lake-fontsize-10\">拥有丰富的数据字典，易于DBA判断数据库的各种情况；</span></p><p><span class=\"lake-fontsize-10\"><span>(6) </span></span><span class=\"lake-fontsize-10\">拥有非常简单明了的备份与恢复原理</span></p><p><span class=\"lake-fontsize-10\"><span>(7) </span></span><span class=\"lake-fontsize-10\">O</span><span class=\"lake-fontsize-10\">racle数据库可以启动到多个阶段，DBA可以在不同的情况下，通过启动到特定的阶段解决一些特殊问题</span></p><p><span class=\"lake-fontsize-10\"><span>(8) </span></span><span class=\"lake-fontsize-10\">O</span><span class=\"lake-fontsize-10\">racle可以跨越多种软、硬平台。</span></p><p><span class=\"lake-fontsize-10\"><br /></span></p><p><br /></p><h2 id=\"362eced1\"><strong><strong>Oracle</strong></strong><strong><strong>安装和创建</strong></strong><strong><strong>(</strong></strong><strong><strong>由于本文作者觉得linux太花费时间，故只有这部分讲解到linux</strong></strong><strong><strong>)</strong></strong></h2><p><span class=\"lake-fontsize-10\">O</span><span class=\"lake-fontsize-10\">racle安装一般有两种，一种是图形界面的安装，另一种是无界面安装。建议是无界面，因为</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">图形界面在宽带不足情况下，可能出现加载远程界面慢的问题，而且不能自动化</span><span class=\"lake-fontsize-10\">。无界面可以依靠应答文件来安装。</span></p><h3 id=\"712f5efa\"><strong><strong>了解OFA标准</strong></strong></h3><p><span class=\"lake-fontsize-10\">OFA标准是指oracle的目录结构和文件名，然而大部分DBA（database manager数据库管理员简称DBA）都在一定程度上自定义了，以适应于不同的环境。</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117219355-d3c0e3a0-41c9-45c4-ae0c-a89fe13bccb3.png#align=left&amp;display=inline&amp;height=507&amp;name=image.png&amp;originHeight=507&amp;originWidth=835&amp;size=295404&amp;status=done&amp;width=835\" style=\"max-width: 600px; width: 835px;\" /></p><p><span>&lt;!--more--&gt;</span></p><h3 id=\"119c5730\"><strong><strong>库的高速缓存和数据字典的高速缓存</strong></strong></h3><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"a55e5de5\"><strong><strong>库的高速缓存</strong></strong></h4><p><span class=\"lake-fontsize-10\">是用来存放你实际表的数据块的，如表TAB_A里实际存放的若干条数据记录，一般都</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">存放在用户的表空间里</span><span class=\"lake-fontsize-10\">。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"773d69a4\"><strong><strong>数据字典的高速缓存</strong></strong></h4><p><span class=\"lake-fontsize-10\">用来存放表的定义，如表TAB_A，有几个字段，每个字段的类型、长度，表空间等，这类信息在你建表后会存放在系统表里，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">都是在SYSTEM表空间下，ORACLE运行时，这些信息被装入数据字典高速缓存里。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"7f04d897\"><strong><strong>数据字典的意思是</strong></strong></h4><p><span class=\"lake-fontsize-10\">简单的说就和我们小学用的词典的目录一样  要查询个表的数据 首先要确认这个词典（数据库）中有这个词语（表）  吧</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"2655d132\"><strong><strong>安装oracle</strong></strong></h3><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"061f72da\"><strong><strong>创建对应的权限的O</strong></strong><strong><strong>S</strong></strong><strong><strong>用户组</strong></strong></h4><p><span class=\"lake-fontsize-10\">我们需要linux上创建一些OS用户组，安装完oracle之后就可以为linuxOS用户组分配的相应的数据库操作权限，正常来说OS用户组（</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">注：用户和用户组是不一样的</span><span class=\"lake-fontsize-10\">）的创建是属于系统管理员（SA）的工作，但是大部分情况没有SA。</span></p><p><span class=\"lake-fontsize-10\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117248391-cbfc23d8-2f3c-4bb5-b862-65300cfb607d.png#align=left&amp;display=inline&amp;height=488&amp;name=image.png&amp;originHeight=488&amp;originWidth=822&amp;size=254798&amp;status=done&amp;width=822\" style=\"max-width: 600px; width: 822px;\" /></span></p><p><span class=\"lake-fontsize-10\">不必根据一字不差照搬组名，可以根据不一样环境来配置。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h5 id=\"657ad920\"><strong><strong>运行linux命令，创建组</strong></strong></h5><p><span class=\"lake-fontsize-10\">我们只按照简单的功能来分组就好了，oinstall负责安装和卸载权限，dba具有完全操作权限，oper只具有数据库操作权限（包含一些删除表，创建表，修改等待权限 ）</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">g</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">roupadd</span><span class=\"lake-fontsize-10\"> oinstall</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">g</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">roupadd</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span><span class=\"lake-fontsize-10\">dba</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">g</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">roupadd</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span><span class=\"lake-fontsize-10\">oper</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h6 id=\"ccd2979a\"><strong><strong>查看创建的OS组</strong></strong></h6><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">cat </span><span class=\"lake-fontsize-10\">/etc/group</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117306714-eef5438b-f88e-43d4-9ecb-0d43990fe65f.png#align=left&amp;display=inline&amp;height=386&amp;name=image.png&amp;originHeight=386&amp;originWidth=281&amp;size=12073&amp;status=done&amp;width=281\" style=\"max-width: 600px; width: 281px;\" /></p><p><span class=\"lake-fontsize-10\">1000</span><span class=\"lake-fontsize-10\">、1001、1002是我们组的ID</span></p><h5 id=\"87c9fadb\"><strong><strong>创建用户并分配组</strong></strong></h5><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">u</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">seradd </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-u </span><span class=\"lake-fontsize-10\">500 </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-g</span><span class=\"lake-fontsize-10\"> oinstall </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-G</span><span class=\"lake-fontsize-10\"> dba , oper oracle</span></p><p><span class=\"lake-fontsize-10\">将组ID设置500</span><span class=\"lake-fontsize-10\">(</span><span class=\"lake-fontsize-10\">其他同事可能需要人执行相同的组ID来执行所有安装</span><span class=\"lake-fontsize-10\">)</span></p><p><span class=\"lake-fontsize-10\">创建主属组为oinstall，创建副属组为dba,oper</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-g</span><span class=\"lake-fontsize-10\"> </span><span class=\"lake-fontsize-10\">和</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">G</span><span class=\"lake-fontsize-10\">，分别是分配主属组和附属组的意思。</span></p><h6 id=\"d82e410e\"><strong><strong>查看用户信息</strong></strong></h6><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">cat</span><span class=\"lake-fontsize-10\"> /etc/passwd</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117322832-e84ea737-28ec-450b-9087-7f6f9c5272ea.png#align=left&amp;display=inline&amp;height=385&amp;name=image.png&amp;originHeight=385&amp;originWidth=827&amp;size=30460&amp;status=done&amp;width=827\" style=\"max-width: 600px; width: 827px;\" /></p><p><span class=\"lake-fontsize-10\"> </span></p><h6 id=\"e7d20343\"><strong><strong>删除修改用户，或者用户组</strong></strong></h6><p><span class=\"lake-fontsize-10\">修改删除用户组：</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">groupmod</span><span class=\"lake-fontsize-10\">、</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">groupdel</span></p><p><span class=\"lake-fontsize-10\">修改删除用户：</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">usermod</span><span class=\"lake-fontsize-10\">、</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">userdel</span></p><p><span class=\"lake-fontsize-10\">以上命令需要使用系统管理员登录</span></p><h4 id=\"11c5905d\"><strong><strong>查看linux环境信息</strong></strong></h4><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117345109-376aba41-14b7-46f6-9e38-8141c9886cfb.png#align=left&amp;display=inline&amp;height=401&amp;name=image.png&amp;originHeight=401&amp;originWidth=860&amp;size=45732&amp;status=done&amp;width=860\" style=\"max-width: 600px; width: 860px;\" /><span class=\"lake-fontsize-10\">以下为我本人系统的信息</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117364504-14c00655-46d0-4c60-a248-84661ea1cb04.png#align=left&amp;display=inline&amp;height=452&amp;name=image.png&amp;originHeight=452&amp;originWidth=666&amp;size=29951&amp;status=done&amp;width=666\" style=\"max-width: 600px; width: 666px;\" /></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">grep MemTotal </span><span class=\"lake-fontsize-10\"> /proc/meminfo</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">free –t</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">df –h</span><span class=\"lake-fontsize-10\"> /tmp</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">df –h</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">cat</span><span class=\"lake-fontsize-10\"> /proc/version</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">uname –r</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">rpm –q </span><span class=\"lake-fontsize-10\">&lt;package name&gt;</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span><span class=\"lake-fontsize-10\">查询是否已经安装必须的软件包</span></p><h2 id=\"fdd1ae5b\"><strong><strong>管理数据库</strong></strong></h2><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"dfc119cb\"><strong><strong>S</strong></strong><strong><strong>ysdba数据库账号</strong></strong></h3><p><span class=\"lake-fontsize-10\">这个账号可拥有除了关闭数据库以外的所有操作权限</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">as sysdba</span><span class=\"lake-fontsize-10\">作为系统管理员登录</span></p><h3 id=\"6aee7bf5\"><strong><strong>第一次操作数据库</strong></strong></h3><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">s</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">tartup </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">onmount </span><span class=\"lake-fontsize-10\">启动后台进程并分配内存，此命令执行后，sql*plus会读取ORACLE_HOME/dbs中的初始化文件，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">会使后台进程和内存区域初始化，这样你就拥有了o</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">racle</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">的实例，但是还没有数据库</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117384566-27b7d3ce-0863-4a79-ac04-4ec4bfc56b98.png#align=left&amp;display=inline&amp;height=228&amp;name=image.png&amp;originHeight=228&amp;originWidth=603&amp;size=11983&amp;status=done&amp;width=603\" style=\"max-width: 600px; width: 603px;\" /></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oracle</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">实例</span><span class=\"lake-fontsize-10\">是指后台进程和内存区域，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oracle数据库</span><span class=\"lake-fontsize-10\">是指磁盘上的物理文件（数据文件、控制文件、联机重做日志文件）</span></p><h3 id=\"187ec332\"><strong><strong>表空间</strong></strong></h3><h4 id=\"fcf86c6f\"><strong><strong>查询TEMP临时表空间</strong></strong></h4><p><span class=\"lake-fontsize-10\">select*from database_properties where property_name='DEFAULT_TEMP_TABLESPACE';</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117405819-4e8691dc-3239-445c-b58e-e77a25fa45f4.png#align=left&amp;display=inline&amp;height=202&amp;name=image.png&amp;originHeight=202&amp;originWidth=620&amp;size=7894&amp;status=done&amp;width=620\" style=\"max-width: 600px; width: 620px;\" /></p><h4 id=\"5d4d5693\"><strong><strong>USER表空间</strong></strong></h4><p><span class=\"lake-fontsize-10\">select*from database_properties</span></p><p><span class=\"lake-fontsize-10\">where roperty_name='DEFAULT_PERMANENT_TABLESPACE';</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117417926-a850da9d-5066-484f-9f27-e1aedcadea79.png#align=left&amp;display=inline&amp;height=172&amp;name=image.png&amp;originHeight=172&amp;originWidth=632&amp;size=7080&amp;status=done&amp;width=632\" style=\"max-width: 600px; width: 632px;\" /></p><h3 id=\"00caab79\"><strong><strong>连接标识</strong></strong></h3><h4 id=\"8d258c38\"><strong><strong>Oracle 的OCI Driver 和 Thin Driver的区别</strong></strong></h4><p><span class=\"lake-fontsize-10\">有以下两种标识方式：</span></p><p><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\">jdbc:oracle:</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oci8</span><span class=\"lake-fontsize-10\">:@shdb</span></p><p><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\">1）从使用上来说，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oci必须在客户机上安装oracle客户端或才能连接，而thin就不需要</span><span class=\"lake-fontsize-10\">，因此从使用上来讲thin还是更加方便，这也是thin比较常见的原因。 </span><span class=\"lake-fontsize-10\"><br /></span><span class=\"lake-fontsize-10\">2）原理上来看，thin是纯java实现tcp/ip的c/s通讯；而oci方式,客户端通过native java method调用c library访问服务端，而这个c library就是oci(oracle called interface)，因此这个oci总是需要随着oracle客户端安装（从oracle10.1.0开始，单独提供OCI Instant Client，不用再完整的安装client） </span><span class=\"lake-fontsize-10\"><br /></span><span class=\"lake-fontsize-10\">3）它们分别是不同的驱动类别，oci是二类驱动， thin是四类驱动，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">但它们在功能上并无差异。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"3a0f1856\"><strong><strong>查询实例名（SID）</strong></strong></h3><p><span class=\"lake-fontsize-9\" style=\"color: #657B83;\">sqlplus / as sysdba</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #657B83;\">show parameter instance_name</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h2 id=\"f858894c\"><strong><strong>配置用户和数据库对象</strong></strong></h2><h2 id=\"f8876e5d\"><strong><strong>创建和维护大型数据库对象、分区和索引</strong></strong></h2><h2 id=\"d2adec7f\"><strong><strong>备份和恢复</strong></strong></h2><h2 id=\"01a62dbc\"><strong><strong>数据库自动化及常见问题解决方法</strong></strong></h2><h2 id=\"9d2f273a\"><strong><strong>管理窗口和可插入数据库</strong></strong></h2><h2 id=\"d579eb7d\"><strong><strong>Oracle 导入导出及连接</strong></strong></h2><h3 id=\"ea6f3b87\"><strong><strong>参考链接</strong></strong></h3><p><span><a href=\"http://blog.itpub.net/21614165/viewspace-766937/\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle数据库导入导出命令总结</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://blog.csdn.net/wildin/article/details/5850252\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">sqlplus连接远程数据库</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://www.cnblogs.com/wanghongyun/p/6307652.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">ORACLE的impdp和expdp命令</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://www.2cto.com/database/201304/203709.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">oracle expdp——红黑联盟</span></a></span></p><h3 id=\"02babed4\"><strong><strong>exp 和imp导入导出</strong></strong></h3><h4 id=\"f77e0e7c\"><strong><strong>导出命令 (exp)</strong></strong></h4><p><strong><strong>格式：</strong></strong></p><p><br /></p><pre><code>exp [用户名]/[密码]@[主机ip]:[端口号]/[SID/service] file=d:\\zhpt.dmp full=n</code></pre><p><br /></p><p><span style=\"color: #333333;\">file</span><span style=\"color: #333333;\">是导出路径</span><span style=\"color: #000080;\">full</span><span style=\"color: #333333;\">=n,</span><span style=\"color: #333333;\">表示是否导出主机数据库上全部用户，</span><span style=\"color: #333333;\">n</span><span style=\"color: #333333;\">表示否，</span><span style=\"color: #333333;\">y</span><span style=\"color: #333333;\">表示是</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">exp</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\"> abc/abc@</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">183.233.179.165</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">:</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">1521</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">/orcl file=d:\\zhpt.dmp full=y</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117435502-1497acdc-62e6-4f06-bcb2-86eb61c72693.png#align=left&amp;display=inline&amp;height=34&amp;name=image.png&amp;originHeight=34&amp;originWidth=625&amp;size=2889&amp;status=done&amp;width=625\" style=\"max-width: 600px; width: 625px;\" /></p><p>如果密码出特殊符号，使用`&quot;&quot;&quot;`包裹，如果其他地址有特殊符号，需要用`\\`转义，需要指定用户导出可以使用`owner`</p><p><br /></p><pre data-lang=\"powershell\"><code>exp grz/&quot;&quot;&quot;g2011*)&quot;&quot;&quot;@19.129.180.19:1521/oracle file=gr20190410.dmp owner in \\(\\'gr\\',\\'jzs'\\) full=n</code></pre><p><br /></p><h4 id=\"606fd7a7\"><strong><strong>导入数据库（imp）</strong></strong></h4><p><br /></p><pre data-lang=\"powershell\"><code># full 表示是否导出全部数据，一定要设置\n# log 输出日志文件# fromuser 从哪一个用户导入\n# touser 导入到哪个用户\n# ignore=y buffer=100000000; 修改缓冲区大小，有时sql语句过长，会造成缓冲区空间不足\nimp username/pwd@orcl file=d:\\zhpt.dmp log=C:\\data\\logname.log full=y\n# 或者\nimp username/pwd@orcl file=E:\\20171108.dmp fromuser=username touser= username log=D:\\webBackend\\kingzheng\\住房保障系统\\fszfbz201711191635.log full=n\n# 或者\nimp username/pwd@orcl file=d:\\zhpt.dmp log=C:\\data\\logname.log full=y ignore=y buffer=100000000;</code></pre><p><span> </span></p><h3 id=\"69a49bc6\"><strong><strong>expdp和impdp创建数据泵导入导出</strong></strong><strong><strong> </strong></strong></h3><h4 id=\"f0c6d9cb\"><strong><strong>需要先创建数据泵</strong></strong></h4><p><span class=\"lake-fontsize-10\">数据泵，说白了就是指定一个目录给oracle，但是oracle不会帮你创建的，需要自己先实际地创建</span></p><p><br /></p><pre data-lang=\"sql\"><code>#  查看所有数据泵地址\nselect * from dba_directories;# 创建数据泵，数据泵地址即为你的导出导入地址文件地址\ncreate directory myname as 'D:\\temp\\数据泵地址';# 授予权限 sshe这个用户可读可写\ngrant read,write on directory dpdata1 to sshe;\n\nsql&gt;--可以使用以下语句查看目录操作权限\nsql&gt;  SELECT privilege, directory_name, DIRECTORY_PATH FROM user_tab_privs t, all_directories d WHERE t.table_name(+) = d.directory_name ORDER BY 2, 1; </code></pre><p><br /></p><p><span class=\"lake-fontsize-10\"><strong>注意：</strong></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> 数据泵地址以及文件dmp需要自己创建</span></p><h4 id=\"837cb31c\"><strong><strong>导出数据（expdp）</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">这种数据泵效率非常高，但是使用这种数据泵导出的数据，</span><strong><u><strong>一般情况下只在本机导出</strong></u></strong><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">，</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">需要用impdp导入</span></p><p><br /></p><pre><code>rem my_dir是数据泵名称\n\nrem exclude table:&quot;in(表名,列名2，……)&quot;不导出某些表\n\nexpdp test/test@orcl directory=my_dir dumpfile=my.dmp exclude=table:\\&quot;in \\(\\'DEPT\\',\\'EMP\\'\\)\\&quot; SCHEMAS=FSJSCX</code></pre><p><br /></p><h4 id=\"Impdp\"><strong><strong>Impdp</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">跟</span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">expdp</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">的语法格式差不多</span></p><p><br /></p><pre><code> impdp test/test@orcl DIRECTORY=my_dir  DUMPFILE=my.dmp SCHEMAS=test logfile=%logfile%</code></pre><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span></p><h5 id=\"d303267a\"><strong><strong>问题：</strong></strong></h5><h6 id=\"29398c59\"><strong><strong>这些对象由 FSZJZ 导出, 而不是当前用户</strong></strong></h6><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117805403-46bf4a8c-9f04-4d1a-9def-916cf1fd0a66.png#align=left&amp;display=inline&amp;height=134&amp;name=image.png&amp;originHeight=134&amp;originWidth=517&amp;size=10915&amp;status=done&amp;width=517\" style=\"max-width: 600px; width: 517px;\" /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">导出是哪个用户，导入时用户也要相同，需要自己再创建一个用户</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h6 id=\"2e846665\"><strong><strong>只有管理员用户，才可以导入</strong></strong></h6><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550117815821-b03a30e3-3157-4e16-8e5d-4cfb4766f698.png#align=left&amp;display=inline&amp;height=80&amp;name=image.png&amp;originHeight=80&amp;originWidth=412&amp;size=4702&amp;status=done&amp;width=412\" style=\"max-width: 600px; width: 412px;\" /><span class=\"lake-fontsize-12\"> </span></p><h6 id=\"5b692eb8\"><strong><strong>ora-28759 无法打开文件</strong></strong></h6><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">以下这两句可能在不同的操作系统，支持不同，不太清楚，我服务器，两个都是sever2008，但是只有一个报这个错误，这个报错确实跟用户连接有关系，</span><strong><strong>最好是采用second</strong></strong></p><p><span class=\"lake-fontsize-12\"> </span></p><h3 id=\"88e73bd4\"><strong><strong>sqlplus 远程连接数据库</strong></strong></h3><h4 id=\"ce1ec2ce\"><strong><strong>远程连接</strong></strong></h4><p><br /></p><pre><code>命令：sqlplus 用户名/密码@ip地址[:端口]/service_name [as sysdba]\n\n示例：sqlplus sys/pwd@ip:1521/test as sysdba</code></pre><p><br /></p><h4 id=\"0dfbe902\"><strong><strong>常用命令</strong></strong></h4><p><br /></p><pre><code>SQL&gt;set colsep' ';　　　　 //-域输出分隔符\n\nSQL&gt;set echo off;　　　　 //显示start启动的脚本中的每个sql命令，缺省为on\n\nSQL&gt; set echo on              //设置运行命令是是否显示语句\n\nSQL&gt; set feedback on;       //设置显示“已选择XX行”\n\nSQL&gt;set feedback off;　    //回显本次sql命令处理的记录条数，缺省为on\n\nSQL&gt;set heading off;　　 //输出域标题，缺省为on\n\nSQL&gt;set pagesize 0;　　    //输出每页行数，缺省为24,为了避免分页，可设定为0。\n\nSQL&gt;set linesize 80;　　   //输出一行字符个数，缺省为80\n\nSQL&gt;set numwidth 12;　    //输出number类型域长度，缺省为10\n\nSQL&gt;set termout off;　　   //显示脚本中的命令的执行结果，缺省为on\n\nSQL&gt;set trimout on;　　　//去除标准输出每行的拖尾空格，缺省为off\n\nSQL&gt;set trimspool on;　　//去除重定向（spool）输出每行的拖尾空格，缺省为off\n\nSQL&gt;set serveroutput on; //设置允许显示输出类似dbms_output\n\nSQL&gt; set timing on;          //设置显示“已用时间：XXXX”\n\nSQL&gt; set autotrace on;    //设置允许对执行的sql进行分析\n\nSQL&gt; set verify off;           //可以关闭和打开提示确认信息old 1和new 1的显示.</code></pre><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">导出结果到文本：</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">spool&lt;spool_flat_file&gt;</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">例如：spool d:\\Spool_flatquery.txt</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">这样，SQL*Plus将把所有的输出以及在屏幕上的命令等都指定给该文件。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">执行查询输出。此时，系统并没有把结果保存到文件中，而是保存到缓冲区中。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">查询结束后，关闭文件即可。命令格式为：spool off。</span></p><h3 id=\"df0cbcf7\"><strong><strong>oracle之jdbc连接oracle</strong></strong></h3><h4 id=\"b5f7449a\"><strong><strong>使用sid方式：</strong></strong></h4><p><br /></p><pre><code>jdbc:oracle:thin:@host:port:SID \n\nExample: jdbc:oracle:thin:@localhost:1521:orcl </code></pre><p><br /></p><h4 id=\"e0db0567\"><strong><strong>使用服务名方式</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">使用服务名的方式，这种格式是Oracle 推荐的格式，因为对于集群来说，每个节点的SID 是不一样的，但是SERVICE_NAME 确可以包含所有节点。</span></p><p><br /></p><pre><code>jdbc:oracle:thin:@//host:port/service_name\n\nExample:jdbc:oracle:thin:@//localhost:1521/orcl.city.com</code></pre><p><br /></p><h4 id=\"859540a4\"><strong><strong>使用TNSName </strong></strong></h4><p><a target=\"_blank\"></a><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">使用<a target=\"_blank\">TNSName </a>， 要实现这种连接方式首先要建立tnsnames.ora文件，然后通过System.setProperty指明这个文件路径。再通过上面URL中的@符号指定文件中的要使用到的资源。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">这种格式我现在水平几乎没见过，对于我来说用得到这种的情况并不多吧。当然既然是通过配置文件来读取指定资源肯定也可以直接将资源拿出来放在URL中，直接放在URL中的URL模版是下面这样的（tnsnames.ora这个文件中放的就是@符号后面的那一段代码，当然用文件的好处就是可以配置多个，便于管理）：</span></p><p><br /></p><pre><code>jdbc:oracle:thin:@TNSName \n\nExample: jdbc:oracle:thin:@TNS_ALIAS_NAME\n\njdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL= TCP)(HOST=hostA)(PORT= 1522))(ADDRESS=(PROTOCOL=TCP)(HOST=your host)(PORT=1521)))(SOURCE_ROUTE=yes)(CONNECT_DATA=(SERVICE_NAME=your service_name)))</code></pre><p><br /></p><h2 id=\"efbc27b9\"><strong><strong>Oracle obj（plsql中解释为对象）</strong></strong></h2><h4 id=\"019aaceb\"><strong><strong>Function 函数</strong></strong></h4><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"d283ab83\"><strong><strong>Procedure 存储过程</strong></strong></h4><h5 id=\"ea6f3b87-1\"><strong><strong>参考链接</strong></strong></h5><p><span><a href=\"https://www.cnblogs.com/helong/articles/2093807.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle创建存储过程、创建函数、创建包——博客园@helong</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://blog.csdn.net/u010109335/article/details/60577055\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">ORACLE执行存储过程权限不足——CSDN@He之涅槃</span></a></span></p><p><span class=\"lake-fontsize-10\"> </span></p><h5 id=\"e3127cc1\"><strong><strong>格式</strong></strong></h5><p><br /></p><pre><code>create or replace procedure procedure_name(Name in out type, Name in out type, ...) isbegin\n\n  end procedure_name;</code></pre><p><br /></p><h5 id=\"1a63ac23\"><strong><strong>示例</strong></strong></h5><p><br /></p><pre data-lang=\"sql\"><code>--自动创建表格，并update数据\n\n--dbms_output.put_line()需要先在command（命令行界面）“set serverout on ”打开输出\n\ncreate or replace procedure update_qylxid_of_null_for_rygx\n\nAuthid Current_User\n\nis\n\n  v_date varchar2(8);--定义日期变量\n\n  v_sql varchar2(2000);--定义动态sql\n\n  v_tablename varchar2(20);--定义动态表名\n\n  begin\n\n   select to_char(sysdate,'yyyymmdd') into v_date from dual;--取日期变量\n\n   v_tablename := 'T_'||v_date;--为动态表命名\n\n   v_sql := 'create table '||v_tablename||'as select*from t_qy';--为动态sql赋值\n\n   dbms_output.put_line(v_sql);--打印sql语句\n\n   execute immediate v_sql;--执行动态sql\n\n   v_sql:='update t_qy t set t.LXID=(select LXID from t_qy_qy lx where lx.bh=t.bh and lx.LX =t.dm) where  t.lxid is null';\n\n   dbms_output.put_line(v_sql);--打印sql语句\n\n   execute immediate v_sql;--执行动态sql\n\nend update_qylxid_of_null_for_rygx;</code></pre><p><br /></p><h5 id=\"50d52dd9\"><strong><strong>常见问题</strong></strong></h5><h6 id=\"1fc98647\"><strong><strong>ORACLE执行存储过程权限不足</strong></strong></h6><p><span><a href=\"https://blog.csdn.net/u010109335/article/details/60577055\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">ORACLE执行存储过程权限不足——CSDN@He之涅槃</span></a></span></p><p><br /></p><pre><code>--需要增加Authid Current_User\n\n--AUTHID DEFINER （定义者权限）：指编译存储对象的所有者。也是默认权限模式。\n\n--AUTHID CURRENT_USER（调用者权限）：指拥有当前会话权限的模式，这可能和当前登录用户相同或不同(alter session set current_schema 可以改变调用者Schema)create or replace PROCEDURE 存储过程名称\n\nAuthid Current_User\n\nIS \n\nBEGIN\n\n \n\n……；\n\nEND;\n\n </code></pre><p><br /></p><h4 id=\"618d4aaf\"><strong><strong>Database link 数据库链接</strong></strong></h4><p><span class=\"lake-fontsize-10\">即在需要在两个不同的数据库中连接表或者查询数据时，可创建数据库链接</span></p><h5 id=\"481feccf\"><strong><strong>如何使用</strong></strong></h5><p><br /></p><pre><code>--user_tables 是DBLINK_test所链接的用户的表\n\nselect * from user_tables@DBLINK_test;\n\n--链接可以方便于多个数据库用户关联查询数据，非常方便,mytable 是你当前登录用户的表\n\nselect * from user_tables@DBLINK_test t,mytable t2 where t2.id=t.id;</code></pre><p><br /></p><h5 id=\"ea6f3b87-2\"><strong><strong>参考链接</strong></strong></h5><p><span><a href=\"#best-answer-746405041\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">oracle中的database link如何使用——百度经验@wangzhiqing999</span></a></span></p><h5 id=\"345cd1b6\"><strong><strong>oracle sql创建</strong></strong></h5><p><br /></p><pre><code>\n-- Drop existing old  database link --DBLINK_test是database link的名称drop database link DBLINK_test;-- Create new database link -- other_db 为用户名 pwd为密码create database link DBLINK_test\n\n  connect to other_db IDENTIFIED BY  pwd\n\n  using '(DESCRIPTION =\n\n(ADDRESS_LIST =\n\n(ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521))\n\n)\n\n(CONNECT_DATA =\n\n(SERVICE_NAME = orcl)\n\n)\n\n)';--查询 database link select * from dba_db_links;</code></pre><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">如果创建全局dblink，必须使用systm或sys用户，在database前加public</span></p><p><br /></p><pre><code>create  public  database link DBLINK_test\n\n  connect to other_db IDENTIFIED BY  pwd\n\n  using '(DESCRIPTION =\n\n(ADDRESS_LIST =\n\n(ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521))\n\n)\n\n(CONNECT_DATA =\n\n(SERVICE_NAME = orcl)\n\n)\n\n)';</code></pre><p><br /></p><h5 id=\"5f005e3c\"><strong><strong>通过plsql创建</strong></strong></h5><p style=\"text-align: center;\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550118003862-eccf0b6e-7132-4106-aa23-e2b350ce0b5b.png#align=left&amp;display=inline&amp;height=408&amp;name=image.png&amp;originHeight=408&amp;originWidth=327&amp;size=22765&amp;status=done&amp;width=327\" style=\"max-width: 600px; width: 327px;\" /><span class=\"lake-fontsize-12\"> </span></p><p style=\"text-align: center;\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550118072979-b08dec8d-fd6a-4d8f-99cc-50fbc1e4e75c.png#align=left&amp;display=inline&amp;height=376&amp;name=image.png&amp;originHeight=376&amp;originWidth=971&amp;size=30163&amp;status=done&amp;width=971\" style=\"max-width: 600px; width: 971px;\" /><span class=\"lake-fontsize-12\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h2 id=\"146704a5\"><strong><strong>常用函数及sql实例</strong></strong></h2><h3 id=\"ea6f3b87-3\"><strong><strong>参考链接</strong></strong></h3><p><span><a href=\"http://www.cnblogs.com/harvey888/p/5957656.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle中replace函数的使用</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://zhidao.baidu.com/question/14756835.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle round函数是什么意思?怎么运用?</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://zhidao.baidu.com/question/552089573.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">oracle的nvl</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://www.cnblogs.com/vinsonLu/p/3512526.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle 中 decode 函数用法</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://www.cnblogs.com/gaojing/archive/2008/11/07/1328657.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">[oracle] to_date() 与 to_char() 日期和字符串转换</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://blog.csdn.net/ziwen00/article/details/8685858\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle的Cast的用法</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://www.cnblogs.com/wangfuyou/p/6605166.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle 大小写转换函数——博客园@Twang</span></a></span></p><h3 id=\"ca48b68b\"><strong><strong>常用函数</strong></strong></h3><h4 id=\"2a18f8a8\"><strong><strong>判断是否为数字</strong></strong></h4><p><br /></p><pre><code># 注意只能判断纯数字，不带小数,判断带小数方式请查看下文“常用sql”创建函数\n\nSELECT nvl2(translate('123','/1234567890','/'),'CHAR','NUMBER')   \n\nFROM   dual ;</code></pre><p><br /></p><h4 id=\"da5a6765\"><strong><strong>add_months()日期增加，以月为单位</strong></strong></h4><p><br /></p><pre><code>add_months(sysdate,12)--增加一年\n\nadd_months(sysdate,-12)--减去一年\n\nsysdate+1 --加一天</code></pre><p><br /></p><h4 id=\"c79a4a1b\"><strong><strong>to_date()</strong></strong></h4><p><br /></p><pre><code>to_date(&quot;要转换的字符串&quot;,&quot;转换的格式&quot;)\n\nto_date(t.access_date,'yyyy-mm-dd hh24:mi:ss')--2005-12-25 13:25:59\n\nTO_DATE('17-DEC-1980', 'DD-MON-YYYY','NLS_DATE_LANGUAGE=American')--日期语言</code></pre><p><br /></p><h4 id=\"b0a57818\"><strong><strong>replace替换字符</strong></strong></h4><p><br /></p><pre><code>replace(原字段，'原字段旧内容','原字段新内容')--替换字符串</code></pre><p><br /></p><h4 id=\"fecd35a6\"><strong><strong>round四舍五入</strong></strong></h4><p><br /></p><pre><code>`round(number)``round(number, decimal_places )`\n\n \n\nnumber ---需要四舍五入的数字\n\ndecimal_places ---从哪里开始四舍五入，此参数是下标，预设为0\n\n \n\nselect round(123.456, 0) from dual;     --- 123 </code></pre><p><br /></p><h4 id=\"2510b668\"><strong><strong>nvl如果为空返回新值</strong></strong></h4><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\"> </span></p><pre><code>nvl(字段名，'新的返回的值')\n\n如果提供的字段的值为空，则将返回这个新值，注意：只是返回了这个值，并不是update到表中\n\n \n\n nvl(name,'小明')---name为空，返回小明</code></pre><p><br /></p><h4 id=\"d623ee97\"><strong><strong>decode逻辑判断简化</strong></strong></h4><p><br /></p><pre><code>decode(条件,值1,返回值1,值2,返回值2,...值n,返回值n,缺省值)\n\n \n\n该函数的含义如下：IF 条件=值1 THEN\n\n　　　　RETURN(翻译值1)\n\nELSIF 条件=值2 THEN\n\n　　　　RETURN(翻译值2)\n\n　　　　......\n\nELSIF 条件=值n THEN\n\n　　　　RETURN(翻译值n)ELSE\n\n　　　　RETURN(缺省值)\n\nEND IF\n\ndecode(字段或字段的运算，值1，值2，值3）\n\n \n\n该函数的含义如下：\n\n 这个函数运行的结果是，当字段或字段的运算的值等于值1时，该函数返回值2，否则返回值3\n\n 当然值1，值2，值3也可以是表达式，这个函数使得某些sql语句简单了许多\n 注意：值2和值3的数据类型必须一致</code></pre><p><br /></p><p><br /></p><p><br /></p><h4 id=\"4e7db3ce\"><strong><strong>sys_guid()生成唯一32位字符串</strong></strong></h4><p><br /></p><pre><code>sys_guid()</code></pre><p><br /></p><h4 id=\"774534e1\"><strong><strong>CAST(expr AS type_name) 数值类型转换</strong></strong></h4><p><br /></p><pre><code>--例\n\ncast(R.MONTH as int)--将月份转换为整型类型</code></pre><p><br /></p><h4 id=\"5b106349\"><strong><strong>大小写转换</strong></strong></h4><p><br /></p><pre><code>select UPPER('Test') as u from dual; --转大写\n\nselect LOWER('Test') as l from dual;--转小写</code></pre><p><br /></p><h4 id=\"7db7c5f3\"><strong><strong>截取字符串</strong></strong></h4><p><br /></p><pre><code>--截取身份证出生日期\n\nto_date(substr('XXXXXXXXXXXXXXXXX',7,8),'YYYYMMDD')</code></pre><p><br /></p><h4 id=\"425d8a49\"><strong><strong>删除左右字符、添加左右字符</strong></strong></h4><p><br /></p><pre><code>ltrim(原字符,'需要删除的字符')--删除左边字符\n\nrtrim(原字符,'需要删除的字符')--删除右边字符\n\nLPAD(原字符,'需要添加的字符') --添加字符在左边\n\nRPAD(原字符,'需要添加的字符') --添加字符在右边--例\n\nltrim('abcdefg','abc')--删除左边abc，输出defg\n\nltrim('abqwert','abc')--删除左边ab，输出qwert\n\n \n\n \n\n \n\n \n\n </code></pre><p><br /></p><h3 id=\"349ddcfc\"><strong><strong>Sql实例</strong></strong></h3><h4 id=\"89f6884e\"><strong><strong>判断数字</strong></strong><strong><strong>（</strong></strong><strong><strong>创建函数</strong></strong><strong><strong>）</strong></strong></h4><p><br /></p><pre><code>create or replace function isNumber(p in varchar2)return number\n\nis\n\nresult number;begin\n\nresult := to_number(p);return 1;\n\nexceptionwhen VALUE_ERROR then return 0;end;</code></pre><p><br /></p><p><span class=\"lake-fontsize-10\">导出表结构</span></p><p><br /></p><pre><code>SELECT B.TABLE_NAME     AS &quot;表名&quot;,\n\n       C.COMMENTS       AS &quot;表说明&quot;,\n\n       B.COLUMN_ID      AS &quot;字段序号&quot;,\n\n       B.COLUMN_NAME    AS &quot;字段名&quot;,\n\n       B.DATA_TYPE      AS &quot;字段数据类型&quot;,\n\n       B.DATA_LENGTH    AS &quot;数据长度&quot;,\n\n       B.DATA_PRECISION AS &quot;整数位&quot;,\n\n       B.DATA_SCALE     AS &quot;小数位&quot;,\n\n       A.COMMENTS       AS &quot;字段说明&quot;\n\n  FROM ALL_COL_COMMENTS A, ALL_TAB_COLUMNS B, ALL_TAB_COMMENTS C\n\nWHERE A.TABLE_NAME IN (SELECT U.TABLE_NAME FROM USER_ALL_TABLES U)\n\n   AND A.OWNER = B.OWNER\n\n   AND A.TABLE_NAME = B.TABLE_NAME\n\n   AND A.COLUMN_NAME = B.COLUMN_NAME\n\n   AND C.TABLE_NAME = A.TABLE_NAME\n\n   AND C.OWNER = A.OWNER\n\n   AND A.OWNER = 'PYE'ORDER BY A.TABLE_NAME, B.COLUMN_ID;</code></pre><p><br /></p><h4 id=\"abcdb7f1\"><strong><strong>修改不符合的时间，修改年份和月份</strong><strong><br /></strong></strong></h4><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">-</span></p><p><br /></p><pre><code>-更新有/的时间、有两个/的日期、月份为1位数的，改为两位数select  (substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))),substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime)),(length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'/',''))),t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'/','')))&gt;=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'/','')))=2\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'/','')))&gt;=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'/','')))=2\n\n--更新有/的时间、有两个/的日期、年份为1位数的，改为两位数select (substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)), t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'/','')))&gt;=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'/','')))=1\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'/','')))&gt;=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'/','')))=1\n\n \n\n--更新有/的时间、有两个-的日期、月份为1位数的，改为两位数select  (substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))),t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'-','')))&gt;=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'-','')))=2\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,5)||'0'||substr(t.stime,6,length(t.stime))) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'-','')))&gt;=2 and  (length(substr(t.stime,0,7))-length(replace(substr(t.stime,0,7),'-','')))=2\n\n--更新有-的时间、有两个-的日期、年份为1位数的，改为两位数select (substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)), t.stime,t.*,t.rowid From t_test_cc_all_b20181212 t --where substr(t.stime,length(t.stime),length(t.stime)-1)='-'WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'-','')))&gt;=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'-','')))=1\n\nupdate  t_test_cc_all_b20181212 t set t.stime=(substr(t.stime,1,length(t.stime)-1)||'0'|| substr(t.stime,length(t.stime),1)) --where (length(t.stime)-length(replace(t.stime,'-',''))) =1WHERE length(t.stime)&lt;10 and  (length(t.stime)-length(replace(t.stime,'-','')))&gt;=2 and   (length(substr(t.stime,length(t.stime)-1,2))-length(replace(substr(t.stime,length(t.stime)-1,2),'-','')))=1\n\n \n\n </code></pre><p><br /></p><h4 id=\"37a3a350\">查看所有表空间及容量</h4><p><br /></p><pre><code>SELECT DBF.TABLESPACE_NAME,\n       DBF.TOTALSPACE &quot;总量(M)&quot;,\n       DBF.TOTALBLOCKS AS 总块数,\n       DBF.TOTALSPACE-DFS.FREESPACE &quot;使用量(M)&quot;,\n       DBF.TOTALBLOCKS-DFS.FREEBLOCKS AS 使用块数,      \n       DFS.FREESPACE &quot;剩余总量(M)&quot;,\n       DFS.FREEBLOCKS &quot;剩余块数&quot;,\n       (DFS.FREESPACE / DBF.TOTALSPACE) * 100 &quot;空闲比例&quot;\n  FROM (SELECT T.TABLESPACE_NAME,\n               SUM(T.BYTES) / 1024 / 1024 TOTALSPACE,\n               SUM(T.BLOCKS) TOTALBLOCKS\n          FROM DBA_DATA_FILES T\n         GROUP BY T.TABLESPACE_NAME) DBF,\n       (SELECT TT.TABLESPACE_NAME,\n               SUM(TT.BYTES) / 1024 / 1024 FREESPACE,\n               SUM(TT.BLOCKS) FREEBLOCKS\n          FROM DBA_FREE_SPACE TT\n         GROUP BY TT.TABLESPACE_NAME) DFS\n WHERE TRIM(DBF.TABLESPACE_NAME) = TRIM(DFS.TABLESPACE_NAME);</code></pre><p><br /></p><h4 id=\"c60f6138\">oracle表空间不足时处理</h4><p><span>表空间数据文件最大是32G，也就是说扩容最大为32G </span></p><h5 id=\"e7a0542d\">参考链接： </h5><p><a href=\"https://blog.csdn.net/love_java_cc/article/details/52857363\" target=\"_blank\">oracle 11g 导入数据库，表空间超过32G的解决办法——CSDN@冷静cc</a>  <br /><a href=\"https://jingyan.baidu.com/article/48b37f8d6ca1eb1a646488dc.html\" target=\"_blank\">oracle 表空间不足解决办法大全——百度经验@javababy5</a></p><p><br /></p><h5 id=\"b7cc6308\">第一，可能表空间还未达到最大扩容内存，但未设置自动扩容</h5><p><br /></p><pre><code>--修改数据文件内存50m为当前数据文件的内存大小\nalter database datafile 'D:\\ORACLE\\PRODUCT\\ORADATA\\TEST\\USERS01.DBF' resize 50m;\n--增加数据文件自动扩容功能,每次扩容为50m，最大不会超过32G\nalterdatabase datafile 'D:\\ORACLE\\PRODUCT\\ORADATA\\TEST\\USERS01.DBF' autoextend onnext 50m maxsize 32767m; </code></pre><h5 id=\"e3470cfa\">第二，表空间数据文件已经达到32G，则可以通过增加数据文件方式</h5><p><br /></p><pre><code>--USERS是你的表空间名，H:\\IDE\\oracle\\oradata\\orcl\\USERS02.dbf可以改为你的任意地址，最好放在一起方便，\n--每次扩容50m，最大32G\nalter tablespace USERS  \nadd datafile 'H:\\IDE\\oracle\\oradata\\orcl\\USERS02.dbf' size 50m \nautoextend on next 50m maxsize 32767m;</code></pre><p><br /></p><p><br /></p><h2 id=\"5dc99f6e\"><strong><strong>问题</strong></strong></h2><h3 id=\"122f6443\"><strong><strong>oracle之违反唯一约束条件</strong></strong></h3><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">出现这个原因，除了自己手动新增ID的情况外，还有就是引用自己创建的sequance，导入新表数据后，没有将新的sequance导入进来，可以将新sequance导入进来，也可以自动手动修改</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550118277133-fbbfbc99-569b-4a1e-ad5a-cf655ef6f786.png#align=left&amp;display=inline&amp;height=199&amp;name=image.png&amp;originHeight=199&amp;originWidth=822&amp;size=21888&amp;status=done&amp;width=822\" style=\"max-width: 600px; width: 822px;\" /><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"e2d3e6c0\"><strong><strong>修改字符集</strong></strong></h3><h4 id=\"ea6f3b87-4\"><strong><strong>参考链接</strong></strong></h4><p><span><a href=\"https://link.jianshu.com/?t=https://zhidao.baidu.com/question/134444813.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">如何改oracle AL16UTF16为AL32UTF8——百度知道</span></a></span></p><p><span><a href=\"https://link.jianshu.com/?t=http://www.itpub.net/thread-505857-1-1.html%23pid3728655\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">建库时AL16UTF16字符集怎么设置？——出处: ITPUB论坛－中国最专业的IT技术社区</span></a></span></p><p><strong><strong>操作：</strong></strong></p><p><br /></p><pre><code>Microsoft Windows [版本 6.1.7601]\n\n版权所有 (c) 2009 Microsoft Corporation。保留所有权利。\n\n \n\nC:\\Users\\Administrator&gt;sqlplus / as sysdba\n\n \n\nSQL*Plus: Release 11.2.0.1.0 Production on 星期四 1月 11 12:00:49 2018\n\n \n\nCopyright (c) 1982, 2010, Oracle.  All rights reserved.\n\n \n\n \n\n连接到:\n\nOracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production\n\nWith the Partitioning, OLAP, Data Mining and Real Application Testing options\n\n \n\nSQL&gt; shutdown immediate\n\n数据库已经关闭。\n\n已经卸载数据库。\n\nORACLE 例程已经关闭。\n\nSQL&gt; startup mount\n\nORACLE 例程已经启动。\n\n \n\nTotal System Global Area 3290345472 bytes\n\nFixed Size                  2180224 bytes\n\nVariable Size            2164263808 bytes\n\nDatabase Buffers         1107296256 bytes\n\nRedo Buffers               16605184 bytes\n\n数据库装载完毕。\n\nSQL&gt; ALTER SYSTEM ENABLE RESTRICTED SESSION;\n\n \n\n系统已更改。\n\n \n\nSQL&gt; ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0;\n\n \n\n系统已更改。\n\n \n\nSQL&gt; ALTER SYSTEM SET AQ_TM_PROCESSES=0;\n\n \n\n系统已更改。\n\n \n\nSQL&gt; ALTER DATABASE OPEN;\n\n \n\n数据库已更改。\n\n \n\nSQL&gt; ALTER DATABASE CHARACTER SET AL32UTF8;\n\nALTER DATABASE CHARACTER SET AL32UTF8\n\n*\n\n第 1 行出现错误:\n\nORA-12712: 新字符集必须为旧字符集的超集\n\n \n\n \n\nSQL&gt; ALTER DATABASE CHARACTER SET AL16UTF16;\n\nALTER DATABASE CHARACTER SET AL16UTF16\n\n*\n\n第 1 行出现错误:\n\nORA-12712: 新字符集必须为旧字符集的超集# ALTER DATABASE national CHARACTER SET AL16UTF16;\n\n \n\nSQL&gt; ALTER DATABASE character set INTERNAL_USE AL32UTF8;\n\n \n\n数据库已更改。\n\n \n\nSQL&gt; SHUTDOWN IMMEDIATE;\n\n数据库已经关闭。\n\n已经卸载数据库。\n\nORACLE 例程已经关闭。\n\nSQL&gt; STARTUP\n\nORACLE 例程已经启动。\n\n \n\nTotal System Global Area 3290345472 bytes\n\nFixed Size                  2180224 bytes\n\nVariable Size            2164263808 bytes\n\nDatabase Buffers         1107296256 bytes\n\nRedo Buffers               16605184 bytes\n\n数据库装载完毕。\n\n数据库已经打开。\n\nSQL&gt;</code></pre><p><br /></p><p><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">ALTER DATABASE character set INTERNAL_USE AL32UTF8;</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">INTERNAL_USE</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">有点像是强制修改，其他用户角色可能会报错</span></p><h4 id=\"bf52b411\"><strong><strong>其他问题</strong></strong></h4><h5 id=\"3e2e31b2\"><strong><strong>AL16UTF16不能作为character set</strong></strong></h5><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">AL16UTF16 不能用做数据库的character set，只能用做national character set 。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">character set必须是single byte 7-bit ASCII或是单字节EBCDIC的子集，因此fixed width的多字节字符集(AL16UTF16)就不能做为character set。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">你可以用如下这样用的：</span></p><p><br /></p><pre><code>CHARACTER SET US7ASCII NATIONAL CHARACTER SET AL16UTF16\n\n或是\n\nCHARACTER SET zhs16cgb231280  NATIONAL CHARACTER SET AL16UTF16\n\n \n\n \n\n \n\n </code></pre><p><br /></p><h3 id=\"46b308ed\"><strong><strong>如何修改服务名service_name</strong></strong></h3><h5 id=\"bd1bf7e7\"><strong><strong>转载链接</strong></strong></h5><p><span><a href=\"https://link.jianshu.com/?t=https://www.2cto.com/kf/201311/259856.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">如何修改 service_name</span></a></span></p><h5 id=\"d48898d5\"><strong><strong>例：</strong></strong></h5><h6 id=\"64162c1b\"><strong><strong>service_name原有环境：</strong></strong></h6><p><br /></p><pre><code>sid： mynewdb\n\nglobal_name：mynewdb\n\nservice_names： MYNEWDB\n\ndb_domain  ：\n\ndb_name：mynewdb</code></pre><p><br /></p><h6 id=\"f0740534\"><strong><strong>需要修改如下：</strong></strong></h6><p><br /></p><pre><code>global_name：mynewdb\n\nservice_names： test\n\ndb_domain  ：\n\ndb_name：mynewdb</code></pre><p><br /></p><h5 id=\"568a025c\"><strong><strong>方法：</strong></strong></h5><p><span class=\"lake-fontsize-10\">服务器端：</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">alter system set service_names='test';</span></p><p><span class=\"lake-fontsize-10\">这里采用静态注册，同时还要修改下 listener.ora</span></p><p><br /></p><pre><code>SID_LIST_LISTENER =\n\n  (SID_LIST =\n\n    (SID_DESC =\n\n      (SID_NAME = PLSExtProc)\n\n      (ORACLE_HOME =/u01/app/oracle/product/11.2.0/dbhome_1)\n\n      (PROGRAM = extproc)\n\n    )\n\n        (SID_DESC=\n\n        (GLOBAL_DBNAME = mynewdb)\n\n        (ORALCE_HOME = /u01/app/oracle/product/11.2.0/dbhome_1)\n\n        (SID_NAME = mynewdb)\n\n        )\n\n        (SID_DESC=\n\n        (GLOBAL_DBNAME = test)  -------这个是需要添加\n\n        (ORALCE_HOME = /u01/app/oracle/product/11.2.0/dbhome_1)\n\n        (SID_NAME = mynewdb)    ------这个还是原来的实例名\n\n        )\n\n  )</code></pre><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">cmd下执行命令</span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">lsnrctl reload</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">查看监听状态</span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">lsnrctl status</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">L</span></p><p><br /></p><pre><code>SNRCTL&gt;\n\nConnecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.80.11.202)(PORT=1521)))\n\nSTATUS of the LISTENER\n\n------------------------\n\nAlias                     LISTENER\n\nVersion                   TNSLSNR for [Linux](https://www.2cto.com/os/linux/): Version 11.2.0.1.0 - Production\n\nStart Date                21-NOV-2013 00:09:35\n\nUptime                    0 days 20 hr. 30 min. 55 sec\n\nTrace Level               off\n\nSecurity                  ON: Local OS Authentication\n\nSNMP                      OFF\n\nListener Parameter File   /u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora\n\nListener Log File         /u01/app/oracle/diag/tnslsnr/oracle11g/listener/alert/log.xml\n\nListening Endpoints Summary...\n\n  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=10.80.11.202)(PORT=1521)))\n\nServices Summary...\n\nService &quot;PLSExtProc&quot; has 1 instance(s).\n\n  Instance &quot;PLSExtProc&quot;, status UNKNOWN, has 1 handler(s) for this service...\n\nService &quot;mynewdb&quot; has 1 instance(s).\n\n  Instance &quot;mynewdb&quot;, status UNKNOWN, has 1 handler(s) for this service...\n\nService &quot;test&quot; has 1 instance(s).\n\n  Instance &quot;mynewdb&quot;, status UNKNOWN, has 1 handler(s) for this service...\n\nThe command completed successfully</code></pre><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">可以看到新的 Service &quot;test&quot; 已经可以使用了</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">客户端配置：</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">net manager 配置 服务名为 </span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">test</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\"> ，ip为数据库服务器主机ip，相应端口。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">测试连接：</span></p><p><br /></p><pre><code>SQL&gt;  conn sys/oracle@test as sysdba\n\n已连接。\n\nSQL&gt;</code></pre><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">当然不使用静态注册，动态注册也可以</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"3158f60d\"><strong><strong>警告日志文件</strong></strong></h3><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">不知道日志文件在哪的，可以使用这个命令</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">select value from v$diag_info where name='Diag Trace';</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">以下是我的输出地址</span></p><p><br /></p><pre><code>SQL&gt; select value from v$diag_info where name='Diag Trace';\n\n \n\nVALUE\n\n--------------------------------------------------------------------------------\n\nD:\\FLYINGCLOUD\\diag\\rdbms\\odb\\odb\\trace\n\n \n\n </code></pre><p><br /></p><h2 id=\"9e2e81b7\"><strong><strong>开发工具配置及问题</strong></strong></h2><h3 id=\"Plsql\"><strong><strong>Plsql</strong></strong></h3><h4 id=\"d672874c\"><strong><strong>plsql设置可显示的查询记录条数</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">tools-&gt;prifereces-&gt;window types-&gt;sql window-&gt;records per page</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">查询所有记录</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550118425257-e4d6330a-e5f6-4e7e-932c-fb25cf372fd2.png#align=left&amp;display=inline&amp;height=591&amp;name=image.png&amp;originHeight=591&amp;originWidth=564&amp;size=92527&amp;status=done&amp;width=564\" style=\"max-width: 600px; width: 564px;\" /><span class=\"lake-fontsize-12\"> </span></p><h4 id=\"5c094ab1\"><strong><strong>plsql如何查询sql执行计划</strong></strong></h4><p><span><a href=\"https://link.jianshu.com/?t=https://jingyan.baidu.com/article/ab69b270bffc2e2ca7189fee.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">怎么使用plsql查看执行计划</span></a></span></p><p><span class=\"lake-fontsize-10\">执行计划可以用计划sql执行的性能</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">选中需要执行的sql语句，然后按F5，或者直接点击&quot;执行计划&quot;</span></p><h4 id=\"e33957e7\"><strong><strong>PLSQL工具如何远程连接数据库</strong></strong></h4><h5 id=\"ea6f3b87-5\"><strong><strong>参考链接</strong></strong></h5><p><span><a href=\"https://link.jianshu.com/?t=https://zhidao.baidu.com/question/333852172.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">如何配置pl/sql 连接远程oracle服务器——百度知道</span></a></span></p><h5 id=\"d7ecf9b4\"><strong><strong>方法1：</strong></strong></h5><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">找到oracle的安装目录。如：C:\\oracle\\product\\10.2.0\\db_1\\network\\ADMIN</span></p><p style=\"text-align: center;\"><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550118449158-f157887f-799b-4b90-a947-2218b90f25ac.png#align=left&amp;display=inline&amp;height=30&amp;name=image.png&amp;originHeight=30&amp;originWidth=311&amp;size=2681&amp;status=done&amp;width=311\" style=\"max-width: 600px; width: 311px;\" /><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span></p><p style=\"text-align: center;\"><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">添加如下内容</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">其中中文部分是需要修改的部分，除第一个“本地实例名”外，其他需要跟远程数据库管理员咨询，本地实例名就是方便自己识别数据库的一个名字，可以自定义。</span></p><p><br /></p><pre><code>本地实例名 =\n\n  (DESCRIPTION =\n\n    (ADDRESS = (PROTOCOL = TCP)(HOST = 远程数据库IP地址)(PORT = 远程服务器端口号))\n\n    (CONNECT_DATA =\n\n      (SERVER = DEDICATED)\n\n      (SERVICE_NAME = 远程数据库服务名)\n\n    )\n\n  )</code></pre><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">然后打开pl/sql就能看到自己创建的链接，如图：</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550118496776-446fbbd8-7f17-4ec9-be0b-219d248b2910.png#align=left&amp;display=inline&amp;height=204&amp;name=image.png&amp;originHeight=204&amp;originWidth=392&amp;size=17502&amp;status=done&amp;width=392\" style=\"max-width: 600px; width: 392px;\" /><span class=\"lake-fontsize-12\"> </span></p><p><span class=\"lake-fontsize-12\">方法2：</span></p><p><span class=\"lake-fontsize-12\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h5 id=\"5d64018c\"><strong><strong>方法2：</strong></strong></h5><h6 id=\"ef35ed63\"><strong><strong>格式：</strong></strong></h6><p><span style=\"color: #FF0000;\">ip</span><span>:</span><span style=\"color: #FF0000;\">端口</span><span>/</span><span style=\"color: #FF0000;\">sid</span></p><h6 id=\"614fc656\"><strong><strong>示例：</strong></strong></h6><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1550118525263-c7c6ad21-d3fb-4563-9154-f8bc23c3f375.png#align=left&amp;display=inline&amp;height=209&amp;name=image.png&amp;originHeight=209&amp;originWidth=393&amp;size=10049&amp;status=done&amp;width=393\" style=\"max-width: 600px; width: 393px;\" /><span style=\"color: #FF0000;\"> </span></p>",
    "body_lake": "<!doctype lake><p>tags: [<span>oracle</span>,数据库]</p><p>categories: oracle</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22BnBPT%22%7D\"></card><p><br /></p><h1 id=\"f66bd8f4\" style=\"text-align: center;\"><strong><strong>O</strong></strong><strong><strong>ra</strong></strong><strong><strong>cle</strong></strong><strong><strong>经验</strong></strong></h1><p><span class=\"lake-fontsize-10\"> </span></p><h2 id=\"e9a9187c\"><strong><strong>申明</strong></strong></h2><p><span class=\"lake-fontsize-10\">本文大部分资料来自《深入理解</span><span class=\"lake-fontsize-10\">Oracle 12c数据库管理</span><span class=\"lake-fontsize-10\">》，但是也有自己的个人观点，大家也去看这本书</span></p><h2 id=\"e05dce83\"><strong><strong>简介</strong></strong></h2><p><span class=\"lake-fontsize-10\">\t</span><span class=\"lake-fontsize-10\">Oracle</span><span class=\"lake-fontsize-10\">数据库已经是当今世界技术前沿了，因为它优点突出 </span></p><p><span class=\"lake-fontsize-10\">有以下优点：</span></p><p><span class=\"lake-fontsize-10\"><span>(1) </span></span><span class=\"lake-fontsize-10\">拥有其他数据库系统所没有的表空间概念；</span></p><p><span class=\"lake-fontsize-10\"><span>(2) </span></span><span class=\"lake-fontsize-10\">拥有真正的等级锁功能</span></p><p><span class=\"lake-fontsize-10\"><span>(3) </span></span><span class=\"lake-fontsize-10\">拥有多版本数据功能，读写操作不会相互等待（我觉得是非常的好特性）</span></p><p><span class=\"lake-fontsize-10\"><span>(4) </span></span><span class=\"lake-fontsize-10\">拥有更快的处理速度和更高的安全性；</span></p><p><span class=\"lake-fontsize-10\"><span>(5) </span></span><span class=\"lake-fontsize-10\">拥有丰富的数据字典，易于DBA判断数据库的各种情况；</span></p><p><span class=\"lake-fontsize-10\"><span>(6) </span></span><span class=\"lake-fontsize-10\">拥有非常简单明了的备份与恢复原理</span></p><p><span class=\"lake-fontsize-10\"><span>(7) </span></span><span class=\"lake-fontsize-10\">O</span><span class=\"lake-fontsize-10\">racle数据库可以启动到多个阶段，DBA可以在不同的情况下，通过启动到特定的阶段解决一些特殊问题</span></p><p><span class=\"lake-fontsize-10\"><span>(8) </span></span><span class=\"lake-fontsize-10\">O</span><span class=\"lake-fontsize-10\">racle可以跨越多种软、硬平台。</span></p><p><span class=\"lake-fontsize-10\"><br /><cursor /></span></p><p><br /></p><h2 id=\"362eced1\"><strong><strong>Oracle</strong></strong><strong><strong>安装和创建</strong></strong><strong><strong>(</strong></strong><strong><strong>由于本文作者觉得linux太花费时间，故只有这部分讲解到linux</strong></strong><strong><strong>)</strong></strong></h2><p><span class=\"lake-fontsize-10\">O</span><span class=\"lake-fontsize-10\">racle安装一般有两种，一种是图形界面的安装，另一种是无界面安装。建议是无界面，因为</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">图形界面在宽带不足情况下，可能出现加载远程界面慢的问题，而且不能自动化</span><span class=\"lake-fontsize-10\">。无界面可以依靠应答文件来安装。</span></p><h3 id=\"712f5efa\"><strong><strong>了解OFA标准</strong></strong></h3><p><span class=\"lake-fontsize-10\">OFA标准是指oracle的目录结构和文件名，然而大部分DBA（database manager数据库管理员简称DBA）都在一定程度上自定义了，以适应于不同的环境。</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117219355-d3c0e3a0-41c9-45c4-ae0c-a89fe13bccb3.png%22%2C%22originWidth%22%3A835%2C%22originHeight%22%3A507%2C%22name%22%3A%22image.png%22%2C%22size%22%3A295404%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A835%2C%22height%22%3A507%7D\"></card></p><p><span>&lt;!--more--&gt;</span></p><h3 id=\"119c5730\"><strong><strong>库的高速缓存和数据字典的高速缓存</strong></strong></h3><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"a55e5de5\"><strong><strong>库的高速缓存</strong></strong></h4><p><span class=\"lake-fontsize-10\">是用来存放你实际表的数据块的，如表TAB_A里实际存放的若干条数据记录，一般都</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">存放在用户的表空间里</span><span class=\"lake-fontsize-10\">。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"773d69a4\"><strong><strong>数据字典的高速缓存</strong></strong></h4><p><span class=\"lake-fontsize-10\">用来存放表的定义，如表TAB_A，有几个字段，每个字段的类型、长度，表空间等，这类信息在你建表后会存放在系统表里，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">都是在SYSTEM表空间下，ORACLE运行时，这些信息被装入数据字典高速缓存里。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"7f04d897\"><strong><strong>数据字典的意思是</strong></strong></h4><p><span class=\"lake-fontsize-10\">简单的说就和我们小学用的词典的目录一样  要查询个表的数据 首先要确认这个词典（数据库）中有这个词语（表）  吧</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"2655d132\"><strong><strong>安装oracle</strong></strong></h3><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"061f72da\"><strong><strong>创建对应的权限的O</strong></strong><strong><strong>S</strong></strong><strong><strong>用户组</strong></strong></h4><p><span class=\"lake-fontsize-10\">我们需要linux上创建一些OS用户组，安装完oracle之后就可以为linuxOS用户组分配的相应的数据库操作权限，正常来说OS用户组（</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">注：用户和用户组是不一样的</span><span class=\"lake-fontsize-10\">）的创建是属于系统管理员（SA）的工作，但是大部分情况没有SA。</span></p><p><span class=\"lake-fontsize-10\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117248391-cbfc23d8-2f3c-4bb5-b862-65300cfb607d.png%22%2C%22originWidth%22%3A822%2C%22originHeight%22%3A488%2C%22name%22%3A%22image.png%22%2C%22size%22%3A254798%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A822%2C%22height%22%3A488%7D\"></card></span></p><p><span class=\"lake-fontsize-10\">不必根据一字不差照搬组名，可以根据不一样环境来配置。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h5 id=\"657ad920\"><strong><strong>运行linux命令，创建组</strong></strong></h5><p><span class=\"lake-fontsize-10\">我们只按照简单的功能来分组就好了，oinstall负责安装和卸载权限，dba具有完全操作权限，oper只具有数据库操作权限（包含一些删除表，创建表，修改等待权限 ）</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">g</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">roupadd</span><span class=\"lake-fontsize-10\"> oinstall</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">g</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">roupadd</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span><span class=\"lake-fontsize-10\">dba</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">g</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">roupadd</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span><span class=\"lake-fontsize-10\">oper</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h6 id=\"ccd2979a\"><strong><strong>查看创建的OS组</strong></strong></h6><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">cat </span><span class=\"lake-fontsize-10\">/etc/group</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117306714-eef5438b-f88e-43d4-9ecb-0d43990fe65f.png%22%2C%22originWidth%22%3A281%2C%22originHeight%22%3A386%2C%22name%22%3A%22image.png%22%2C%22size%22%3A12073%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A281%2C%22height%22%3A386%7D\"></card></p><p><span class=\"lake-fontsize-10\">1000</span><span class=\"lake-fontsize-10\">、1001、1002是我们组的ID</span></p><h5 id=\"87c9fadb\"><strong><strong>创建用户并分配组</strong></strong></h5><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">u</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">seradd </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-u </span><span class=\"lake-fontsize-10\">500 </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-g</span><span class=\"lake-fontsize-10\"> oinstall </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-G</span><span class=\"lake-fontsize-10\"> dba , oper oracle</span></p><p><span class=\"lake-fontsize-10\">将组ID设置500</span><span class=\"lake-fontsize-10\">(</span><span class=\"lake-fontsize-10\">其他同事可能需要人执行相同的组ID来执行所有安装</span><span class=\"lake-fontsize-10\">)</span></p><p><span class=\"lake-fontsize-10\">创建主属组为oinstall，创建副属组为dba,oper</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-g</span><span class=\"lake-fontsize-10\"> </span><span class=\"lake-fontsize-10\">和</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">-</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">G</span><span class=\"lake-fontsize-10\">，分别是分配主属组和附属组的意思。</span></p><h6 id=\"d82e410e\"><strong><strong>查看用户信息</strong></strong></h6><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">cat</span><span class=\"lake-fontsize-10\"> /etc/passwd</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117322832-e84ea737-28ec-450b-9087-7f6f9c5272ea.png%22%2C%22originWidth%22%3A827%2C%22originHeight%22%3A385%2C%22name%22%3A%22image.png%22%2C%22size%22%3A30460%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A827%2C%22height%22%3A385%7D\"></card></p><p><span class=\"lake-fontsize-10\"> </span></p><h6 id=\"e7d20343\"><strong><strong>删除修改用户，或者用户组</strong></strong></h6><p><span class=\"lake-fontsize-10\">修改删除用户组：</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">groupmod</span><span class=\"lake-fontsize-10\">、</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">groupdel</span></p><p><span class=\"lake-fontsize-10\">修改删除用户：</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">usermod</span><span class=\"lake-fontsize-10\">、</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">userdel</span></p><p><span class=\"lake-fontsize-10\">以上命令需要使用系统管理员登录</span></p><h4 id=\"11c5905d\"><strong><strong>查看linux环境信息</strong></strong></h4><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117345109-376aba41-14b7-46f6-9e38-8141c9886cfb.png%22%2C%22originWidth%22%3A860%2C%22originHeight%22%3A401%2C%22name%22%3A%22image.png%22%2C%22size%22%3A45732%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A860%2C%22height%22%3A401%7D\"></card><span class=\"lake-fontsize-10\">以下为我本人系统的信息</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117364504-14c00655-46d0-4c60-a248-84661ea1cb04.png%22%2C%22originWidth%22%3A666%2C%22originHeight%22%3A452%2C%22name%22%3A%22image.png%22%2C%22size%22%3A29951%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A666%2C%22height%22%3A452%7D\"></card></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">grep MemTotal </span><span class=\"lake-fontsize-10\"> /proc/meminfo</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">free –t</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">df –h</span><span class=\"lake-fontsize-10\"> /tmp</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">df –h</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">cat</span><span class=\"lake-fontsize-10\"> /proc/version</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">uname –r</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">rpm –q </span><span class=\"lake-fontsize-10\">&lt;package name&gt;</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\"> </span><span class=\"lake-fontsize-10\">查询是否已经安装必须的软件包</span></p><h2 id=\"fdd1ae5b\"><strong><strong>管理数据库</strong></strong></h2><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"dfc119cb\"><strong><strong>S</strong></strong><strong><strong>ysdba数据库账号</strong></strong></h3><p><span class=\"lake-fontsize-10\">这个账号可拥有除了关闭数据库以外的所有操作权限</span></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">as sysdba</span><span class=\"lake-fontsize-10\">作为系统管理员登录</span></p><h3 id=\"6aee7bf5\"><strong><strong>第一次操作数据库</strong></strong></h3><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">s</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">tartup </span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">onmount </span><span class=\"lake-fontsize-10\">启动后台进程并分配内存，此命令执行后，sql*plus会读取ORACLE_HOME/dbs中的初始化文件，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">会使后台进程和内存区域初始化，这样你就拥有了o</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">racle</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">的实例，但是还没有数据库</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117384566-27b7d3ce-0863-4a79-ac04-4ec4bfc56b98.png%22%2C%22originWidth%22%3A603%2C%22originHeight%22%3A228%2C%22name%22%3A%22image.png%22%2C%22size%22%3A11983%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A603%2C%22height%22%3A228%7D\"></card></p><p><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oracle</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">实例</span><span class=\"lake-fontsize-10\">是指后台进程和内存区域，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oracle数据库</span><span class=\"lake-fontsize-10\">是指磁盘上的物理文件（数据文件、控制文件、联机重做日志文件）</span></p><h3 id=\"187ec332\"><strong><strong>表空间</strong></strong></h3><h4 id=\"fcf86c6f\"><strong><strong>查询TEMP临时表空间</strong></strong></h4><p><span class=\"lake-fontsize-10\">select*from database_properties where property_name='DEFAULT_TEMP_TABLESPACE';</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117405819-4e8691dc-3239-445c-b58e-e77a25fa45f4.png%22%2C%22originWidth%22%3A620%2C%22originHeight%22%3A202%2C%22name%22%3A%22image.png%22%2C%22size%22%3A7894%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A620%2C%22height%22%3A202%7D\"></card></p><h4 id=\"5d4d5693\"><strong><strong>USER表空间</strong></strong></h4><p><span class=\"lake-fontsize-10\">select*from database_properties</span></p><p><span class=\"lake-fontsize-10\">where roperty_name='DEFAULT_PERMANENT_TABLESPACE';</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117417926-a850da9d-5066-484f-9f27-e1aedcadea79.png%22%2C%22originWidth%22%3A632%2C%22originHeight%22%3A172%2C%22name%22%3A%22image.png%22%2C%22size%22%3A7080%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A632%2C%22height%22%3A172%7D\"></card></p><h3 id=\"00caab79\"><strong><strong>连接标识</strong></strong></h3><h4 id=\"8d258c38\"><strong><strong>Oracle 的OCI Driver 和 Thin Driver的区别</strong></strong></h4><p><span class=\"lake-fontsize-10\">有以下两种标识方式：</span></p><p><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\">jdbc:oracle:</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oci8</span><span class=\"lake-fontsize-10\">:@shdb</span></p><p><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\">1）从使用上来说，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">oci必须在客户机上安装oracle客户端或才能连接，而thin就不需要</span><span class=\"lake-fontsize-10\">，因此从使用上来讲thin还是更加方便，这也是thin比较常见的原因。 </span><span class=\"lake-fontsize-10\"><br /></span><span class=\"lake-fontsize-10\">2）原理上来看，thin是纯java实现tcp/ip的c/s通讯；而oci方式,客户端通过native java method调用c library访问服务端，而这个c library就是oci(oracle called interface)，因此这个oci总是需要随着oracle客户端安装（从oracle10.1.0开始，单独提供OCI Instant Client，不用再完整的安装client） </span><span class=\"lake-fontsize-10\"><br /></span><span class=\"lake-fontsize-10\">3）它们分别是不同的驱动类别，oci是二类驱动， thin是四类驱动，</span><span class=\"lake-fontsize-10\" style=\"color: #FF0000;\">但它们在功能上并无差异。</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"3a0f1856\"><strong><strong>查询实例名（SID）</strong></strong></h3><p><span class=\"lake-fontsize-9\" style=\"color: #657B83;\">sqlplus / as sysdba</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #657B83;\">show parameter instance_name</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h2 id=\"f858894c\"><strong><strong>配置用户和数据库对象</strong></strong></h2><h2 id=\"f8876e5d\"><strong><strong>创建和维护大型数据库对象、分区和索引</strong></strong></h2><h2 id=\"d2adec7f\"><strong><strong>备份和恢复</strong></strong></h2><h2 id=\"01a62dbc\"><strong><strong>数据库自动化及常见问题解决方法</strong></strong></h2><h2 id=\"9d2f273a\"><strong><strong>管理窗口和可插入数据库</strong></strong></h2><h2 id=\"d579eb7d\"><strong><strong>Oracle 导入导出及连接</strong></strong></h2><h3 id=\"ea6f3b87\"><strong><strong>参考链接</strong></strong></h3><p><span><a href=\"http://blog.itpub.net/21614165/viewspace-766937/\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle数据库导入导出命令总结</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://blog.csdn.net/wildin/article/details/5850252\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">sqlplus连接远程数据库</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://www.cnblogs.com/wanghongyun/p/6307652.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">ORACLE的impdp和expdp命令</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://www.2cto.com/database/201304/203709.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">oracle expdp——红黑联盟</span></a></span></p><h3 id=\"02babed4\"><strong><strong>exp 和imp导入导出</strong></strong></h3><h4 id=\"f77e0e7c\"><strong><strong>导出命令 (exp)</strong></strong></h4><p><strong><strong>格式：</strong></strong></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22exp%20%5B%E7%94%A8%E6%88%B7%E5%90%8D%5D%2F%5B%E5%AF%86%E7%A0%81%5D%40%5B%E4%B8%BB%E6%9C%BAip%5D%3A%5B%E7%AB%AF%E5%8F%A3%E5%8F%B7%5D%2F%5BSID%2Fservice%5D%20file%3Dd%3A%5C%5Czhpt.dmp%20full%3Dn%22%2C%22id%22%3A%22VLMnF%22%7D\"></card><p><br /></p><p><span style=\"color: #333333;\">file</span><span style=\"color: #333333;\">是导出路径</span><span style=\"color: #000080;\">full</span><span style=\"color: #333333;\">=n,</span><span style=\"color: #333333;\">表示是否导出主机数据库上全部用户，</span><span style=\"color: #333333;\">n</span><span style=\"color: #333333;\">表示否，</span><span style=\"color: #333333;\">y</span><span style=\"color: #333333;\">表示是</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">exp</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\"> abc/abc@</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">183.233.179.165</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">:</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">1521</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">/orcl file=d:\\zhpt.dmp full=y</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117435502-1497acdc-62e6-4f06-bcb2-86eb61c72693.png%22%2C%22originWidth%22%3A625%2C%22originHeight%22%3A34%2C%22name%22%3A%22image.png%22%2C%22size%22%3A2889%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A625%2C%22height%22%3A34%7D\"></card></p><p>如果密码出特殊符号，使用`&quot;&quot;&quot;`包裹，如果其他地址有特殊符号，需要用`\\`转义，需要指定用户导出可以使用`owner`</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22exp%20grz%2F%5C%22%5C%22%5C%22g2011*)%5C%22%5C%22%5C%22%4019.129.180.19%3A1521%2Foracle%20file%3Dgr20190410.dmp%20owner%20in%20%5C%5C(%5C%5C'gr%5C%5C'%2C%5C%5C'jzs'%5C%5C)%20full%3Dn%22%2C%22id%22%3A%22votlO%22%7D\"></card><p><br /></p><h4 id=\"606fd7a7\"><strong><strong>导入数据库（imp）</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22powershell%22%2C%22code%22%3A%22%23%20full%20%E8%A1%A8%E7%A4%BA%E6%98%AF%E5%90%A6%E5%AF%BC%E5%87%BA%E5%85%A8%E9%83%A8%E6%95%B0%E6%8D%AE%EF%BC%8C%E4%B8%80%E5%AE%9A%E8%A6%81%E8%AE%BE%E7%BD%AE%5Cn%23%20log%20%E8%BE%93%E5%87%BA%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%23%20fromuser%20%E4%BB%8E%E5%93%AA%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E5%AF%BC%E5%85%A5%5Cn%23%20touser%20%E5%AF%BC%E5%85%A5%E5%88%B0%E5%93%AA%E4%B8%AA%E7%94%A8%E6%88%B7%5Cn%23%20ignore%3Dy%20buffer%3D100000000%3B%20%E4%BF%AE%E6%94%B9%E7%BC%93%E5%86%B2%E5%8C%BA%E5%A4%A7%E5%B0%8F%EF%BC%8C%E6%9C%89%E6%97%B6sql%E8%AF%AD%E5%8F%A5%E8%BF%87%E9%95%BF%EF%BC%8C%E4%BC%9A%E9%80%A0%E6%88%90%E7%BC%93%E5%86%B2%E5%8C%BA%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3%5Cnimp%20username%2Fpwd%40orcl%20file%3Dd%3A%5C%5Czhpt.dmp%20log%3DC%3A%5C%5Cdata%5C%5Clogname.log%20full%3Dy%5Cn%23%20%E6%88%96%E8%80%85%5Cnimp%20username%2Fpwd%40orcl%20file%3DE%3A%5C%5C20171108.dmp%20fromuser%3Dusername%20touser%3D%20username%20log%3DD%3A%5C%5CwebBackend%5C%5Ckingzheng%5C%5C%E4%BD%8F%E6%88%BF%E4%BF%9D%E9%9A%9C%E7%B3%BB%E7%BB%9F%5C%5Cfszfbz201711191635.log%20full%3Dn%5Cn%23%20%E6%88%96%E8%80%85%5Cnimp%20username%2Fpwd%40orcl%20file%3Dd%3A%5C%5Czhpt.dmp%20log%3DC%3A%5C%5Cdata%5C%5Clogname.log%20full%3Dy%20ignore%3Dy%20buffer%3D100000000%3B%22%2C%22id%22%3A%22vCN7R%22%7D\"></card><p><span> </span></p><h3 id=\"69a49bc6\"><strong><strong>expdp和impdp创建数据泵导入导出</strong></strong><strong><strong> </strong></strong></h3><h4 id=\"f0c6d9cb\"><strong><strong>需要先创建数据泵</strong></strong></h4><p><span class=\"lake-fontsize-10\">数据泵，说白了就是指定一个目录给oracle，但是oracle不会帮你创建的，需要自己先实际地创建</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22%23%20%20%E6%9F%A5%E7%9C%8B%E6%89%80%E6%9C%89%E6%95%B0%E6%8D%AE%E6%B3%B5%E5%9C%B0%E5%9D%80%5Cnselect%20*%20from%20dba_directories%3B%23%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E6%B3%B5%EF%BC%8C%E6%95%B0%E6%8D%AE%E6%B3%B5%E5%9C%B0%E5%9D%80%E5%8D%B3%E4%B8%BA%E4%BD%A0%E7%9A%84%E5%AF%BC%E5%87%BA%E5%AF%BC%E5%85%A5%E5%9C%B0%E5%9D%80%E6%96%87%E4%BB%B6%E5%9C%B0%E5%9D%80%5Cncreate%20directory%20myname%20as%20'D%3A%5C%5Ctemp%5C%5C%E6%95%B0%E6%8D%AE%E6%B3%B5%E5%9C%B0%E5%9D%80'%3B%23%20%E6%8E%88%E4%BA%88%E6%9D%83%E9%99%90%20sshe%E8%BF%99%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%AF%E8%AF%BB%E5%8F%AF%E5%86%99%5Cngrant%20read%2Cwrite%20on%20directory%20dpdata1%20to%20sshe%3B%5Cn%5Cnsql%3E--%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E4%BB%A5%E4%B8%8B%E8%AF%AD%E5%8F%A5%E6%9F%A5%E7%9C%8B%E7%9B%AE%E5%BD%95%E6%93%8D%E4%BD%9C%E6%9D%83%E9%99%90%5Cnsql%3E%20%20SELECT%20privilege%2C%20directory_name%2C%20DIRECTORY_PATH%20FROM%20user_tab_privs%20t%2C%20all_directories%20d%20WHERE%20t.table_name(%2B)%20%3D%20d.directory_name%20ORDER%20BY%202%2C%201%3B%20%22%2C%22id%22%3A%22wlJiO%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-10\"><strong>注意：</strong></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> 数据泵地址以及文件dmp需要自己创建</span></p><h4 id=\"837cb31c\"><strong><strong>导出数据（expdp）</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">这种数据泵效率非常高，但是使用这种数据泵导出的数据，</span><strong><u><strong>一般情况下只在本机导出</strong></u></strong><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">，</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">需要用impdp导入</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22rem%20my_dir%E6%98%AF%E6%95%B0%E6%8D%AE%E6%B3%B5%E5%90%8D%E7%A7%B0%5Cn%5Cnrem%20exclude%20table%3A%5C%22in(%E8%A1%A8%E5%90%8D%2C%E5%88%97%E5%90%8D2%EF%BC%8C%E2%80%A6%E2%80%A6)%5C%22%E4%B8%8D%E5%AF%BC%E5%87%BA%E6%9F%90%E4%BA%9B%E8%A1%A8%5Cn%5Cnexpdp%20test%2Ftest%40orcl%20directory%3Dmy_dir%20dumpfile%3Dmy.dmp%20exclude%3Dtable%3A%5C%5C%5C%22in%20%5C%5C(%5C%5C'DEPT%5C%5C'%2C%5C%5C'EMP%5C%5C'%5C%5C)%5C%5C%5C%22%20SCHEMAS%3DFSJSCX%22%2C%22id%22%3A%22MPqwB%22%7D\"></card><p><br /></p><h4 id=\"Impdp\"><strong><strong>Impdp</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">跟</span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">expdp</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">的语法格式差不多</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%20impdp%20test%2Ftest%40orcl%20DIRECTORY%3Dmy_dir%20%20DUMPFILE%3Dmy.dmp%20SCHEMAS%3Dtest%20logfile%3D%25logfile%25%22%2C%22id%22%3A%22UO6Cm%22%7D\"></card><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span></p><h5 id=\"d303267a\"><strong><strong>问题：</strong></strong></h5><h6 id=\"29398c59\"><strong><strong>这些对象由 FSZJZ 导出, 而不是当前用户</strong></strong></h6><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117805403-46bf4a8c-9f04-4d1a-9def-916cf1fd0a66.png%22%2C%22originWidth%22%3A517%2C%22originHeight%22%3A134%2C%22name%22%3A%22image.png%22%2C%22size%22%3A10915%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A517%2C%22height%22%3A134%7D\"></card></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">导出是哪个用户，导入时用户也要相同，需要自己再创建一个用户</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h6 id=\"2e846665\"><strong><strong>只有管理员用户，才可以导入</strong></strong></h6><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550117815821-b03a30e3-3157-4e16-8e5d-4cfb4766f698.png%22%2C%22originWidth%22%3A412%2C%22originHeight%22%3A80%2C%22name%22%3A%22image.png%22%2C%22size%22%3A4702%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A412%2C%22height%22%3A80%7D\"></card><span class=\"lake-fontsize-12\"> </span></p><h6 id=\"5b692eb8\"><strong><strong>ora-28759 无法打开文件</strong></strong></h6><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">以下这两句可能在不同的操作系统，支持不同，不太清楚，我服务器，两个都是sever2008，但是只有一个报这个错误，这个报错确实跟用户连接有关系，</span><strong><strong>最好是采用second</strong></strong></p><p><span class=\"lake-fontsize-12\"> </span></p><h3 id=\"88e73bd4\"><strong><strong>sqlplus 远程连接数据库</strong></strong></h3><h4 id=\"ce1ec2ce\"><strong><strong>远程连接</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%E5%91%BD%E4%BB%A4%EF%BC%9Asqlplus%20%E7%94%A8%E6%88%B7%E5%90%8D%2F%E5%AF%86%E7%A0%81%40ip%E5%9C%B0%E5%9D%80%5B%3A%E7%AB%AF%E5%8F%A3%5D%2Fservice_name%20%5Bas%20sysdba%5D%5Cn%5Cn%E7%A4%BA%E4%BE%8B%EF%BC%9Asqlplus%20sys%2Fpwd%40ip%3A1521%2Ftest%20as%20sysdba%22%2C%22id%22%3A%22wX5do%22%7D\"></card><p><br /></p><h4 id=\"0dfbe902\"><strong><strong>常用命令</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22SQL%3Eset%20colsep'%20'%3B%E3%80%80%E3%80%80%E3%80%80%E3%80%80%20%2F%2F-%E5%9F%9F%E8%BE%93%E5%87%BA%E5%88%86%E9%9A%94%E7%AC%A6%5Cn%5CnSQL%3Eset%20echo%20off%3B%E3%80%80%E3%80%80%E3%80%80%E3%80%80%20%2F%2F%E6%98%BE%E7%A4%BAstart%E5%90%AF%E5%8A%A8%E7%9A%84%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AAsql%E5%91%BD%E4%BB%A4%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BAon%5Cn%5CnSQL%3E%20set%20echo%20on%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AE%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%98%AF%E6%98%AF%E5%90%A6%E6%98%BE%E7%A4%BA%E8%AF%AD%E5%8F%A5%5Cn%5CnSQL%3E%20set%20feedback%20on%3B%20%20%20%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AE%E6%98%BE%E7%A4%BA%E2%80%9C%E5%B7%B2%E9%80%89%E6%8B%A9XX%E8%A1%8C%E2%80%9D%5Cn%5CnSQL%3Eset%20feedback%20off%3B%E3%80%80%20%20%20%20%2F%2F%E5%9B%9E%E6%98%BE%E6%9C%AC%E6%AC%A1sql%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E7%9A%84%E8%AE%B0%E5%BD%95%E6%9D%A1%E6%95%B0%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BAon%5Cn%5CnSQL%3Eset%20heading%20off%3B%E3%80%80%E3%80%80%20%2F%2F%E8%BE%93%E5%87%BA%E5%9F%9F%E6%A0%87%E9%A2%98%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BAon%5Cn%5CnSQL%3Eset%20pagesize%200%3B%E3%80%80%E3%80%80%20%20%20%20%2F%2F%E8%BE%93%E5%87%BA%E6%AF%8F%E9%A1%B5%E8%A1%8C%E6%95%B0%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BA24%2C%E4%B8%BA%E4%BA%86%E9%81%BF%E5%85%8D%E5%88%86%E9%A1%B5%EF%BC%8C%E5%8F%AF%E8%AE%BE%E5%AE%9A%E4%B8%BA0%E3%80%82%5Cn%5CnSQL%3Eset%20linesize%2080%3B%E3%80%80%E3%80%80%20%20%20%2F%2F%E8%BE%93%E5%87%BA%E4%B8%80%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%AA%E6%95%B0%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BA80%5Cn%5CnSQL%3Eset%20numwidth%2012%3B%E3%80%80%20%20%20%20%2F%2F%E8%BE%93%E5%87%BAnumber%E7%B1%BB%E5%9E%8B%E5%9F%9F%E9%95%BF%E5%BA%A6%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BA10%5Cn%5CnSQL%3Eset%20termout%20off%3B%E3%80%80%E3%80%80%20%20%20%2F%2F%E6%98%BE%E7%A4%BA%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%91%BD%E4%BB%A4%E7%9A%84%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BAon%5Cn%5CnSQL%3Eset%20trimout%20on%3B%E3%80%80%E3%80%80%E3%80%80%2F%2F%E5%8E%BB%E9%99%A4%E6%A0%87%E5%87%86%E8%BE%93%E5%87%BA%E6%AF%8F%E8%A1%8C%E7%9A%84%E6%8B%96%E5%B0%BE%E7%A9%BA%E6%A0%BC%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BAoff%5Cn%5CnSQL%3Eset%20trimspool%20on%3B%E3%80%80%E3%80%80%2F%2F%E5%8E%BB%E9%99%A4%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%88spool%EF%BC%89%E8%BE%93%E5%87%BA%E6%AF%8F%E8%A1%8C%E7%9A%84%E6%8B%96%E5%B0%BE%E7%A9%BA%E6%A0%BC%EF%BC%8C%E7%BC%BA%E7%9C%81%E4%B8%BAoff%5Cn%5CnSQL%3Eset%20serveroutput%20on%3B%20%2F%2F%E8%AE%BE%E7%BD%AE%E5%85%81%E8%AE%B8%E6%98%BE%E7%A4%BA%E8%BE%93%E5%87%BA%E7%B1%BB%E4%BC%BCdbms_output%5Cn%5CnSQL%3E%20set%20timing%20on%3B%20%20%20%20%20%20%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AE%E6%98%BE%E7%A4%BA%E2%80%9C%E5%B7%B2%E7%94%A8%E6%97%B6%E9%97%B4%EF%BC%9AXXXX%E2%80%9D%5Cn%5CnSQL%3E%20set%20autotrace%20on%3B%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AE%E5%85%81%E8%AE%B8%E5%AF%B9%E6%89%A7%E8%A1%8C%E7%9A%84sql%E8%BF%9B%E8%A1%8C%E5%88%86%E6%9E%90%5Cn%5CnSQL%3E%20set%20verify%20off%3B%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E5%8F%AF%E4%BB%A5%E5%85%B3%E9%97%AD%E5%92%8C%E6%89%93%E5%BC%80%E6%8F%90%E7%A4%BA%E7%A1%AE%E8%AE%A4%E4%BF%A1%E6%81%AFold%201%E5%92%8Cnew%201%E7%9A%84%E6%98%BE%E7%A4%BA.%22%2C%22id%22%3A%22zuQgL%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">导出结果到文本：</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">spool&lt;spool_flat_file&gt;</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">例如：spool d:\\Spool_flatquery.txt</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">这样，SQL*Plus将把所有的输出以及在屏幕上的命令等都指定给该文件。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">执行查询输出。此时，系统并没有把结果保存到文件中，而是保存到缓冲区中。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">查询结束后，关闭文件即可。命令格式为：spool off。</span></p><h3 id=\"df0cbcf7\"><strong><strong>oracle之jdbc连接oracle</strong></strong></h3><h4 id=\"b5f7449a\"><strong><strong>使用sid方式：</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22jdbc%3Aoracle%3Athin%3A%40host%3Aport%3ASID%20%5Cn%5CnExample%3A%20jdbc%3Aoracle%3Athin%3A%40localhost%3A1521%3Aorcl%20%22%2C%22id%22%3A%22P6x8c%22%7D\"></card><p><br /></p><h4 id=\"e0db0567\"><strong><strong>使用服务名方式</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">使用服务名的方式，这种格式是Oracle 推荐的格式，因为对于集群来说，每个节点的SID 是不一样的，但是SERVICE_NAME 确可以包含所有节点。</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22jdbc%3Aoracle%3Athin%3A%40%2F%2Fhost%3Aport%2Fservice_name%5Cn%5CnExample%3Ajdbc%3Aoracle%3Athin%3A%40%2F%2Flocalhost%3A1521%2Forcl.city.com%22%2C%22id%22%3A%22H7G9b%22%7D\"></card><p><br /></p><h4 id=\"859540a4\"><strong><strong>使用TNSName </strong></strong></h4><p><a target=\"_blank\"></a><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">使用<a target=\"_blank\">TNSName </a>， 要实现这种连接方式首先要建立tnsnames.ora文件，然后通过System.setProperty指明这个文件路径。再通过上面URL中的@符号指定文件中的要使用到的资源。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">这种格式我现在水平几乎没见过，对于我来说用得到这种的情况并不多吧。当然既然是通过配置文件来读取指定资源肯定也可以直接将资源拿出来放在URL中，直接放在URL中的URL模版是下面这样的（tnsnames.ora这个文件中放的就是@符号后面的那一段代码，当然用文件的好处就是可以配置多个，便于管理）：</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22jdbc%3Aoracle%3Athin%3A%40TNSName%20%5Cn%5CnExample%3A%20jdbc%3Aoracle%3Athin%3A%40TNS_ALIAS_NAME%5Cn%5Cnjdbc%3Aoracle%3Athin%3A%40(DESCRIPTION%3D(ADDRESS_LIST%3D(ADDRESS%3D(PROTOCOL%3D%20TCP)(HOST%3DhostA)(PORT%3D%201522))(ADDRESS%3D(PROTOCOL%3DTCP)(HOST%3Dyour%20host)(PORT%3D1521)))(SOURCE_ROUTE%3Dyes)(CONNECT_DATA%3D(SERVICE_NAME%3Dyour%20service_name)))%22%2C%22id%22%3A%22VUi6Z%22%7D\"></card><p><br /></p><h2 id=\"efbc27b9\"><strong><strong>Oracle obj（plsql中解释为对象）</strong></strong></h2><h4 id=\"019aaceb\"><strong><strong>Function 函数</strong></strong></h4><p><span class=\"lake-fontsize-10\"> </span></p><h4 id=\"d283ab83\"><strong><strong>Procedure 存储过程</strong></strong></h4><h5 id=\"ea6f3b87-1\"><strong><strong>参考链接</strong></strong></h5><p><span><a href=\"https://www.cnblogs.com/helong/articles/2093807.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle创建存储过程、创建函数、创建包——博客园@helong</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://blog.csdn.net/u010109335/article/details/60577055\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">ORACLE执行存储过程权限不足——CSDN@He之涅槃</span></a></span></p><p><span class=\"lake-fontsize-10\"> </span></p><h5 id=\"e3127cc1\"><strong><strong>格式</strong></strong></h5><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22create%20or%20replace%20procedure%20procedure_name(Name%20in%20out%20type%2C%20Name%20in%20out%20type%2C%20...)%20isbegin%5Cn%5Cn%20%20end%20procedure_name%3B%22%2C%22id%22%3A%22JgrL3%22%7D\"></card><p><br /></p><h5 id=\"1a63ac23\"><strong><strong>示例</strong></strong></h5><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22sql%22%2C%22code%22%3A%22--%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC%EF%BC%8C%E5%B9%B6update%E6%95%B0%E6%8D%AE%5Cn%5Cn--dbms_output.put_line()%E9%9C%80%E8%A6%81%E5%85%88%E5%9C%A8command%EF%BC%88%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%95%8C%E9%9D%A2%EF%BC%89%E2%80%9Cset%20serverout%20on%20%E2%80%9D%E6%89%93%E5%BC%80%E8%BE%93%E5%87%BA%5Cn%5Cncreate%20or%20replace%20procedure%20update_qylxid_of_null_for_rygx%5Cn%5CnAuthid%20Current_User%5Cn%5Cnis%5Cn%5Cn%20%20v_date%20varchar2(8)%3B--%E5%AE%9A%E4%B9%89%E6%97%A5%E6%9C%9F%E5%8F%98%E9%87%8F%5Cn%5Cn%20%20v_sql%20varchar2(2000)%3B--%E5%AE%9A%E4%B9%89%E5%8A%A8%E6%80%81sql%5Cn%5Cn%20%20v_tablename%20varchar2(20)%3B--%E5%AE%9A%E4%B9%89%E5%8A%A8%E6%80%81%E8%A1%A8%E5%90%8D%5Cn%5Cn%20%20begin%5Cn%5Cn%20%20%20select%20to_char(sysdate%2C'yyyymmdd')%20into%20v_date%20from%20dual%3B--%E5%8F%96%E6%97%A5%E6%9C%9F%E5%8F%98%E9%87%8F%5Cn%5Cn%20%20%20v_tablename%20%3A%3D%20'T_'%7C%7Cv_date%3B--%E4%B8%BA%E5%8A%A8%E6%80%81%E8%A1%A8%E5%91%BD%E5%90%8D%5Cn%5Cn%20%20%20v_sql%20%3A%3D%20'create%20table%20'%7C%7Cv_tablename%7C%7C'as%20select*from%20t_qy'%3B--%E4%B8%BA%E5%8A%A8%E6%80%81sql%E8%B5%8B%E5%80%BC%5Cn%5Cn%20%20%20dbms_output.put_line(v_sql)%3B--%E6%89%93%E5%8D%B0sql%E8%AF%AD%E5%8F%A5%5Cn%5Cn%20%20%20execute%20immediate%20v_sql%3B--%E6%89%A7%E8%A1%8C%E5%8A%A8%E6%80%81sql%5Cn%5Cn%20%20%20v_sql%3A%3D'update%20t_qy%20t%20set%20t.LXID%3D(select%20LXID%20from%20t_qy_qy%20lx%20where%20lx.bh%3Dt.bh%20and%20lx.LX%20%3Dt.dm)%20where%20%20t.lxid%20is%20null'%3B%5Cn%5Cn%20%20%20dbms_output.put_line(v_sql)%3B--%E6%89%93%E5%8D%B0sql%E8%AF%AD%E5%8F%A5%5Cn%5Cn%20%20%20execute%20immediate%20v_sql%3B--%E6%89%A7%E8%A1%8C%E5%8A%A8%E6%80%81sql%5Cn%5Cnend%20update_qylxid_of_null_for_rygx%3B%22%2C%22id%22%3A%22ceN6q%22%7D\"></card><p><br /></p><h5 id=\"50d52dd9\"><strong><strong>常见问题</strong></strong></h5><h6 id=\"1fc98647\"><strong><strong>ORACLE执行存储过程权限不足</strong></strong></h6><p><span><a href=\"https://blog.csdn.net/u010109335/article/details/60577055\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">ORACLE执行存储过程权限不足——CSDN@He之涅槃</span></a></span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22--%E9%9C%80%E8%A6%81%E5%A2%9E%E5%8A%A0Authid%20Current_User%5Cn%5Cn--AUTHID%20DEFINER%20%EF%BC%88%E5%AE%9A%E4%B9%89%E8%80%85%E6%9D%83%E9%99%90%EF%BC%89%EF%BC%9A%E6%8C%87%E7%BC%96%E8%AF%91%E5%AD%98%E5%82%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%80%E6%9C%89%E8%80%85%E3%80%82%E4%B9%9F%E6%98%AF%E9%BB%98%E8%AE%A4%E6%9D%83%E9%99%90%E6%A8%A1%E5%BC%8F%E3%80%82%5Cn%5Cn--AUTHID%20CURRENT_USER%EF%BC%88%E8%B0%83%E7%94%A8%E8%80%85%E6%9D%83%E9%99%90%EF%BC%89%EF%BC%9A%E6%8C%87%E6%8B%A5%E6%9C%89%E5%BD%93%E5%89%8D%E4%BC%9A%E8%AF%9D%E6%9D%83%E9%99%90%E7%9A%84%E6%A8%A1%E5%BC%8F%EF%BC%8C%E8%BF%99%E5%8F%AF%E8%83%BD%E5%92%8C%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7%E7%9B%B8%E5%90%8C%E6%88%96%E4%B8%8D%E5%90%8C(alter%20session%20set%20current_schema%20%E5%8F%AF%E4%BB%A5%E6%94%B9%E5%8F%98%E8%B0%83%E7%94%A8%E8%80%85Schema)create%20or%20replace%20PROCEDURE%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%90%8D%E7%A7%B0%5Cn%5CnAuthid%20Current_User%5Cn%5CnIS%20%5Cn%5CnBEGIN%5Cn%5Cn%20%5Cn%5Cn%E2%80%A6%E2%80%A6%EF%BC%9B%5Cn%5CnEND%3B%5Cn%5Cn%20%22%2C%22id%22%3A%22zJCRa%22%7D\"></card><p><br /></p><h4 id=\"618d4aaf\"><strong><strong>Database link 数据库链接</strong></strong></h4><p><span class=\"lake-fontsize-10\">即在需要在两个不同的数据库中连接表或者查询数据时，可创建数据库链接</span></p><h5 id=\"481feccf\"><strong><strong>如何使用</strong></strong></h5><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22--user_tables%20%E6%98%AFDBLINK_test%E6%89%80%E9%93%BE%E6%8E%A5%E7%9A%84%E7%94%A8%E6%88%B7%E7%9A%84%E8%A1%A8%5Cn%5Cnselect%20*%20from%20user_tables%40DBLINK_test%3B%5Cn%5Cn--%E9%93%BE%E6%8E%A5%E5%8F%AF%E4%BB%A5%E6%96%B9%E4%BE%BF%E4%BA%8E%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E7%94%A8%E6%88%B7%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%EF%BC%8C%E9%9D%9E%E5%B8%B8%E6%96%B9%E4%BE%BF%2Cmytable%20%E6%98%AF%E4%BD%A0%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7%E7%9A%84%E8%A1%A8%5Cn%5Cnselect%20*%20from%20user_tables%40DBLINK_test%20t%2Cmytable%20t2%20where%20t2.id%3Dt.id%3B%22%2C%22id%22%3A%22VnyE6%22%7D\"></card><p><br /></p><h5 id=\"ea6f3b87-2\"><strong><strong>参考链接</strong></strong></h5><p><span><a href=\"#best-answer-746405041\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">oracle中的database link如何使用——百度经验@wangzhiqing999</span></a></span></p><h5 id=\"345cd1b6\"><strong><strong>oracle sql创建</strong></strong></h5><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%5Cn--%20Drop%20existing%20old%20%20database%20link%20--DBLINK_test%E6%98%AFdatabase%20link%E7%9A%84%E5%90%8D%E7%A7%B0drop%20database%20link%20DBLINK_test%3B--%20Create%20new%20database%20link%20--%20other_db%20%E4%B8%BA%E7%94%A8%E6%88%B7%E5%90%8D%20pwd%E4%B8%BA%E5%AF%86%E7%A0%81create%20database%20link%20DBLINK_test%5Cn%5Cn%20%20connect%20to%20other_db%20IDENTIFIED%20BY%20%20pwd%5Cn%5Cn%20%20using%20'(DESCRIPTION%20%3D%5Cn%5Cn(ADDRESS_LIST%20%3D%5Cn%5Cn(ADDRESS%20%3D%20(PROTOCOL%20%3D%20TCP)(HOST%20%3D%20127.0.0.1)(PORT%20%3D%201521))%5Cn%5Cn)%5Cn%5Cn(CONNECT_DATA%20%3D%5Cn%5Cn(SERVICE_NAME%20%3D%20orcl)%5Cn%5Cn)%5Cn%5Cn)'%3B--%E6%9F%A5%E8%AF%A2%20database%20link%20select%20*%20from%20dba_db_links%3B%22%2C%22id%22%3A%22fMHhY%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">如果创建全局dblink，必须使用systm或sys用户，在database前加public</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22create%20%20public%20%20database%20link%20DBLINK_test%5Cn%5Cn%20%20connect%20to%20other_db%20IDENTIFIED%20BY%20%20pwd%5Cn%5Cn%20%20using%20'(DESCRIPTION%20%3D%5Cn%5Cn(ADDRESS_LIST%20%3D%5Cn%5Cn(ADDRESS%20%3D%20(PROTOCOL%20%3D%20TCP)(HOST%20%3D%20127.0.0.1)(PORT%20%3D%201521))%5Cn%5Cn)%5Cn%5Cn(CONNECT_DATA%20%3D%5Cn%5Cn(SERVICE_NAME%20%3D%20orcl)%5Cn%5Cn)%5Cn%5Cn)'%3B%22%2C%22id%22%3A%22SBn0H%22%7D\"></card><p><br /></p><h5 id=\"5f005e3c\"><strong><strong>通过plsql创建</strong></strong></h5><p style=\"text-align: center;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550118003862-eccf0b6e-7132-4106-aa23-e2b350ce0b5b.png%22%2C%22originWidth%22%3A327%2C%22originHeight%22%3A408%2C%22name%22%3A%22image.png%22%2C%22size%22%3A22765%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A327%2C%22height%22%3A408%7D\"></card><span class=\"lake-fontsize-12\"> </span></p><p style=\"text-align: center;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550118072979-b08dec8d-fd6a-4d8f-99cc-50fbc1e4e75c.png%22%2C%22originWidth%22%3A971%2C%22originHeight%22%3A376%2C%22name%22%3A%22image.png%22%2C%22size%22%3A30163%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A971%2C%22height%22%3A376%7D\"></card><span class=\"lake-fontsize-12\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h2 id=\"146704a5\"><strong><strong>常用函数及sql实例</strong></strong></h2><h3 id=\"ea6f3b87-3\"><strong><strong>参考链接</strong></strong></h3><p><span><a href=\"http://www.cnblogs.com/harvey888/p/5957656.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle中replace函数的使用</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://zhidao.baidu.com/question/14756835.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle round函数是什么意思?怎么运用?</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://zhidao.baidu.com/question/552089573.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">oracle的nvl</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://www.cnblogs.com/vinsonLu/p/3512526.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle 中 decode 函数用法</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://www.cnblogs.com/gaojing/archive/2008/11/07/1328657.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">[oracle] to_date() 与 to_char() 日期和字符串转换</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"http://blog.csdn.net/ziwen00/article/details/8685858\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle的Cast的用法</span></a></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span><a href=\"https://www.cnblogs.com/wangfuyou/p/6605166.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">Oracle 大小写转换函数——博客园@Twang</span></a></span></p><h3 id=\"ca48b68b\"><strong><strong>常用函数</strong></strong></h3><h4 id=\"2a18f8a8\"><strong><strong>判断是否为数字</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%23%20%E6%B3%A8%E6%84%8F%E5%8F%AA%E8%83%BD%E5%88%A4%E6%96%AD%E7%BA%AF%E6%95%B0%E5%AD%97%EF%BC%8C%E4%B8%8D%E5%B8%A6%E5%B0%8F%E6%95%B0%2C%E5%88%A4%E6%96%AD%E5%B8%A6%E5%B0%8F%E6%95%B0%E6%96%B9%E5%BC%8F%E8%AF%B7%E6%9F%A5%E7%9C%8B%E4%B8%8B%E6%96%87%E2%80%9C%E5%B8%B8%E7%94%A8sql%E2%80%9D%E5%88%9B%E5%BB%BA%E5%87%BD%E6%95%B0%5Cn%5CnSELECT%20nvl2(translate('123'%2C'%2F1234567890'%2C'%2F')%2C'CHAR'%2C'NUMBER')%20%20%20%5Cn%5CnFROM%20%20%20dual%20%3B%22%2C%22id%22%3A%22wVXVt%22%7D\"></card><p><br /></p><h4 id=\"da5a6765\"><strong><strong>add_months()日期增加，以月为单位</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22add_months(sysdate%2C12)--%E5%A2%9E%E5%8A%A0%E4%B8%80%E5%B9%B4%5Cn%5Cnadd_months(sysdate%2C-12)--%E5%87%8F%E5%8E%BB%E4%B8%80%E5%B9%B4%5Cn%5Cnsysdate%2B1%20--%E5%8A%A0%E4%B8%80%E5%A4%A9%22%2C%22id%22%3A%227tci7%22%7D\"></card><p><br /></p><h4 id=\"c79a4a1b\"><strong><strong>to_date()</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22to_date(%5C%22%E8%A6%81%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%5C%22%2C%5C%22%E8%BD%AC%E6%8D%A2%E7%9A%84%E6%A0%BC%E5%BC%8F%5C%22)%5Cn%5Cnto_date(t.access_date%2C'yyyy-mm-dd%20hh24%3Ami%3Ass')--2005-12-25%2013%3A25%3A59%5Cn%5CnTO_DATE('17-DEC-1980'%2C%20'DD-MON-YYYY'%2C'NLS_DATE_LANGUAGE%3DAmerican')--%E6%97%A5%E6%9C%9F%E8%AF%AD%E8%A8%80%22%2C%22id%22%3A%22ALiJM%22%7D\"></card><p><br /></p><h4 id=\"b0a57818\"><strong><strong>replace替换字符</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22replace(%E5%8E%9F%E5%AD%97%E6%AE%B5%EF%BC%8C'%E5%8E%9F%E5%AD%97%E6%AE%B5%E6%97%A7%E5%86%85%E5%AE%B9'%2C'%E5%8E%9F%E5%AD%97%E6%AE%B5%E6%96%B0%E5%86%85%E5%AE%B9')--%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%22%2C%22id%22%3A%22qEpID%22%7D\"></card><p><br /></p><h4 id=\"fecd35a6\"><strong><strong>round四舍五入</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%60round(number)%60%60round(number%2C%20decimal_places%20)%60%5Cn%5Cn%20%5Cn%5Cnnumber%20---%E9%9C%80%E8%A6%81%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E7%9A%84%E6%95%B0%E5%AD%97%5Cn%5Cndecimal_places%20---%E4%BB%8E%E5%93%AA%E9%87%8C%E5%BC%80%E5%A7%8B%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%EF%BC%8C%E6%AD%A4%E5%8F%82%E6%95%B0%E6%98%AF%E4%B8%8B%E6%A0%87%EF%BC%8C%E9%A2%84%E8%AE%BE%E4%B8%BA0%5Cn%5Cn%20%5Cn%5Cnselect%20round(123.456%2C%200)%20from%20dual%3B%20%20%20%20%20---%20123%20%22%2C%22id%22%3A%22PK3uo%22%7D\"></card><p><br /></p><h4 id=\"2510b668\"><strong><strong>nvl如果为空返回新值</strong></strong></h4><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\"> </span></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22nvl(%E5%AD%97%E6%AE%B5%E5%90%8D%EF%BC%8C'%E6%96%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E7%9A%84%E5%80%BC')%5Cn%5Cn%E5%A6%82%E6%9E%9C%E6%8F%90%E4%BE%9B%E7%9A%84%E5%AD%97%E6%AE%B5%E7%9A%84%E5%80%BC%E4%B8%BA%E7%A9%BA%EF%BC%8C%E5%88%99%E5%B0%86%E8%BF%94%E5%9B%9E%E8%BF%99%E4%B8%AA%E6%96%B0%E5%80%BC%EF%BC%8C%E6%B3%A8%E6%84%8F%EF%BC%9A%E5%8F%AA%E6%98%AF%E8%BF%94%E5%9B%9E%E4%BA%86%E8%BF%99%E4%B8%AA%E5%80%BC%EF%BC%8C%E5%B9%B6%E4%B8%8D%E6%98%AFupdate%E5%88%B0%E8%A1%A8%E4%B8%AD%5Cn%5Cn%20%5Cn%5Cn%20nvl(name%2C'%E5%B0%8F%E6%98%8E')---name%E4%B8%BA%E7%A9%BA%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%B0%8F%E6%98%8E%22%2C%22id%22%3A%226MQoh%22%7D\"></card><p><br /></p><h4 id=\"d623ee97\"><strong><strong>decode逻辑判断简化</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22decode(%E6%9D%A1%E4%BB%B6%2C%E5%80%BC1%2C%E8%BF%94%E5%9B%9E%E5%80%BC1%2C%E5%80%BC2%2C%E8%BF%94%E5%9B%9E%E5%80%BC2%2C...%E5%80%BCn%2C%E8%BF%94%E5%9B%9E%E5%80%BCn%2C%E7%BC%BA%E7%9C%81%E5%80%BC)%5Cn%5Cn%20%5Cn%5Cn%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E5%90%AB%E4%B9%89%E5%A6%82%E4%B8%8B%EF%BC%9AIF%20%E6%9D%A1%E4%BB%B6%3D%E5%80%BC1%20THEN%5Cn%5Cn%E3%80%80%E3%80%80%E3%80%80%E3%80%80RETURN(%E7%BF%BB%E8%AF%91%E5%80%BC1)%5Cn%5CnELSIF%20%E6%9D%A1%E4%BB%B6%3D%E5%80%BC2%20THEN%5Cn%5Cn%E3%80%80%E3%80%80%E3%80%80%E3%80%80RETURN(%E7%BF%BB%E8%AF%91%E5%80%BC2)%5Cn%5Cn%E3%80%80%E3%80%80%E3%80%80%E3%80%80......%5Cn%5CnELSIF%20%E6%9D%A1%E4%BB%B6%3D%E5%80%BCn%20THEN%5Cn%5Cn%E3%80%80%E3%80%80%E3%80%80%E3%80%80RETURN(%E7%BF%BB%E8%AF%91%E5%80%BCn)ELSE%5Cn%5Cn%E3%80%80%E3%80%80%E3%80%80%E3%80%80RETURN(%E7%BC%BA%E7%9C%81%E5%80%BC)%5Cn%5CnEND%20IF%5Cn%5Cndecode(%E5%AD%97%E6%AE%B5%E6%88%96%E5%AD%97%E6%AE%B5%E7%9A%84%E8%BF%90%E7%AE%97%EF%BC%8C%E5%80%BC1%EF%BC%8C%E5%80%BC2%EF%BC%8C%E5%80%BC3%EF%BC%89%5Cn%5Cn%20%5Cn%5Cn%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E5%90%AB%E4%B9%89%E5%A6%82%E4%B8%8B%EF%BC%9A%5Cn%5Cn%20%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E8%BF%90%E8%A1%8C%E7%9A%84%E7%BB%93%E6%9E%9C%E6%98%AF%EF%BC%8C%E5%BD%93%E5%AD%97%E6%AE%B5%E6%88%96%E5%AD%97%E6%AE%B5%E7%9A%84%E8%BF%90%E7%AE%97%E7%9A%84%E5%80%BC%E7%AD%89%E4%BA%8E%E5%80%BC1%E6%97%B6%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC2%EF%BC%8C%E5%90%A6%E5%88%99%E8%BF%94%E5%9B%9E%E5%80%BC3%5Cn%5Cn%20%E5%BD%93%E7%84%B6%E5%80%BC1%EF%BC%8C%E5%80%BC2%EF%BC%8C%E5%80%BC3%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BD%BF%E5%BE%97%E6%9F%90%E4%BA%9Bsql%E8%AF%AD%E5%8F%A5%E7%AE%80%E5%8D%95%E4%BA%86%E8%AE%B8%E5%A4%9A%5Cn%20%E6%B3%A8%E6%84%8F%EF%BC%9A%E5%80%BC2%E5%92%8C%E5%80%BC3%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%BF%85%E9%A1%BB%E4%B8%80%E8%87%B4%22%2C%22id%22%3A%223rEX0%22%7D\"></card><p><br /></p><p><br /></p><p><br /></p><h4 id=\"4e7db3ce\"><strong><strong>sys_guid()生成唯一32位字符串</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22sys_guid()%22%2C%22id%22%3A%22yuh7n%22%7D\"></card><p><br /></p><h4 id=\"774534e1\"><strong><strong>CAST(expr AS type_name) 数值类型转换</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22--%E4%BE%8B%5Cn%5Cncast(R.MONTH%20as%20int)--%E5%B0%86%E6%9C%88%E4%BB%BD%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E5%9E%8B%E7%B1%BB%E5%9E%8B%22%2C%22id%22%3A%22qRN6r%22%7D\"></card><p><br /></p><h4 id=\"5b106349\"><strong><strong>大小写转换</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22select%20UPPER('Test')%20as%20u%20from%20dual%3B%20--%E8%BD%AC%E5%A4%A7%E5%86%99%5Cn%5Cnselect%20LOWER('Test')%20as%20l%20from%20dual%3B--%E8%BD%AC%E5%B0%8F%E5%86%99%22%2C%22id%22%3A%22uevKY%22%7D\"></card><p><br /></p><h4 id=\"7db7c5f3\"><strong><strong>截取字符串</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22--%E6%88%AA%E5%8F%96%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%87%BA%E7%94%9F%E6%97%A5%E6%9C%9F%5Cn%5Cnto_date(substr('XXXXXXXXXXXXXXXXX'%2C7%2C8)%2C'YYYYMMDD')%22%2C%22id%22%3A%22xXA8A%22%7D\"></card><p><br /></p><h4 id=\"425d8a49\"><strong><strong>删除左右字符、添加左右字符</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22ltrim(%E5%8E%9F%E5%AD%97%E7%AC%A6%2C'%E9%9C%80%E8%A6%81%E5%88%A0%E9%99%A4%E7%9A%84%E5%AD%97%E7%AC%A6')--%E5%88%A0%E9%99%A4%E5%B7%A6%E8%BE%B9%E5%AD%97%E7%AC%A6%5Cn%5Cnrtrim(%E5%8E%9F%E5%AD%97%E7%AC%A6%2C'%E9%9C%80%E8%A6%81%E5%88%A0%E9%99%A4%E7%9A%84%E5%AD%97%E7%AC%A6')--%E5%88%A0%E9%99%A4%E5%8F%B3%E8%BE%B9%E5%AD%97%E7%AC%A6%5Cn%5CnLPAD(%E5%8E%9F%E5%AD%97%E7%AC%A6%2C'%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E5%AD%97%E7%AC%A6')%20--%E6%B7%BB%E5%8A%A0%E5%AD%97%E7%AC%A6%E5%9C%A8%E5%B7%A6%E8%BE%B9%5Cn%5CnRPAD(%E5%8E%9F%E5%AD%97%E7%AC%A6%2C'%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E5%AD%97%E7%AC%A6')%20--%E6%B7%BB%E5%8A%A0%E5%AD%97%E7%AC%A6%E5%9C%A8%E5%8F%B3%E8%BE%B9--%E4%BE%8B%5Cn%5Cnltrim('abcdefg'%2C'abc')--%E5%88%A0%E9%99%A4%E5%B7%A6%E8%BE%B9abc%EF%BC%8C%E8%BE%93%E5%87%BAdefg%5Cn%5Cnltrim('abqwert'%2C'abc')--%E5%88%A0%E9%99%A4%E5%B7%A6%E8%BE%B9ab%EF%BC%8C%E8%BE%93%E5%87%BAqwert%5Cn%5Cn%20%5Cn%5Cn%20%5Cn%5Cn%20%5Cn%5Cn%20%5Cn%5Cn%20%22%2C%22id%22%3A%22rZIr1%22%7D\"></card><p><br /></p><h3 id=\"349ddcfc\"><strong><strong>Sql实例</strong></strong></h3><h4 id=\"89f6884e\"><strong><strong>判断数字</strong></strong><strong><strong>（</strong></strong><strong><strong>创建函数</strong></strong><strong><strong>）</strong></strong></h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22create%20or%20replace%20function%20isNumber(p%20in%20varchar2)return%20number%5Cn%5Cnis%5Cn%5Cnresult%20number%3Bbegin%5Cn%5Cnresult%20%3A%3D%20to_number(p)%3Breturn%201%3B%5Cn%5Cnexceptionwhen%20VALUE_ERROR%20then%20return%200%3Bend%3B%22%2C%22id%22%3A%22Sq6xe%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-10\">导出表结构</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22SELECT%20B.TABLE_NAME%20%20%20%20%20AS%20%5C%22%E8%A1%A8%E5%90%8D%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20C.COMMENTS%20%20%20%20%20%20%20AS%20%5C%22%E8%A1%A8%E8%AF%B4%E6%98%8E%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20B.COLUMN_ID%20%20%20%20%20%20AS%20%5C%22%E5%AD%97%E6%AE%B5%E5%BA%8F%E5%8F%B7%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20B.COLUMN_NAME%20%20%20%20AS%20%5C%22%E5%AD%97%E6%AE%B5%E5%90%8D%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20B.DATA_TYPE%20%20%20%20%20%20AS%20%5C%22%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20B.DATA_LENGTH%20%20%20%20AS%20%5C%22%E6%95%B0%E6%8D%AE%E9%95%BF%E5%BA%A6%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20B.DATA_PRECISION%20AS%20%5C%22%E6%95%B4%E6%95%B0%E4%BD%8D%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20B.DATA_SCALE%20%20%20%20%20AS%20%5C%22%E5%B0%8F%E6%95%B0%E4%BD%8D%5C%22%2C%5Cn%5Cn%20%20%20%20%20%20%20A.COMMENTS%20%20%20%20%20%20%20AS%20%5C%22%E5%AD%97%E6%AE%B5%E8%AF%B4%E6%98%8E%5C%22%5Cn%5Cn%20%20FROM%20ALL_COL_COMMENTS%20A%2C%20ALL_TAB_COLUMNS%20B%2C%20ALL_TAB_COMMENTS%20C%5Cn%5CnWHERE%20A.TABLE_NAME%20IN%20(SELECT%20U.TABLE_NAME%20FROM%20USER_ALL_TABLES%20U)%5Cn%5Cn%20%20%20AND%20A.OWNER%20%3D%20B.OWNER%5Cn%5Cn%20%20%20AND%20A.TABLE_NAME%20%3D%20B.TABLE_NAME%5Cn%5Cn%20%20%20AND%20A.COLUMN_NAME%20%3D%20B.COLUMN_NAME%5Cn%5Cn%20%20%20AND%20C.TABLE_NAME%20%3D%20A.TABLE_NAME%5Cn%5Cn%20%20%20AND%20C.OWNER%20%3D%20A.OWNER%5Cn%5Cn%20%20%20AND%20A.OWNER%20%3D%20'PYE'ORDER%20BY%20A.TABLE_NAME%2C%20B.COLUMN_ID%3B%22%2C%22id%22%3A%22feXLd%22%7D\"></card><p><br /></p><h4 id=\"abcdb7f1\"><strong><strong>修改不符合的时间，修改年份和月份</strong><strong><br /></strong></strong></h4><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">-</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22-%E6%9B%B4%E6%96%B0%E6%9C%89%2F%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%81%E6%9C%89%E4%B8%A4%E4%B8%AA%2F%E7%9A%84%E6%97%A5%E6%9C%9F%E3%80%81%E6%9C%88%E4%BB%BD%E4%B8%BA1%E4%BD%8D%E6%95%B0%E7%9A%84%EF%BC%8C%E6%94%B9%E4%B8%BA%E4%B8%A4%E4%BD%8D%E6%95%B0select%20%20(substr(t.stime%2C1%2C5)%7C%7C'0'%7C%7Csubstr(t.stime%2C6%2Clength(t.stime)))%2Csubstr(t.stime%2C1%2C5)%7C%7C'0'%7C%7Csubstr(t.stime%2C6%2Clength(t.stime))%2C(length(substr(t.stime%2C0%2C7))-length(replace(substr(t.stime%2C0%2C7)%2C'%2F'%2C'')))%2Ct.stime%2Ct.*%2Ct.rowid%20From%20t_test_cc_all_b20181212%20t%20--where%20substr(t.stime%2Clength(t.stime)%2Clength(t.stime)-1)%3D'-'WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'%2F'%2C'')))%3E%3D2%20and%20%20(length(substr(t.stime%2C0%2C7))-length(replace(substr(t.stime%2C0%2C7)%2C'%2F'%2C'')))%3D2%5Cn%5Cnupdate%20%20t_test_cc_all_b20181212%20t%20set%20t.stime%3D(substr(t.stime%2C1%2C5)%7C%7C'0'%7C%7Csubstr(t.stime%2C6%2Clength(t.stime)))%20--where%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%20%3D1WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'%2F'%2C'')))%3E%3D2%20and%20%20(length(substr(t.stime%2C0%2C7))-length(replace(substr(t.stime%2C0%2C7)%2C'%2F'%2C'')))%3D2%5Cn%5Cn--%E6%9B%B4%E6%96%B0%E6%9C%89%2F%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%81%E6%9C%89%E4%B8%A4%E4%B8%AA%2F%E7%9A%84%E6%97%A5%E6%9C%9F%E3%80%81%E5%B9%B4%E4%BB%BD%E4%B8%BA1%E4%BD%8D%E6%95%B0%E7%9A%84%EF%BC%8C%E6%94%B9%E4%B8%BA%E4%B8%A4%E4%BD%8D%E6%95%B0select%20(substr(t.stime%2C1%2Clength(t.stime)-1)%7C%7C'0'%7C%7C%20substr(t.stime%2Clength(t.stime)%2C1))%2C%20t.stime%2Ct.*%2Ct.rowid%20From%20t_test_cc_all_b20181212%20t%20--where%20substr(t.stime%2Clength(t.stime)%2Clength(t.stime)-1)%3D'-'WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'%2F'%2C'')))%3E%3D2%20and%20%20%20(length(substr(t.stime%2Clength(t.stime)-1%2C2))-length(replace(substr(t.stime%2Clength(t.stime)-1%2C2)%2C'%2F'%2C'')))%3D1%5Cn%5Cnupdate%20%20t_test_cc_all_b20181212%20t%20set%20t.stime%3D(substr(t.stime%2C1%2Clength(t.stime)-1)%7C%7C'0'%7C%7C%20substr(t.stime%2Clength(t.stime)%2C1))%20--where%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%20%3D1WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'%2F'%2C'')))%3E%3D2%20and%20%20%20(length(substr(t.stime%2Clength(t.stime)-1%2C2))-length(replace(substr(t.stime%2Clength(t.stime)-1%2C2)%2C'%2F'%2C'')))%3D1%5Cn%5Cn%20%5Cn%5Cn--%E6%9B%B4%E6%96%B0%E6%9C%89%2F%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%81%E6%9C%89%E4%B8%A4%E4%B8%AA-%E7%9A%84%E6%97%A5%E6%9C%9F%E3%80%81%E6%9C%88%E4%BB%BD%E4%B8%BA1%E4%BD%8D%E6%95%B0%E7%9A%84%EF%BC%8C%E6%94%B9%E4%B8%BA%E4%B8%A4%E4%BD%8D%E6%95%B0select%20%20(substr(t.stime%2C1%2C5)%7C%7C'0'%7C%7Csubstr(t.stime%2C6%2Clength(t.stime)))%2Ct.stime%2Ct.*%2Ct.rowid%20From%20t_test_cc_all_b20181212%20t%20--where%20substr(t.stime%2Clength(t.stime)%2Clength(t.stime)-1)%3D'-'WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%3E%3D2%20and%20%20(length(substr(t.stime%2C0%2C7))-length(replace(substr(t.stime%2C0%2C7)%2C'-'%2C'')))%3D2%5Cn%5Cnupdate%20%20t_test_cc_all_b20181212%20t%20set%20t.stime%3D(substr(t.stime%2C1%2C5)%7C%7C'0'%7C%7Csubstr(t.stime%2C6%2Clength(t.stime)))%20--where%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%20%3D1WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%3E%3D2%20and%20%20(length(substr(t.stime%2C0%2C7))-length(replace(substr(t.stime%2C0%2C7)%2C'-'%2C'')))%3D2%5Cn%5Cn--%E6%9B%B4%E6%96%B0%E6%9C%89-%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%81%E6%9C%89%E4%B8%A4%E4%B8%AA-%E7%9A%84%E6%97%A5%E6%9C%9F%E3%80%81%E5%B9%B4%E4%BB%BD%E4%B8%BA1%E4%BD%8D%E6%95%B0%E7%9A%84%EF%BC%8C%E6%94%B9%E4%B8%BA%E4%B8%A4%E4%BD%8D%E6%95%B0select%20(substr(t.stime%2C1%2Clength(t.stime)-1)%7C%7C'0'%7C%7C%20substr(t.stime%2Clength(t.stime)%2C1))%2C%20t.stime%2Ct.*%2Ct.rowid%20From%20t_test_cc_all_b20181212%20t%20--where%20substr(t.stime%2Clength(t.stime)%2Clength(t.stime)-1)%3D'-'WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%3E%3D2%20and%20%20%20(length(substr(t.stime%2Clength(t.stime)-1%2C2))-length(replace(substr(t.stime%2Clength(t.stime)-1%2C2)%2C'-'%2C'')))%3D1%5Cn%5Cnupdate%20%20t_test_cc_all_b20181212%20t%20set%20t.stime%3D(substr(t.stime%2C1%2Clength(t.stime)-1)%7C%7C'0'%7C%7C%20substr(t.stime%2Clength(t.stime)%2C1))%20--where%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%20%3D1WHERE%20length(t.stime)%3C10%20and%20%20(length(t.stime)-length(replace(t.stime%2C'-'%2C'')))%3E%3D2%20and%20%20%20(length(substr(t.stime%2Clength(t.stime)-1%2C2))-length(replace(substr(t.stime%2Clength(t.stime)-1%2C2)%2C'-'%2C'')))%3D1%5Cn%5Cn%20%5Cn%5Cn%20%22%2C%22id%22%3A%22tr9ts%22%7D\"></card><p><br /></p><h4 id=\"37a3a350\">查看所有表空间及容量</h4><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22SELECT%20DBF.TABLESPACE_NAME%2C%5Cn%20%20%20%20%20%20%20DBF.TOTALSPACE%20%5C%22%E6%80%BB%E9%87%8F(M)%5C%22%2C%5Cn%20%20%20%20%20%20%20DBF.TOTALBLOCKS%20AS%20%E6%80%BB%E5%9D%97%E6%95%B0%2C%5Cn%20%20%20%20%20%20%20DBF.TOTALSPACE-DFS.FREESPACE%20%5C%22%E4%BD%BF%E7%94%A8%E9%87%8F(M)%5C%22%2C%5Cn%20%20%20%20%20%20%20DBF.TOTALBLOCKS-DFS.FREEBLOCKS%20AS%20%E4%BD%BF%E7%94%A8%E5%9D%97%E6%95%B0%2C%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20DFS.FREESPACE%20%5C%22%E5%89%A9%E4%BD%99%E6%80%BB%E9%87%8F(M)%5C%22%2C%5Cn%20%20%20%20%20%20%20DFS.FREEBLOCKS%20%5C%22%E5%89%A9%E4%BD%99%E5%9D%97%E6%95%B0%5C%22%2C%5Cn%20%20%20%20%20%20%20(DFS.FREESPACE%20%2F%20DBF.TOTALSPACE)%20*%20100%20%5C%22%E7%A9%BA%E9%97%B2%E6%AF%94%E4%BE%8B%5C%22%5Cn%20%20FROM%20(SELECT%20T.TABLESPACE_NAME%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20SUM(T.BYTES)%20%2F%201024%20%2F%201024%20TOTALSPACE%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20SUM(T.BLOCKS)%20TOTALBLOCKS%5Cn%20%20%20%20%20%20%20%20%20%20FROM%20DBA_DATA_FILES%20T%5Cn%20%20%20%20%20%20%20%20%20GROUP%20BY%20T.TABLESPACE_NAME)%20DBF%2C%5Cn%20%20%20%20%20%20%20(SELECT%20TT.TABLESPACE_NAME%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20SUM(TT.BYTES)%20%2F%201024%20%2F%201024%20FREESPACE%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20SUM(TT.BLOCKS)%20FREEBLOCKS%5Cn%20%20%20%20%20%20%20%20%20%20FROM%20DBA_FREE_SPACE%20TT%5Cn%20%20%20%20%20%20%20%20%20GROUP%20BY%20TT.TABLESPACE_NAME)%20DFS%5Cn%20WHERE%20TRIM(DBF.TABLESPACE_NAME)%20%3D%20TRIM(DFS.TABLESPACE_NAME)%3B%22%2C%22id%22%3A%225g2HJ%22%7D\"></card><p><br /></p><h4 id=\"c60f6138\">oracle表空间不足时处理</h4><p><span>表空间数据文件最大是32G，也就是说扩容最大为32G </span></p><h5 id=\"e7a0542d\">参考链接： </h5><p><a href=\"https://blog.csdn.net/love_java_cc/article/details/52857363\" target=\"_blank\">oracle 11g 导入数据库，表空间超过32G的解决办法——CSDN@冷静cc</a>  <br /><a href=\"https://jingyan.baidu.com/article/48b37f8d6ca1eb1a646488dc.html\" target=\"_blank\">oracle 表空间不足解决办法大全——百度经验@javababy5</a></p><p><br /></p><h5 id=\"b7cc6308\">第一，可能表空间还未达到最大扩容内存，但未设置自动扩容</h5><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22--%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E5%86%85%E5%AD%9850m%E4%B8%BA%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%86%85%E5%AD%98%E5%A4%A7%E5%B0%8F%5Cnalter%20database%20datafile%20'D%3A%5C%5CORACLE%5C%5CPRODUCT%5C%5CORADATA%5C%5CTEST%5C%5CUSERS01.DBF'%20resize%2050m%3B%5Cn--%E5%A2%9E%E5%8A%A0%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E6%89%A9%E5%AE%B9%E5%8A%9F%E8%83%BD%2C%E6%AF%8F%E6%AC%A1%E6%89%A9%E5%AE%B9%E4%B8%BA50m%EF%BC%8C%E6%9C%80%E5%A4%A7%E4%B8%8D%E4%BC%9A%E8%B6%85%E8%BF%8732G%5Cnalterdatabase%20datafile%20'D%3A%5C%5CORACLE%5C%5CPRODUCT%5C%5CORADATA%5C%5CTEST%5C%5CUSERS01.DBF'%20autoextend%20onnext%2050m%20maxsize%2032767m%3B%20%22%2C%22id%22%3A%22YCPCD%22%7D\"></card><h5 id=\"e3470cfa\">第二，表空间数据文件已经达到32G，则可以通过增加数据文件方式</h5><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22--USERS%E6%98%AF%E4%BD%A0%E7%9A%84%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D%EF%BC%8CH%3A%5C%5CIDE%5C%5Coracle%5C%5Coradata%5C%5Corcl%5C%5CUSERS02.dbf%E5%8F%AF%E4%BB%A5%E6%94%B9%E4%B8%BA%E4%BD%A0%E7%9A%84%E4%BB%BB%E6%84%8F%E5%9C%B0%E5%9D%80%EF%BC%8C%E6%9C%80%E5%A5%BD%E6%94%BE%E5%9C%A8%E4%B8%80%E8%B5%B7%E6%96%B9%E4%BE%BF%EF%BC%8C%5Cn--%E6%AF%8F%E6%AC%A1%E6%89%A9%E5%AE%B950m%EF%BC%8C%E6%9C%80%E5%A4%A732G%5Cnalter%20tablespace%20USERS%20%20%5Cnadd%20datafile%20'H%3A%5C%5CIDE%5C%5Coracle%5C%5Coradata%5C%5Corcl%5C%5CUSERS02.dbf'%20size%2050m%20%5Cnautoextend%20on%20next%2050m%20maxsize%2032767m%3B%22%2C%22id%22%3A%227bz2W%22%7D\"></card><p><br /></p><p><br /></p><h2 id=\"5dc99f6e\"><strong><strong>问题</strong></strong></h2><h3 id=\"122f6443\"><strong><strong>oracle之违反唯一约束条件</strong></strong></h3><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">出现这个原因，除了自己手动新增ID的情况外，还有就是引用自己创建的sequance，导入新表数据后，没有将新的sequance导入进来，可以将新sequance导入进来，也可以自动手动修改</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550118277133-fbbfbc99-569b-4a1e-ad5a-cf655ef6f786.png%22%2C%22originWidth%22%3A822%2C%22originHeight%22%3A199%2C%22name%22%3A%22image.png%22%2C%22size%22%3A21888%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A822%2C%22height%22%3A199%7D\"></card><span class=\"lake-fontsize-10\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"e2d3e6c0\"><strong><strong>修改字符集</strong></strong></h3><h4 id=\"ea6f3b87-4\"><strong><strong>参考链接</strong></strong></h4><p><span><a href=\"https://link.jianshu.com/?t=https://zhidao.baidu.com/question/134444813.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">如何改oracle AL16UTF16为AL32UTF8——百度知道</span></a></span></p><p><span><a href=\"https://link.jianshu.com/?t=http://www.itpub.net/thread-505857-1-1.html%23pid3728655\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">建库时AL16UTF16字符集怎么设置？——出处: ITPUB论坛－中国最专业的IT技术社区</span></a></span></p><p><strong><strong>操作：</strong></strong></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22Microsoft%20Windows%20%5B%E7%89%88%E6%9C%AC%206.1.7601%5D%5Cn%5Cn%E7%89%88%E6%9D%83%E6%89%80%E6%9C%89%20(c)%202009%20Microsoft%20Corporation%E3%80%82%E4%BF%9D%E7%95%99%E6%89%80%E6%9C%89%E6%9D%83%E5%88%A9%E3%80%82%5Cn%5Cn%20%5Cn%5CnC%3A%5C%5CUsers%5C%5CAdministrator%3Esqlplus%20%2F%20as%20sysdba%5Cn%5Cn%20%5Cn%5CnSQL*Plus%3A%20Release%2011.2.0.1.0%20Production%20on%20%E6%98%9F%E6%9C%9F%E5%9B%9B%201%E6%9C%88%2011%2012%3A00%3A49%202018%5Cn%5Cn%20%5Cn%5CnCopyright%20(c)%201982%2C%202010%2C%20Oracle.%20%20All%20rights%20reserved.%5Cn%5Cn%20%5Cn%5Cn%20%5Cn%5Cn%E8%BF%9E%E6%8E%A5%E5%88%B0%3A%5Cn%5CnOracle%20Database%2011g%20Enterprise%20Edition%20Release%2011.2.0.1.0%20-%2064bit%20Production%5Cn%5CnWith%20the%20Partitioning%2C%20OLAP%2C%20Data%20Mining%20and%20Real%20Application%20Testing%20options%5Cn%5Cn%20%5Cn%5CnSQL%3E%20shutdown%20immediate%5Cn%5Cn%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E3%80%82%5Cn%5Cn%E5%B7%B2%E7%BB%8F%E5%8D%B8%E8%BD%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%82%5Cn%5CnORACLE%20%E4%BE%8B%E7%A8%8B%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E3%80%82%5Cn%5CnSQL%3E%20startup%20mount%5Cn%5CnORACLE%20%E4%BE%8B%E7%A8%8B%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8%E3%80%82%5Cn%5Cn%20%5Cn%5CnTotal%20System%20Global%20Area%203290345472%20bytes%5Cn%5CnFixed%20Size%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%202180224%20bytes%5Cn%5CnVariable%20Size%20%20%20%20%20%20%20%20%20%20%20%202164263808%20bytes%5Cn%5CnDatabase%20Buffers%20%20%20%20%20%20%20%20%201107296256%20bytes%5Cn%5CnRedo%20Buffers%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2016605184%20bytes%5Cn%5Cn%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A3%85%E8%BD%BD%E5%AE%8C%E6%AF%95%E3%80%82%5Cn%5CnSQL%3E%20ALTER%20SYSTEM%20ENABLE%20RESTRICTED%20SESSION%3B%5Cn%5Cn%20%5Cn%5Cn%E7%B3%BB%E7%BB%9F%E5%B7%B2%E6%9B%B4%E6%94%B9%E3%80%82%5Cn%5Cn%20%5Cn%5CnSQL%3E%20ALTER%20SYSTEM%20SET%20JOB_QUEUE_PROCESSES%3D0%3B%5Cn%5Cn%20%5Cn%5Cn%E7%B3%BB%E7%BB%9F%E5%B7%B2%E6%9B%B4%E6%94%B9%E3%80%82%5Cn%5Cn%20%5Cn%5CnSQL%3E%20ALTER%20SYSTEM%20SET%20AQ_TM_PROCESSES%3D0%3B%5Cn%5Cn%20%5Cn%5Cn%E7%B3%BB%E7%BB%9F%E5%B7%B2%E6%9B%B4%E6%94%B9%E3%80%82%5Cn%5Cn%20%5Cn%5CnSQL%3E%20ALTER%20DATABASE%20OPEN%3B%5Cn%5Cn%20%5Cn%5Cn%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%B2%E6%9B%B4%E6%94%B9%E3%80%82%5Cn%5Cn%20%5Cn%5CnSQL%3E%20ALTER%20DATABASE%20CHARACTER%20SET%20AL32UTF8%3B%5Cn%5CnALTER%20DATABASE%20CHARACTER%20SET%20AL32UTF8%5Cn%5Cn*%5Cn%5Cn%E7%AC%AC%201%20%E8%A1%8C%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%3A%5Cn%5CnORA-12712%3A%20%E6%96%B0%E5%AD%97%E7%AC%A6%E9%9B%86%E5%BF%85%E9%A1%BB%E4%B8%BA%E6%97%A7%E5%AD%97%E7%AC%A6%E9%9B%86%E7%9A%84%E8%B6%85%E9%9B%86%5Cn%5Cn%20%5Cn%5Cn%20%5Cn%5CnSQL%3E%20ALTER%20DATABASE%20CHARACTER%20SET%20AL16UTF16%3B%5Cn%5CnALTER%20DATABASE%20CHARACTER%20SET%20AL16UTF16%5Cn%5Cn*%5Cn%5Cn%E7%AC%AC%201%20%E8%A1%8C%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%3A%5Cn%5CnORA-12712%3A%20%E6%96%B0%E5%AD%97%E7%AC%A6%E9%9B%86%E5%BF%85%E9%A1%BB%E4%B8%BA%E6%97%A7%E5%AD%97%E7%AC%A6%E9%9B%86%E7%9A%84%E8%B6%85%E9%9B%86%23%20ALTER%20DATABASE%20national%20CHARACTER%20SET%20AL16UTF16%3B%5Cn%5Cn%20%5Cn%5CnSQL%3E%20ALTER%20DATABASE%20character%20set%20INTERNAL_USE%20AL32UTF8%3B%5Cn%5Cn%20%5Cn%5Cn%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%B2%E6%9B%B4%E6%94%B9%E3%80%82%5Cn%5Cn%20%5Cn%5CnSQL%3E%20SHUTDOWN%20IMMEDIATE%3B%5Cn%5Cn%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E3%80%82%5Cn%5Cn%E5%B7%B2%E7%BB%8F%E5%8D%B8%E8%BD%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%82%5Cn%5CnORACLE%20%E4%BE%8B%E7%A8%8B%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E3%80%82%5Cn%5CnSQL%3E%20STARTUP%5Cn%5CnORACLE%20%E4%BE%8B%E7%A8%8B%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8%E3%80%82%5Cn%5Cn%20%5Cn%5CnTotal%20System%20Global%20Area%203290345472%20bytes%5Cn%5CnFixed%20Size%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%202180224%20bytes%5Cn%5CnVariable%20Size%20%20%20%20%20%20%20%20%20%20%20%202164263808%20bytes%5Cn%5CnDatabase%20Buffers%20%20%20%20%20%20%20%20%201107296256%20bytes%5Cn%5CnRedo%20Buffers%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2016605184%20bytes%5Cn%5Cn%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A3%85%E8%BD%BD%E5%AE%8C%E6%AF%95%E3%80%82%5Cn%5Cn%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%B2%E7%BB%8F%E6%89%93%E5%BC%80%E3%80%82%5Cn%5CnSQL%3E%22%2C%22id%22%3A%22kXWft%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">ALTER DATABASE character set INTERNAL_USE AL32UTF8;</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">INTERNAL_USE</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">有点像是强制修改，其他用户角色可能会报错</span></p><h4 id=\"bf52b411\"><strong><strong>其他问题</strong></strong></h4><h5 id=\"3e2e31b2\"><strong><strong>AL16UTF16不能作为character set</strong></strong></h5><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">AL16UTF16 不能用做数据库的character set，只能用做national character set 。</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">character set必须是single byte 7-bit ASCII或是单字节EBCDIC的子集，因此fixed width的多字节字符集(AL16UTF16)就不能做为character set。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">你可以用如下这样用的：</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22CHARACTER%20SET%20US7ASCII%20NATIONAL%20CHARACTER%20SET%20AL16UTF16%5Cn%5Cn%E6%88%96%E6%98%AF%5Cn%5CnCHARACTER%20SET%20zhs16cgb231280%20%20NATIONAL%20CHARACTER%20SET%20AL16UTF16%5Cn%5Cn%20%5Cn%5Cn%20%5Cn%5Cn%20%5Cn%5Cn%20%22%2C%22id%22%3A%22QfxP4%22%7D\"></card><p><br /></p><h3 id=\"46b308ed\"><strong><strong>如何修改服务名service_name</strong></strong></h3><h5 id=\"bd1bf7e7\"><strong><strong>转载链接</strong></strong></h5><p><span><a href=\"https://link.jianshu.com/?t=https://www.2cto.com/kf/201311/259856.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">如何修改 service_name</span></a></span></p><h5 id=\"d48898d5\"><strong><strong>例：</strong></strong></h5><h6 id=\"64162c1b\"><strong><strong>service_name原有环境：</strong></strong></h6><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22sid%EF%BC%9A%20mynewdb%5Cn%5Cnglobal_name%EF%BC%9Amynewdb%5Cn%5Cnservice_names%EF%BC%9A%20MYNEWDB%5Cn%5Cndb_domain%20%20%EF%BC%9A%5Cn%5Cndb_name%EF%BC%9Amynewdb%22%2C%22id%22%3A%22im9VW%22%7D\"></card><p><br /></p><h6 id=\"f0740534\"><strong><strong>需要修改如下：</strong></strong></h6><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22global_name%EF%BC%9Amynewdb%5Cn%5Cnservice_names%EF%BC%9A%20test%5Cn%5Cndb_domain%20%20%EF%BC%9A%5Cn%5Cndb_name%EF%BC%9Amynewdb%22%2C%22id%22%3A%22i66Ox%22%7D\"></card><p><br /></p><h5 id=\"568a025c\"><strong><strong>方法：</strong></strong></h5><p><span class=\"lake-fontsize-10\">服务器端：</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">alter system set service_names='test';</span></p><p><span class=\"lake-fontsize-10\">这里采用静态注册，同时还要修改下 listener.ora</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22SID_LIST_LISTENER%20%3D%5Cn%5Cn%20%20(SID_LIST%20%3D%5Cn%5Cn%20%20%20%20(SID_DESC%20%3D%5Cn%5Cn%20%20%20%20%20%20(SID_NAME%20%3D%20PLSExtProc)%5Cn%5Cn%20%20%20%20%20%20(ORACLE_HOME%20%3D%2Fu01%2Fapp%2Foracle%2Fproduct%2F11.2.0%2Fdbhome_1)%5Cn%5Cn%20%20%20%20%20%20(PROGRAM%20%3D%20extproc)%5Cn%5Cn%20%20%20%20)%5Cn%5Cn%20%20%20%20%20%20%20%20(SID_DESC%3D%5Cn%5Cn%20%20%20%20%20%20%20%20(GLOBAL_DBNAME%20%3D%20mynewdb)%5Cn%5Cn%20%20%20%20%20%20%20%20(ORALCE_HOME%20%3D%20%2Fu01%2Fapp%2Foracle%2Fproduct%2F11.2.0%2Fdbhome_1)%5Cn%5Cn%20%20%20%20%20%20%20%20(SID_NAME%20%3D%20mynewdb)%5Cn%5Cn%20%20%20%20%20%20%20%20)%5Cn%5Cn%20%20%20%20%20%20%20%20(SID_DESC%3D%5Cn%5Cn%20%20%20%20%20%20%20%20(GLOBAL_DBNAME%20%3D%20test)%20%20-------%E8%BF%99%E4%B8%AA%E6%98%AF%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%5Cn%5Cn%20%20%20%20%20%20%20%20(ORALCE_HOME%20%3D%20%2Fu01%2Fapp%2Foracle%2Fproduct%2F11.2.0%2Fdbhome_1)%5Cn%5Cn%20%20%20%20%20%20%20%20(SID_NAME%20%3D%20mynewdb)%20%20%20%20------%E8%BF%99%E4%B8%AA%E8%BF%98%E6%98%AF%E5%8E%9F%E6%9D%A5%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%90%8D%5Cn%5Cn%20%20%20%20%20%20%20%20)%5Cn%5Cn%20%20)%22%2C%22id%22%3A%22GlROm%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">cmd下执行命令</span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">lsnrctl reload</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">查看监听状态</span><span class=\"lake-fontsize-9\" style=\"color: #C7254E;\">lsnrctl status</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">L</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22SNRCTL%3E%5Cn%5CnConnecting%20to%20(DESCRIPTION%3D(ADDRESS%3D(PROTOCOL%3DTCP)(HOST%3D10.80.11.202)(PORT%3D1521)))%5Cn%5CnSTATUS%20of%20the%20LISTENER%5Cn%5Cn------------------------%5Cn%5CnAlias%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20LISTENER%5Cn%5CnVersion%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TNSLSNR%20for%20%5BLinux%5D(https%3A%2F%2Fwww.2cto.com%2Fos%2Flinux%2F)%3A%20Version%2011.2.0.1.0%20-%20Production%5Cn%5CnStart%20Date%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2021-NOV-2013%2000%3A09%3A35%5Cn%5CnUptime%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200%20days%2020%20hr.%2030%20min.%2055%20sec%5Cn%5CnTrace%20Level%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20off%5Cn%5CnSecurity%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ON%3A%20Local%20OS%20Authentication%5Cn%5CnSNMP%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20OFF%5Cn%5CnListener%20Parameter%20File%20%20%20%2Fu01%2Fapp%2Foracle%2Fproduct%2F11.2.0%2Fdbhome_1%2Fnetwork%2Fadmin%2Flistener.ora%5Cn%5CnListener%20Log%20File%20%20%20%20%20%20%20%20%20%2Fu01%2Fapp%2Foracle%2Fdiag%2Ftnslsnr%2Foracle11g%2Flistener%2Falert%2Flog.xml%5Cn%5CnListening%20Endpoints%20Summary...%5Cn%5Cn%20%20(DESCRIPTION%3D(ADDRESS%3D(PROTOCOL%3Dtcp)(HOST%3D10.80.11.202)(PORT%3D1521)))%5Cn%5CnServices%20Summary...%5Cn%5CnService%20%5C%22PLSExtProc%5C%22%20has%201%20instance(s).%5Cn%5Cn%20%20Instance%20%5C%22PLSExtProc%5C%22%2C%20status%20UNKNOWN%2C%20has%201%20handler(s)%20for%20this%20service...%5Cn%5CnService%20%5C%22mynewdb%5C%22%20has%201%20instance(s).%5Cn%5Cn%20%20Instance%20%5C%22mynewdb%5C%22%2C%20status%20UNKNOWN%2C%20has%201%20handler(s)%20for%20this%20service...%5Cn%5CnService%20%5C%22test%5C%22%20has%201%20instance(s).%5Cn%5Cn%20%20Instance%20%5C%22mynewdb%5C%22%2C%20status%20UNKNOWN%2C%20has%201%20handler(s)%20for%20this%20service...%5Cn%5CnThe%20command%20completed%20successfully%22%2C%22id%22%3A%222S23x%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">可以看到新的 Service &quot;test&quot; 已经可以使用了</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">客户端配置：</span></p><p><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">net manager 配置 服务名为 </span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\">test</span><span class=\"lake-fontsize-9\" style=\"color: #FFFFFF;\"> ，ip为数据库服务器主机ip，相应端口。</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">测试连接：</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22SQL%3E%20%20conn%20sys%2Foracle%40test%20as%20sysdba%5Cn%5Cn%E5%B7%B2%E8%BF%9E%E6%8E%A5%E3%80%82%5Cn%5CnSQL%3E%22%2C%22id%22%3A%22eSeWf%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">当然不使用静态注册，动态注册也可以</span></p><p><span class=\"lake-fontsize-10\"> </span></p><h3 id=\"3158f60d\"><strong><strong>警告日志文件</strong></strong></h3><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">不知道日志文件在哪的，可以使用这个命令</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">select value from v$diag_info where name='Diag Trace';</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">以下是我的输出地址</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22SQL%3E%20select%20value%20from%20v%24diag_info%20where%20name%3D'Diag%20Trace'%3B%5Cn%5Cn%20%5Cn%5CnVALUE%5Cn%5Cn--------------------------------------------------------------------------------%5Cn%5CnD%3A%5C%5CFLYINGCLOUD%5C%5Cdiag%5C%5Crdbms%5C%5Codb%5C%5Codb%5C%5Ctrace%5Cn%5Cn%20%5Cn%5Cn%20%22%2C%22id%22%3A%22xWaML%22%7D\"></card><p><br /></p><h2 id=\"9e2e81b7\"><strong><strong>开发工具配置及问题</strong></strong></h2><h3 id=\"Plsql\"><strong><strong>Plsql</strong></strong></h3><h4 id=\"d672874c\"><strong><strong>plsql设置可显示的查询记录条数</strong></strong></h4><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">tools-&gt;prifereces-&gt;window types-&gt;sql window-&gt;records per page</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">查询所有记录</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550118425257-e4d6330a-e5f6-4e7e-932c-fb25cf372fd2.png%22%2C%22originWidth%22%3A564%2C%22originHeight%22%3A591%2C%22name%22%3A%22image.png%22%2C%22size%22%3A92527%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A564%2C%22height%22%3A591%7D\"></card><span class=\"lake-fontsize-12\"> </span></p><h4 id=\"5c094ab1\"><strong><strong>plsql如何查询sql执行计划</strong></strong></h4><p><span><a href=\"https://link.jianshu.com/?t=https://jingyan.baidu.com/article/ab69b270bffc2e2ca7189fee.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">怎么使用plsql查看执行计划</span></a></span></p><p><span class=\"lake-fontsize-10\">执行计划可以用计划sql执行的性能</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">选中需要执行的sql语句，然后按F5，或者直接点击&quot;执行计划&quot;</span></p><h4 id=\"e33957e7\"><strong><strong>PLSQL工具如何远程连接数据库</strong></strong></h4><h5 id=\"ea6f3b87-5\"><strong><strong>参考链接</strong></strong></h5><p><span><a href=\"https://link.jianshu.com/?t=https://zhidao.baidu.com/question/333852172.html\" target=\"_blank\"><span class=\"lake-fontsize-12\" style=\"color: #3194D0;\">如何配置pl/sql 连接远程oracle服务器——百度知道</span></a></span></p><h5 id=\"d7ecf9b4\"><strong><strong>方法1：</strong></strong></h5><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">找到oracle的安装目录。如：C:\\oracle\\product\\10.2.0\\db_1\\network\\ADMIN</span></p><p style=\"text-align: center;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550118449158-f157887f-799b-4b90-a947-2218b90f25ac.png%22%2C%22originWidth%22%3A311%2C%22originHeight%22%3A30%2C%22name%22%3A%22image.png%22%2C%22size%22%3A2681%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A311%2C%22height%22%3A30%7D\"></card><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"> </span></p><p style=\"text-align: center;\"><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">添加如下内容</span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\"><br /></span><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">其中中文部分是需要修改的部分，除第一个“本地实例名”外，其他需要跟远程数据库管理员咨询，本地实例名就是方便自己识别数据库的一个名字，可以自定义。</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%E6%9C%AC%E5%9C%B0%E5%AE%9E%E4%BE%8B%E5%90%8D%20%3D%5Cn%5Cn%20%20(DESCRIPTION%20%3D%5Cn%5Cn%20%20%20%20(ADDRESS%20%3D%20(PROTOCOL%20%3D%20TCP)(HOST%20%3D%20%E8%BF%9C%E7%A8%8B%E6%95%B0%E6%8D%AE%E5%BA%93IP%E5%9C%B0%E5%9D%80)(PORT%20%3D%20%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7))%5Cn%5Cn%20%20%20%20(CONNECT_DATA%20%3D%5Cn%5Cn%20%20%20%20%20%20(SERVER%20%3D%20DEDICATED)%5Cn%5Cn%20%20%20%20%20%20(SERVICE_NAME%20%3D%20%E8%BF%9C%E7%A8%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1%E5%90%8D)%5Cn%5Cn%20%20%20%20)%5Cn%5Cn%20%20)%22%2C%22id%22%3A%22ORUHH%22%7D\"></card><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #2F2F2F;\">然后打开pl/sql就能看到自己创建的链接，如图：</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550118496776-446fbbd8-7f17-4ec9-be0b-219d248b2910.png%22%2C%22originWidth%22%3A392%2C%22originHeight%22%3A204%2C%22name%22%3A%22image.png%22%2C%22size%22%3A17502%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A392%2C%22height%22%3A204%7D\"></card><span class=\"lake-fontsize-12\"> </span></p><p><span class=\"lake-fontsize-12\">方法2：</span></p><p><span class=\"lake-fontsize-12\"> </span></p><p><span class=\"lake-fontsize-10\"> </span></p><h5 id=\"5d64018c\"><strong><strong>方法2：</strong></strong></h5><h6 id=\"ef35ed63\"><strong><strong>格式：</strong></strong></h6><p><span style=\"color: #FF0000;\">ip</span><span>:</span><span style=\"color: #FF0000;\">端口</span><span>/</span><span style=\"color: #FF0000;\">sid</span></p><h6 id=\"614fc656\"><strong><strong>示例：</strong></strong></h6><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1550118525263-c7c6ad21-d3fb-4563-9154-f8bc23c3f375.png%22%2C%22originWidth%22%3A393%2C%22originHeight%22%3A209%2C%22name%22%3A%22image.png%22%2C%22size%22%3A10049%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A393%2C%22height%22%3A209%7D\"></card><span style=\"color: #FF0000;\"> </span></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-05T07:23:20.000Z",
    "deleted_at": null,
    "created_at": "2019-02-14T04:05:59.000Z",
    "updated_at": "2019-05-05T07:23:20.000Z",
    "published_at": "2019-05-05T07:23:20.000Z",
    "first_published_at": "2019-03-03T07:57:51.000Z",
    "word_count": 7172,
    "cover": null,
    "description": "tags: [oracle,数据库]categories: oracleOracle经验 申明本文大部分资料来自《深入理解Oracle 12c数据库管理》，但是也有自己的个人观点，大家也去看这本书简介\tOracle数据库已经是当今世界技术前沿了，因为它优点突出 有以下优点：(1) 拥有其他数据...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1241392,
    "slug": "po6a3y",
    "title": "eclipse之配置hibernate逆向生成映射文件和实体类",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-02-13T03:46:32.000Z",
    "deleted_at": null,
    "created_at": "2019-02-13T03:12:31.000Z",
    "updated_at": "2019-02-13T03:46:32.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "tags: [eclipse,hibernate]categories: 开发工具参考链接eclipse插件DTP——Jenkinseclipse hibernate Tools插件——JBosshibernate Tools插件帮助文档——JBoss&lt;!--more--&gt;正文安装...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1201903,
    "slug": "eqddtq",
    "title": "webhook_test",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-01-29T08:50:43.000Z",
    "deleted_at": null,
    "created_at": "2019-01-29T08:50:15.000Z",
    "updated_at": "2019-01-29T08:50:43.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "test",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1192838,
    "slug": "ta9e6i",
    "title": "mysql之绿色版",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [mysql,数据库]\n\ncategories: mysql\n\n---\n\n\n<a name=\"ea6f3b87\"></a>\n# 参考链接\n[MySQL 5.7.20绿色版安装详细图文教程](https://www.jb51.net/article/129367.htm?utm_medium=referral)  <br />[mysql安装常见问题（系统找不到指定的文件、发生系统错误 1067 进程意外终止）——CSDN@MikanMu](https://blog.csdn.net/mhmyqn/article/details/17043921)  \n\n<a name=\"58378f0d\"></a>\n# 正文\n<a name=\"6b2ff274\"></a>\n## 下载mysql解压版\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548617933737-b535ebc1-0570-447e-aad6-b4be74e0ad46.png#align=left&display=inline&height=488&name=image.png&originHeight=488&originWidth=1026&size=91231&status=done&width=1026)\n\n<!--more-->\n\n<a name=\"bd872cff\"></a>\n## 解压mysql，并在根目录创建my.ini\n\n```shell\n[client]\nport=3306\ndefault-character-set=utf8\n[mysqld] \n# 设置MYSQL安装目录 \nbasedir=D:\\Program Files (x86)\\mysql-5.7.20\n# 设置MYSQL数据目录 \ndatadir=D:\\Program Files (x86)\\mysql-5.7.20\\data\nport=3306\ncharacter_set_server=utf8\nsql_mode=NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER\n#开启查询缓存\nexplicit_defaults_for_timestamp=true\nskip-grant-tables\n```\n<a name=\"914c1a08\"></a>\n## 创建mysql服务\n以管理员身份证运行cmd，输入以下命令，创建mysql服务，并启动\n\n```shell\ncd D:\\Program Files (x86)\\mysql-5.7.20\\bin\nmysqld -install\nnet start mysql\n```\n<a name=\"7fc88aee\"></a>\n## 修改密码\n初次系统是默认用户是root，默认没有密码，以管理员身份证运行cmd，输入以下命令\n\n```\nmysql\n\n```\n\n",
    "body_draft": "",
    "body_html": "<p><span style=\"background-color: transparent;\">tags: [mysql,数据库]</span><br /></p><p>categories: mysql</p><p><br /></p><hr /><p><br /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://www.jb51.net/article/129367.htm?utm_medium=referral\" target=\"_blank\">MySQL 5.7.20绿色版安装详细图文教程</a>  </p><p><a href=\"https://blog.csdn.net/mhmyqn/article/details/17043921\" target=\"_blank\">mysql安装常见问题（系统找不到指定的文件、发生系统错误 1067 进程意外终止）——CSDN@MikanMu</a>  </p><p><br /></p><h1 id=\"58378f0d\">正文</h1><h2 id=\"6b2ff274\">下载mysql解压版</h2><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548617933737-b535ebc1-0570-447e-aad6-b4be74e0ad46.png#align=left&amp;display=inline&amp;height=488&amp;name=image.png&amp;originHeight=488&amp;originWidth=1026&amp;size=91231&amp;status=done&amp;width=1026\" style=\"max-width: 600px; width: 1026px;\" /></p><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><h2 id=\"bd872cff\">解压mysql，并在根目录创建my.ini</h2><p><br /></p><pre data-lang=\"shell\"><code>[client]\nport=3306\ndefault-character-set=utf8\n[mysqld] \n# 设置MYSQL安装目录 \nbasedir=D:\\Program Files (x86)\\mysql-5.7.20\n# 设置MYSQL数据目录 \ndatadir=D:\\Program Files (x86)\\mysql-5.7.20\\data\nport=3306\ncharacter_set_server=utf8\nsql_mode=NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER\n#开启查询缓存\nexplicit_defaults_for_timestamp=true\nskip-grant-tables</code></pre><h2 id=\"914c1a08\">创建mysql服务</h2><p>以管理员身份证运行cmd，输入以下命令，创建mysql服务，并启动</p><p><br /></p><pre data-lang=\"shell\"><code>cd D:\\Program Files (x86)\\mysql-5.7.20\\bin\nmysqld -install\nnet start mysql</code></pre><h2 id=\"7fc88aee\">修改密码</h2><p>初次系统是默认用户是root，默认没有密码，<span>以管理员身份证运行cmd，输入以下命令</span></p><p><br /></p><pre><code>mysql\n</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><p><span style=\"background-color: transparent;\">tags: [mysql,数据库]</span><br /></p><p>categories: mysql</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22YWM0Y%22%7D\"></card><p><br /></p><h1 id=\"ea6f3b87\">参考链接</h1><p><a href=\"https://www.jb51.net/article/129367.htm?utm_medium=referral\" target=\"_blank\">MySQL 5.7.20绿色版安装详细图文教程</a>  </p><p><a href=\"https://blog.csdn.net/mhmyqn/article/details/17043921\" target=\"_blank\">mysql安装常见问题（系统找不到指定的文件、发生系统错误 1067 进程意外终止）——CSDN@MikanMu</a>  </p><p><br /></p><h1 id=\"58378f0d\">正文</h1><h2 id=\"6b2ff274\">下载mysql解压版</h2><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548617933737-b535ebc1-0570-447e-aad6-b4be74e0ad46.png%22%2C%22originWidth%22%3A1026%2C%22originHeight%22%3A488%2C%22name%22%3A%22image.png%22%2C%22size%22%3A91231%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1026%2C%22height%22%3A488%7D\"></card></p><p><br /></p><p>&lt;!--more--&gt;</p><p><br /></p><h2 id=\"bd872cff\">解压mysql，并在根目录创建my.ini</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22%5Bclient%5D%5Cnport%3D3306%5Cndefault-character-set%3Dutf8%5Cn%5Bmysqld%5D%20%5Cn%23%20%E8%AE%BE%E7%BD%AEMYSQL%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95%20%5Cnbasedir%3DD%3A%5C%5CProgram%20Files%20(x86)%5C%5Cmysql-5.7.20%5Cn%23%20%E8%AE%BE%E7%BD%AEMYSQL%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95%20%5Cndatadir%3DD%3A%5C%5CProgram%20Files%20(x86)%5C%5Cmysql-5.7.20%5C%5Cdata%5Cnport%3D3306%5Cncharacter_set_server%3Dutf8%5Cnsql_mode%3DNO_ENGINE_SUBSTITUTION%2CNO_AUTO_CREATE_USER%5Cn%23%E5%BC%80%E5%90%AF%E6%9F%A5%E8%AF%A2%E7%BC%93%E5%AD%98%5Cnexplicit_defaults_for_timestamp%3Dtrue%5Cnskip-grant-tables%22%2C%22id%22%3A%22xqrgl%22%7D\"></card><h2 id=\"914c1a08\">创建mysql服务</h2><p>以管理员身份证运行cmd，输入以下命令，创建mysql服务，并启动</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22cd%20D%3A%5C%5CProgram%20Files%20(x86)%5C%5Cmysql-5.7.20%5C%5Cbin%5Cnmysqld%20-install%5Cnnet%20start%20mysql%22%2C%22id%22%3A%22oYWID%22%7D\"></card><h2 id=\"7fc88aee\">修改密码</h2><p>初次系统是默认用户是root，默认没有密码，<span>以管理员身份证运行cmd，输入以下命令</span></p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22mysql%5Cn%22%2C%22id%22%3A%22ynsek%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-05-05T07:06:56.000Z",
    "deleted_at": null,
    "created_at": "2019-01-27T19:26:51.000Z",
    "updated_at": "2019-07-11T14:54:25.000Z",
    "published_at": "2019-05-05T07:06:56.000Z",
    "first_published_at": "2019-01-27T19:43:17.000Z",
    "word_count": 225,
    "cover": null,
    "description": "tags: [mysql,数据库]categories: mysql参考链接MySQL 5.7.20绿色版安装详细图文教程  mysql安装常见问题（系统找不到指定的文件、发生系统错误 1067 进程意外终止）——CSDN@MikanMu  正文下载mysql解压版&lt;!--more--&...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1191623,
    "slug": "ovhm8r",
    "title": "语雀之语雀+serverless+travis CI+hexo+github搭建云写作博客",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "tags: [语雀,travis,serverless]<br />categories: 语雀\n\n---\n\n\n<a name=\"ea6f3b87\"></a>\n# 参考链接\n[Hexo 博客终极玩法：云端写作，自动部署——segmentFault@](https://segmentfault.com/a/1190000017797561)[Nero](https://segmentfault.com/u/nerohua)  <br />[如何在github上创建个人博客——图片链接失效了，我后面会再更新](https://iszengmh.github.io/2017/01/27/%E5%A6%82%E4%BD%95%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/)  <br />[手把手教你使用Travis CI自动部署你的Hexo博客到Github上——简书@SmileUsers](https://www.jianshu.com/p/e22c13d85659)  \n\n<a name=\"58378f0d\"></a>\n# 正文\n<a name=\"7118d588\"></a>\n## 注意：语雀触发Webhook调用serverless，我配置失败了\n\n1. 语雀触发Webhook调用serverless，我也不明白为什么失败，语雀更新了文档没有自动触发webhook，所以如果想要完整实现的朋友不用继续往下看，可以到参考链接上看，大神可能已经实现，可以到评论区咨询他。\n1. 由于我是完成之后再可能有部分示例不完整\n<a name=\"VnktN\"></a>\n## serverless原来没有配置错（时间201906151835）\n2019年6月15日，发现无服务云函数可以触发了，serverless无服务云函数原来没有配置错，travis-ci网站推送邮箱通过提示构建成功，可能是语雀的bug，现在语雀修复好了，之前一直是手动在travis-ci手动执行自动构建的。<br />![图片.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1560595105965-049a7a9c-02bb-437c-b9ad-eaa891c5bf36.png#align=left&display=inline&height=510&name=%E5%9B%BE%E7%89%87.png&originHeight=510&originWidth=1263&size=35278&status=done&width=1263)\n\n<!--more-->\n<a name=\"494d782c\"></a>\n## hexo+github\n这是我以之前有写此类教程，这里就不再赘述了，网上教程也很多\n<a name=\"98a4d905\"></a>\n## travis CI自动构建部署github博客\n> 请看下面这张图，引用[Hexo 博客终极玩法：云端写作，自动部署——segmentFault@](https://segmentfault.com/a/1190000017797561)[Nero](https://segmentfault.com/u/nerohua)  \n\n![](https://cdn.nlark.com/yuque/0/2019/png/244275/1548570430080-765faf89-daf4-47e3-9390-2d5248c8f03c.png#align=left&display=inline&height=262&originHeight=281&originWidth=800&size=0&status=done&width=746)<br />travis的配置其实很简单，虽然我之前一直失败，原因都是语法或者是命令错误\n\n <br /><!--more-->\n\n<a name=\"0c12471c\"></a>\n### 首先需要配置一个新仓库，或者一个新分支\n我这里选择创建一个新分支**blog**进行配置，**blog**这个分支是用于存放未进行构建的源码，而**master**分支为作为构建后输出目录，等下我们在**travis.yml**会配置跟踪**blog**这个分支，一旦**blog**有新提交，travis会立即拉取**blog**分支进行构建，并推送github的**master**分支，剩下就靠你已经部署好的**hexo+github**自动部署\n\n1. **master**分支为输出目录，可以查看我仓库[iszengmh.github.io](https://github.com/iszengmh/iszengmh.github.io)这个仓库![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548571962065-2887ec31-fe23-4b1d-922e-11b0be8d1dff.png#align=left&display=inline&height=594&name=image.png&originHeight=594&originWidth=930&size=75111&status=done&width=930)\n1. **blog**分支为输出目录，可以查看我仓库[iszengmh.github.io](https://github.com/iszengmh/iszengmh.github.io)这个仓库\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548572128842-d7f15a4f-ab97-451e-ace8-066621ca9ce6.png#align=left&display=inline&height=557&name=image.png&originHeight=557&originWidth=933&size=82045&status=done&width=933)\n<a name=\"d2f92a63\"></a>\n### 在源码分目录下创建.travis.yml， travis后台会跟踪blog分支，并读取.travis.yml中的命令执行\n至于如何将blog的代码更换为源码，其实只需将blog分支克隆下来，删除原文件，再将源码提交，并push到远程分支即可，**需要先在源码分目录下创建.travis.yml**， 以下是我的配置文件，travis后台会跟踪**blog**分支，并读取**.travis.yml**中的命令执行\n\n\n```yaml\n #设置语言\nlanguage: node_js  \n# 指定需要sudo权限\nsudo: required\n#设置相应的版本\nnode_js: \n  - 10.15.0\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n    directories:\n        - node_modules    \nbefore_install:\n  - npm install -g hexo-cli\n#安装hexo及插件\ninstall:\n  - npm install   \n  - npm install hexo-deployer-git --save\n  - npm i -g yuque-hexo\n# yuque-hexo clean 清除语雀文章,并清除“yuque-hexo”的json文件“yuque.json”\n# yuque-hexo sync 同步语雀的文章，并创建json文件“yuque.json”\n# hexo clean 清理文章\n# hexo generate 重新发布文章\nscript:\n  - yuque-hexo clean\n  - yuque-hexo sync\n  - hexo clean\n  - hexo generate\n\n# iszengmh修改成自己的github用户名\n# iszengmh@qq.com修改成自己的GitHub邮箱\n# GH_token就是在travis中设置的token，等下会告诉大家怎么配置\n# GH_REF 是下面仓库地址\nafter_script:\n  - cd ./public\n  - git init\n  - git config user.name \"iszengmh\"   \n  - git config user.email \"iszengmh@qq.com\"   \n  - git add .\n  - git commit -m \"update by Travis-CI\"\n  - git push --force --quiet \"https://${GH_TOKEN}@${GH_REF}\" master:master \n #只监测这个分支，一有动静就开始构建\nbranches:\n  only:\n  - blog \n# GH_REF 仓库地址\nenv:\n    global:\n        - GH_REF: github.com/iszengmh/iszengmh.github.io.git\n```\n<a name=\"7cdf68eb\"></a>\n### 修改_config.yml中的发布设置\n修改仓库地址，增加gh_token\n```yaml\n\n#发布设置\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  ## 修改仓库地址，增加gh_token\n  repo: https://gh_token@github.com/iszengmh/iszengmh.github.io.git\n  branch: master\n  message: 我的博客\n#头像\navatar: /blog_head.jpg\n```\n\n- push到远程origin的blog分支，一定要注意push远程分支blog，我之前一直提交错误\n\n```bash\ngit push origin blog\n```\n\n<a name=\"7e044a76\"></a>\n### 配置travis后台同步,跟踪\n[travis网站](https://travis-ci.org/)\n\n- 去github官网先配置一个token，并复制token，用于其他用户作提交\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548574333248-0cc50f8e-5045-4139-8eaf-3d086ed930cf.png#align=left&display=inline&height=378&name=image.png&originHeight=378&originWidth=1022&size=41927&status=done&width=1022)\n\n- 勾选同步，并进入setting \n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548574028361-9bea90c6-b1e0-4dbd-8e2a-ce197f6c70c7.png#align=left&display=inline&height=577&name=image.png&originHeight=577&originWidth=1180&size=66727&status=done&width=1180)\n\n- 配置变更GH_TOKEN，value那里请输入github的token\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548574251748-8dfe579d-601a-434f-a138-0f154b6cb74c.png#align=left&display=inline&height=231&name=image.png&originHeight=231&originWidth=1060&size=19010&status=done&width=1060)\n\n<a name=\"70f6f3c2\"></a>\n### travis 配置完璧，接下来可以通过将源码提交到blog，或者到travis的后台点击“restart build”自动构建 \n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548574498837-6fd3d668-101f-468e-8723-db0edcbd33ba.png#align=left&display=inline&height=323&name=image.png&originHeight=323&originWidth=1026&size=32717&status=done&width=1026)\n<a name=\"d4c6d8c7\"></a>\n## 语雀配置Webhook和serverless（此步骤失败了，语雀没有触发webhook）\n<a name=\"98d0e9c2\"></a>\n### 先需要腾讯云无服务云函数\n腾讯云或者阿里云都可以，我是选择腾讯云，在控制台新建函数<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548580798367-54082aeb-2989-47c5-9583-e6cf107fcbdb.png#align=left&display=inline&height=488&name=image.png&originHeight=488&originWidth=681&size=27779&status=done&width=681)\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548580946060-3a407941-963e-4e78-b090-150a8959217e.png#align=left&display=inline&height=503&name=image.png&originHeight=503&originWidth=897&size=31517&status=done&width=897)\n<a name=\"9b67166a\"></a>\n### 输入函数代码\n此函数来自[Hexo 博客终极玩法：云端写作，自动部署——segmentFault@](https://segmentfault.com/a/1190000017797561)[Nero](https://segmentfault.com/u/nerohua)  \n\n```php\n<?php\nfunction main_handler($event, $context) {\n    // 解析语雀post的数据\n    $update_title = '';\n    if($event->body){\n        $yuque_data= json_decode($event->body);\n        $update_title .= $yuque_data->data->title;\n    }\n    // default params\n    $repos = 'xxxx';  // 你的仓库id 或 slug\n    $token = 'xxxxxx'; // 你的登录token\n    $message = date(\"Y/m/d\").':yuque update:'.$update_title;\n    $branch = 'master';\n    // post params\n    $queryString = $event->queryString;\n    $q_token = $queryString->token ? $queryString->token : $token;\n    $q_repos = $queryString->repos ? $queryString->repos : $repos;\n    $q_message = $queryString->message ? $queryString->message : $message;\n    $q_branch = $queryString->branch ? $queryString->branch : 'master';\n    echo($q_token);\n    echo('===');\n    echo ($q_repos);\n    echo ('===');\n    echo ($q_message);\n    echo ('===');\n    echo ($q_branch);\n    echo ('===');\n    //request travis ci\n    $res_info = triggerTravisCI($q_repos, $q_token, $q_message, $q_branch);\n\n    $res_code = 0;\n    $res_message = '未知';\n    if($res_info['http_code']){\n        $res_code = $res_info['http_code'];\n        switch($res_info['http_code']){\n            case 200:\n            case 202:\n                $res_message = 'success';\n            break;\n            default:\n                $res_message = 'faild';\n            break;\n        }\n    }\n    $res = array(\n        'status'=>$res_code,\n        'message'=>$res_message\n    );\n    return $res;\n}\n\n/*\n* @description  travis api , trigger a build\n* @param $repos string 仓库ID、slug\n* @param $token string 登录验证token\n* @param $message string 触发信息\n* @param $branch string 分支\n* @return $info array 回包信息\n*/\nfunction triggerTravisCI ($repos, $token, $message='yuque update', $branch='master') {\n    //初始化\n    $curl = curl_init();\n    //设置抓取的url\n    curl_setopt($curl, CURLOPT_URL, 'https://api.travis-ci.org/repo/'.$repos.'/requests');\n    //设置获取的信息以文件流的形式返回，而不是直接输出。\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    //设置post方式提交\n    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, \"POST\");\n    //设置post数据\n    $post_data = json_encode(array(\n        \"request\"=> array(\n            \"message\"=>$message,\n            \"branch\"=>$branch\n        )\n    ));\n    $header = array(\n      'Content-Type: application/json',\n      'Travis-API-Version: 3',\n      'Authorization:token '.$token,\n      'Content-Length:' . strlen($post_data)\n    );\n    curl_setopt($curl, CURLOPT_HTTPHEADER, $header);\n    curl_setopt($curl, CURLOPT_POSTFIELDS, $post_data);\n    //执行命令\n    $data = curl_exec($curl);\n    $info = curl_getinfo($curl);\n    //关闭URL请求\n    curl_close($curl);\n    return $info;\n}\n?>\n```\n<a name=\"b96d88cb\"></a>\n### 查看repo的id和token\n\n- travis登录token，在travis-ci.org 中设置界面获取：\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548581610483-75a884f9-2810-4176-b739-655c803c4121.png#align=left&display=inline&height=409&name=image.png&originHeight=409&originWidth=1236&size=46342&status=done&width=1236)\n\n- 获取travis的仓库ID\n\n在后台进入对应在仓库，travis会请求仓库地址，所以直接找到相似链接，链接路径名就仓库ID，路径像这个https://api.travis-ci.org/repo/<你的仓库ID><br />参考链接中说需要请求API，但是我操作了半天不知道为什么一直提示方法不可用，所以投机取巧找这个方法<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548585058267-ef4c79df-3e21-47df-b5d5-9c3166dd3774.png#align=left&display=inline&height=508&name=image.png&originHeight=508&originWidth=1146&size=179654&status=done&width=1146)\n\n<a name=\"a2169335\"></a>\n### 在语雀中新建知识库，然后设置开发者\n最好先看一下[语雀开发文档](https://www.yuque.com/yuque/developer)<br />![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548581236420-c369b9fe-501f-4ede-bcc1-098d55efb2f0.png#align=left&display=inline&height=544&name=image.png&originHeight=544&originWidth=1148&size=49627&status=done&width=1148)\n\n其中“所有更新触发”是指，有文档新增或者变更时，自动触发，而“仅主动推送更新触发”是指在勾选“文档有较大更新时，推送给关注的人”时，才会触发Webhook，具体请看文档[WebHook 说明](https://www.yuque.com/yuque/developer/doc-webhook#wooqpi)<br />无服务函数（请到对应云平台去复制，并加入参数）示例：\n\n```http\nhttps://service-<…………>.ap-guangzhou.apigateway.myqcloud.com/release/main_handler?repos=<your travis's repo ID>&token=<your travis token>&message=语雀自动提交&branch=blog\n```\n\n\n<a name=\"8f1d0c76\"></a>\n## yuque-hexo开源项目用于同步语雀\n<a name=\"b173dbb6\"></a>\n### 需要在.travis.yml中配置如下，如果已经copy上文的配置，则无需再配置\n\n```\nscript:\n  - yuque-hexo clean\n  - yuque-hexo sync\n  - hexo clean\n  - hexo generate\n```\n<a name=\"7dee264f\"></a>\n### 配置package.json\n以下注释，一定要删除，json文件不能使用注释，这里只作说明，[开源项目地址](https://github.com/x-cold/yuque-hexo)\n> login————这里是你语雀的个人主页链接的路径名，例如[https://www.yuque.com/iszengmh/](https://www.yuque.com/iszengmh/p)\n> repo————这里是你语雀的个人主页知识库的路径名，例如[https://www.yuque.com/iszengmh/personalblog](https://www.yuque.com/iszengmh/p)\n> mdNameFormat 生成的 Markdown 文件的文件名，可以选择 \"title\" 或者 \"slug\"，默认 \"title\"，slug 是语雀的永久链接名，一般是几个随机字母。\n> postPath 存放从语雀下载的 Markdown 文件的文件夹，除了 Hexo ，理论上可以支持其他支持 Front-matter 的 Markdown 静态博客\n\n\n```json\n  //………………………………\n  },//注意补上逗号哦，不然后会报错\n  \"yuqueConfig\": {\n    \"baseUrl\": \"https://www.yuque.com/api/v2\",\n    \"login\": \"iszengmh\",\n    \"repo\": \"personalblog\",\n    \"mdNameFormat\": \"title\",\n    \"postPath\": \"source/_posts/yuque\"\n  },\n  \"scripts\": {\n    \"clean\": \"hexo clean\",\n    \"clean:yuque\": \"DEBUG=yuque-hexo.* yuque-hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"publish\": \"npm run clean && npm run deploy\",\n    \"dev\": \"hexo s\",\n    \"sync\": \"DEBUG=yuque-hexo.* yuque-hexo sync\",\n    \"reset\": \"npm run clean:yuque && npm run sync\"\n  }\n```\n\n<a name=\"b688a7aa\"></a>\n### 将修改的文件全部提交github的blog分支\n\n```bash\ngit add .\ngit commmit -m \"修改\"\ngit push -u origin blog\n```\n\n由于travis自动构建会自动发布到github的master分支\n<a name=\"eaf5275a\"></a>\n## 手动触发自动构建\n由于我的语雀配置没有自动触发travis更新，所以我自己去travis后台点击“restart build”可以同步并自动构建，这样也是可以的，本篇文章就是这样同步过去的\n<a name=\"d291dcca\"></a>\n## 语雀编写hexo的front-matter\n<a name=\"c902bb32\"></a>\n### 分类和标签，这样写\n\n```\ntags: [语雀,travis,serverless]\ncategories: 语雀\n---\n```\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548591626703-f9f13701-5638-41c0-9b62-58838d3e7b9b.png#align=left&display=inline&height=310&name=image.png&originHeight=310&originWidth=751&size=33911&status=done&width=751)\n<a name=\"b18e6125\"></a>\n### 隐藏文章内容\n\n```\n<!--more-->\n```\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/244275/1548591735536-f1fb4021-44fa-4cc0-80c6-4758718b2fd7.png#align=left&display=inline&height=436&name=image.png&originHeight=436&originWidth=813&size=68156&status=done&width=813)\n\n<a name=\"0d881386\"></a>\n## 以上就是全部配置，如果你语雀可以触发webhook，请告诉怎么搞，搞死人\n",
    "body_draft": "",
    "body_html": "<p>tags: [语雀,travis,serverless]</p><p>categories: 语雀</p><p><br /></p><hr /><p><br /></p><h1 id=\"ea6f3b87\"><span>参考链接</span></h1><p><a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">Hexo 博客终极玩法：云端写作，自动部署——segmentFault@</a><a href=\"https://segmentfault.com/u/nerohua\" target=\"_blank\">Nero</a>  </p><p><a href=\"https://iszengmh.github.io/2017/01/27/%E5%A6%82%E4%BD%95%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/\" target=\"_blank\">如何在github上创建个人博客——图片链接失效了，我后面会再更新</a>  </p><p><a href=\"https://www.jianshu.com/p/e22c13d85659\" target=\"_blank\">手把手教你使用Travis CI自动部署你的Hexo博客到Github上——简书@SmileUsers</a>  </p><p><br /></p><h1 id=\"58378f0d\">正文</h1><h2 id=\"7118d588\">注意：语雀触发Webhook调用serverless，我配置失败了</h2><ol><li>语雀触发Webhook调用serverless，我也不明白为什么失败，语雀更新了文档没有自动触发webhook，所以如果想要完整实现的朋友不用继续往下看，可以到参考链接上看，大神可能已经实现，可以到评论区咨询他。</li><li>由于我是完成之后再可能有部分示例不完整</li></ol><h2 id=\"VnktN\">serverless原来没有配置错（时间201906151835）</h2><p>2019年6月15日，发现无服务云函数可以触发了，serverless无服务云函数原来没有配置错，travis-ci网站推送邮箱通过提示构建成功，可能是语雀的bug，现在语雀修复好了，之前一直是手动在travis-ci手动执行自动构建的。</p><p><img alt=\"图片.png\" title=\"图片.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1560595105965-049a7a9c-02bb-437c-b9ad-eaa891c5bf36.png#align=left&amp;display=inline&amp;height=510&amp;name=%E5%9B%BE%E7%89%87.png&amp;originHeight=510&amp;originWidth=1263&amp;size=35278&amp;status=done&amp;width=1263\" style=\"max-width: 600px; width: 1263px;\" /></p><p><br /></p><p>&lt;!--more--&gt;</p><h2 id=\"494d782c\">hexo+github</h2><p>这是我以之前有写此类教程，这里就不再赘述了，网上教程也很多</p><h2 id=\"98a4d905\">travis CI自动构建部署github博客</h2><blockquote><p>请看下面这张图，引用<a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">Hexo 博客终极玩法：云端写作，自动部署——segmentFault@</a><a href=\"https://segmentfault.com/u/nerohua\" target=\"_blank\">Nero</a>  </p></blockquote><p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548570430080-765faf89-daf4-47e3-9390-2d5248c8f03c.png#align=left&amp;display=inline&amp;height=262&amp;originHeight=281&amp;originWidth=800&amp;size=0&amp;status=done&amp;width=746\" style=\"max-width: 600px; width: 746px;\" /></p><p>travis的配置其实很简单，虽然我之前一直失败，原因都是语法或者是命令错误</p><p><br /></p><p> </p><p>&lt;!--more--&gt;</p><p><br /></p><h3 id=\"0c12471c\">首先需要配置一个新仓库，或者一个新分支</h3><p>我这里选择创建一个新分支<strong><span>blog</span></strong>进行配置，<strong>blog</strong>这个分支是用于存放未进行构建的源码，而<strong>master</strong>分支为作为构建后输出目录，等下我们在<strong>travis.yml</strong>会配置跟踪<strong>blog</strong>这个分支，一旦<strong>blog</strong>有新提交，travis会立即拉取<strong>blog</strong>分支进行构建，并推送github的<strong>master</strong>分支，剩下就靠你已经部署好的<strong>hexo+github</strong>自动部署</p><ol><li><strong>master</strong>分支为输出目录，可以查看我仓库<a href=\"https://github.com/iszengmh/iszengmh.github.io\" target=\"_blank\">iszengmh.github.io</a>这个仓库<img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548571962065-2887ec31-fe23-4b1d-922e-11b0be8d1dff.png#align=left&amp;display=inline&amp;height=594&amp;name=image.png&amp;originHeight=594&amp;originWidth=930&amp;size=75111&amp;status=done&amp;width=930\" style=\"max-width: 600px; width: 930px;\" /></li><li><strong><span>blog</span></strong><span>分支为输出目录，可以查看我仓库</span><a href=\"https://github.com/iszengmh/iszengmh.github.io\" target=\"_blank\">iszengmh.github.io</a><span>这个仓库</span></li></ol><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548572128842-d7f15a4f-ab97-451e-ace8-066621ca9ce6.png#align=left&amp;display=inline&amp;height=557&amp;name=image.png&amp;originHeight=557&amp;originWidth=933&amp;size=82045&amp;status=done&amp;width=933\" style=\"max-width: 600px; width: 933px;\" /></p><h3 id=\"d2f92a63\">在源码分目录下创建.travis.yml， travis后台会跟踪blog分支，并读取.travis.yml中的命令执行</h3><p>至于如何将blog的代码更换为源码，其实只需将blog分支克隆下来，删除原文件，<span>再将源码提交，并push到远程分支即可，</span><strong><span>需要先</span></strong><strong>在源码分目录下创建</strong><strong>.travis.yml</strong>， 以下是我的配置文件，travis后台会跟踪<strong>blog</strong>分支，并读取<strong>.travis.yml</strong>中的命令执行</p><ul><p><br /></p></ul><pre data-lang=\"yaml\"><code> #设置语言\nlanguage: node_js  \n# 指定需要sudo权限\nsudo: required\n#设置相应的版本\nnode_js: \n  - 10.15.0\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n    directories:\n        - node_modules    \nbefore_install:\n  - npm install -g hexo-cli\n#安装hexo及插件\ninstall:\n  - npm install   \n  - npm install hexo-deployer-git --save\n  - npm i -g yuque-hexo\n# yuque-hexo clean 清除语雀文章,并清除“yuque-hexo”的json文件“yuque.json”\n# yuque-hexo sync 同步语雀的文章，并创建json文件“yuque.json”\n# hexo clean 清理文章\n# hexo generate 重新发布文章\nscript:\n  - yuque-hexo clean\n  - yuque-hexo sync\n  - hexo clean\n  - hexo generate\n\n# iszengmh修改成自己的github用户名\n# iszengmh@qq.com修改成自己的GitHub邮箱\n# GH_token就是在travis中设置的token，等下会告诉大家怎么配置\n# GH_REF 是下面仓库地址\nafter_script:\n  - cd ./public\n  - git init\n  - git config user.name &quot;iszengmh&quot;   \n  - git config user.email &quot;iszengmh@qq.com&quot;   \n  - git add .\n  - git commit -m &quot;update by Travis-CI&quot;\n  - git push --force --quiet &quot;https://${GH_TOKEN}@${GH_REF}&quot; master:master \n #只监测这个分支，一有动静就开始构建\nbranches:\n  only:\n  - blog \n# GH_REF 仓库地址\nenv:\n    global:\n        - GH_REF: github.com/iszengmh/iszengmh.github.io.git</code></pre><h3 id=\"7cdf68eb\">修改_config.yml中的发布设置</h3><p>修改仓库地址，增加gh_token</p><pre data-lang=\"yaml\"><code>\n#发布设置\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  ## 修改仓库地址，增加gh_token\n  repo: https://gh_token@github.com/iszengmh/iszengmh.github.io.git\n  branch: master\n  message: 我的博客\n#头像\navatar: /blog_head.jpg</code></pre><p><br /></p><ul><li>push到远程origin的blog分支，一定要注意<span>push</span>远程分支blog，我之前一直提交错误</li><p><br /></p></ul><pre data-lang=\"bash\"><code>git push origin blog</code></pre><p><br /></p><h3 id=\"7e044a76\">配置travis后台同步,跟踪</h3><p><span><a href=\"https://travis-ci.org/\" target=\"_blank\">travis<span>网站</span></a></span></p><ul><li>去github官网先配置一个token，并复制token，用于其他用户作提交</li></ul><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548574333248-0cc50f8e-5045-4139-8eaf-3d086ed930cf.png#align=left&amp;display=inline&amp;height=378&amp;name=image.png&amp;originHeight=378&amp;originWidth=1022&amp;size=41927&amp;status=done&amp;width=1022\" style=\"max-width: 600px; width: 1022px;\" /></p><ul><li>勾选同步，并进入setting </li></ul><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548574028361-9bea90c6-b1e0-4dbd-8e2a-ce197f6c70c7.png#align=left&amp;display=inline&amp;height=577&amp;name=image.png&amp;originHeight=577&amp;originWidth=1180&amp;size=66727&amp;status=done&amp;width=1180\" style=\"max-width: 600px; width: 1180px;\" /></p><ul><li>配置变更GH_TOKEN，value那里请输入github的token</li></ul><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548574251748-8dfe579d-601a-434f-a138-0f154b6cb74c.png#align=left&amp;display=inline&amp;height=231&amp;name=image.png&amp;originHeight=231&amp;originWidth=1060&amp;size=19010&amp;status=done&amp;width=1060\" style=\"max-width: 600px; width: 1060px;\" /></p><p><br /></p><h3 id=\"70f6f3c2\">travis 配置完璧，接下来可以通过将源码提交到blog，或者到travis的后台点击“restart build”自动构建 </h3><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548574498837-6fd3d668-101f-468e-8723-db0edcbd33ba.png#align=left&amp;display=inline&amp;height=323&amp;name=image.png&amp;originHeight=323&amp;originWidth=1026&amp;size=32717&amp;status=done&amp;width=1026\" style=\"max-width: 600px; width: 1026px;\" /></p><h2 id=\"d4c6d8c7\">语雀配置Webhook和serverless（此步骤失败了，语雀没有触发webhook）</h2><h3 id=\"98d0e9c2\">先需要腾讯云无服务云函数</h3><p>腾讯云或者阿里云都可以，我是选择腾讯云，在控制台新建函数</p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548580798367-54082aeb-2989-47c5-9583-e6cf107fcbdb.png#align=left&amp;display=inline&amp;height=488&amp;name=image.png&amp;originHeight=488&amp;originWidth=681&amp;size=27779&amp;status=done&amp;width=681\" style=\"max-width: 600px; width: 681px;\" /></p><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548580946060-3a407941-963e-4e78-b090-150a8959217e.png#align=left&amp;display=inline&amp;height=503&amp;name=image.png&amp;originHeight=503&amp;originWidth=897&amp;size=31517&amp;status=done&amp;width=897\" style=\"max-width: 600px; width: 897px;\" /></p><h3 id=\"9b67166a\">输入函数代码</h3><p>此函数来自<a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">Hexo 博客终极玩法：云端写作，自动部署——segmentFault@</a><a href=\"https://segmentfault.com/u/nerohua\" target=\"_blank\">Nero</a>  </p><p><br /></p><pre data-lang=\"php\"><code>&lt;?php\nfunction main_handler($event, $context) {\n    // 解析语雀post的数据\n    $update_title = '';\n    if($event-&gt;body){\n        $yuque_data= json_decode($event-&gt;body);\n        $update_title .= $yuque_data-&gt;data-&gt;title;\n    }\n    // default params\n    $repos = 'xxxx';  // 你的仓库id 或 slug\n    $token = 'xxxxxx'; // 你的登录token\n    $message = date(&quot;Y/m/d&quot;).':yuque update:'.$update_title;\n    $branch = 'master';\n    // post params\n    $queryString = $event-&gt;queryString;\n    $q_token = $queryString-&gt;token ? $queryString-&gt;token : $token;\n    $q_repos = $queryString-&gt;repos ? $queryString-&gt;repos : $repos;\n    $q_message = $queryString-&gt;message ? $queryString-&gt;message : $message;\n    $q_branch = $queryString-&gt;branch ? $queryString-&gt;branch : 'master';\n    echo($q_token);\n    echo('===');\n    echo ($q_repos);\n    echo ('===');\n    echo ($q_message);\n    echo ('===');\n    echo ($q_branch);\n    echo ('===');\n    //request travis ci\n    $res_info = triggerTravisCI($q_repos, $q_token, $q_message, $q_branch);\n\n    $res_code = 0;\n    $res_message = '未知';\n    if($res_info['http_code']){\n        $res_code = $res_info['http_code'];\n        switch($res_info['http_code']){\n            case 200:\n            case 202:\n                $res_message = 'success';\n            break;\n            default:\n                $res_message = 'faild';\n            break;\n        }\n    }\n    $res = array(\n        'status'=&gt;$res_code,\n        'message'=&gt;$res_message\n    );\n    return $res;\n}\n\n/*\n* @description  travis api , trigger a build\n* @param $repos string 仓库ID、slug\n* @param $token string 登录验证token\n* @param $message string 触发信息\n* @param $branch string 分支\n* @return $info array 回包信息\n*/\nfunction triggerTravisCI ($repos, $token, $message='yuque update', $branch='master') {\n    //初始化\n    $curl = curl_init();\n    //设置抓取的url\n    curl_setopt($curl, CURLOPT_URL, 'https://api.travis-ci.org/repo/'.$repos.'/requests');\n    //设置获取的信息以文件流的形式返回，而不是直接输出。\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    //设置post方式提交\n    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, &quot;POST&quot;);\n    //设置post数据\n    $post_data = json_encode(array(\n        &quot;request&quot;=&gt; array(\n            &quot;message&quot;=&gt;$message,\n            &quot;branch&quot;=&gt;$branch\n        )\n    ));\n    $header = array(\n      'Content-Type: application/json',\n      'Travis-API-Version: 3',\n      'Authorization:token '.$token,\n      'Content-Length:' . strlen($post_data)\n    );\n    curl_setopt($curl, CURLOPT_HTTPHEADER, $header);\n    curl_setopt($curl, CURLOPT_POSTFIELDS, $post_data);\n    //执行命令\n    $data = curl_exec($curl);\n    $info = curl_getinfo($curl);\n    //关闭URL请求\n    curl_close($curl);\n    return $info;\n}\n?&gt;</code></pre><h3 id=\"b96d88cb\">查看repo的id和token</h3><ul><li>travis登录token，在travis-ci.org 中设置界面获取：</li></ul><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548581610483-75a884f9-2810-4176-b739-655c803c4121.png#align=left&amp;display=inline&amp;height=409&amp;name=image.png&amp;originHeight=409&amp;originWidth=1236&amp;size=46342&amp;status=done&amp;width=1236\" style=\"max-width: 600px; width: 1236px;\" /></p><ul><li>获取travis的仓库ID</li></ul><p>在后台进入对应在仓库，travis会请求仓库地址，所以直接找到相似链接，链接路径名就仓库ID，路径像这个<span class=\"lake-fontsize-9\" style=\"color: #222222;\">https://api.travis-ci.org/repo/&lt;你的仓库ID&gt;</span></p><p><span>参考链接中说需要请求API，但是我操作了半天不知道为什么一直提示方法不可用，所以投机取巧找这个方法</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548585058267-ef4c79df-3e21-47df-b5d5-9c3166dd3774.png#align=left&amp;display=inline&amp;height=508&amp;name=image.png&amp;originHeight=508&amp;originWidth=1146&amp;size=179654&amp;status=done&amp;width=1146\" style=\"max-width: 600px; width: 1146px;\" /></p><p><br /></p><h3 id=\"a2169335\">在语雀中新建知识库，然后设置开发者</h3><p>最好先看一下<a href=\"https://www.yuque.com/yuque/developer\" target=\"_blank\">语雀开发文档</a></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548581236420-c369b9fe-501f-4ede-bcc1-098d55efb2f0.png#align=left&amp;display=inline&amp;height=544&amp;name=image.png&amp;originHeight=544&amp;originWidth=1148&amp;size=49627&amp;status=done&amp;width=1148\" style=\"max-width: 600px; width: 1148px;\" /></p><p><br /></p><p>其中“所有更新触发”是指，有文档新增或者变更时，自动触发，而“仅主动推送更新触发”是指在勾选“文档有较大更新时，推送给关注的人”时，才会触发Webhook，具体请看文档<a href=\"https://www.yuque.com/yuque/developer/doc-webhook#wooqpi\" target=\"_blank\">WebHook 说明</a></p><p>无服务函数（请到对应云平台去复制，并加入参数）示例：</p><p><br /></p><pre data-lang=\"http\"><code>https://service-&lt;…………&gt;.ap-guangzhou.apigateway.myqcloud.com/release/main_handler?repos=&lt;your travis's repo ID&gt;&amp;token=&lt;your travis token&gt;&amp;message=语雀自动提交&amp;branch=blog</code></pre><p><br /></p><p><br /></p><h2 id=\"8f1d0c76\">yuque-hexo开源项目用于同步语雀</h2><h3 id=\"b173dbb6\">需要在.travis.yml中配置如下，如果已经copy上文的配置，则无需再配置</h3><p><br /></p><pre><code>script:\n  - yuque-hexo clean\n  - yuque-hexo sync\n  - hexo clean\n  - hexo generate</code></pre><h3 id=\"7dee264f\">配置package.json</h3><p>以下注释，一定要删除，json文件不能使用注释，这里只作说明，<a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\">开源项目地址</a></p><blockquote><p>login————这里是你语雀的个人主页链接的路径名，例如<a href=\"https://www.yuque.com/iszengmh/p\" target=\"_blank\">https://www.yuque.com/iszengmh/</a></p><p>repo<span style=\"color: #8C8C8C;\">————<span style=\"color: #8C8C8C;\">这里是你语雀的个人主页知识库的路径名，例如<a href=\"https://www.yuque.com/iszengmh/p\" target=\"_blank\">https://www.yuque.com/iszengmh/personalblog</a></span></span></p><p>mdNameFormat 生成的 Markdown 文件的文件名，可以选择 &quot;title&quot; 或者 &quot;slug&quot;，默认 &quot;title&quot;，slug 是语雀的永久链接名，一般是几个随机字母。</p><p>postPath 存放从语雀下载的 Markdown 文件的文件夹，除了 Hexo ，理论上可以支持其他支持 Front-matter 的 Markdown 静态博客</p></blockquote><p><br /></p><pre data-lang=\"json\"><code>  //………………………………\n  },//注意补上逗号哦，不然后会报错\n  &quot;yuqueConfig&quot;: {\n    &quot;baseUrl&quot;: &quot;https://www.yuque.com/api/v2&quot;,\n    &quot;login&quot;: &quot;iszengmh&quot;,\n    &quot;repo&quot;: &quot;personalblog&quot;,\n    &quot;mdNameFormat&quot;: &quot;title&quot;,\n    &quot;postPath&quot;: &quot;source/_posts/yuque&quot;\n  },\n  &quot;scripts&quot;: {\n    &quot;clean&quot;: &quot;hexo clean&quot;,\n    &quot;clean:yuque&quot;: &quot;DEBUG=yuque-hexo.* yuque-hexo clean&quot;,\n    &quot;deploy&quot;: &quot;hexo deploy&quot;,\n    &quot;publish&quot;: &quot;npm run clean &amp;&amp; npm run deploy&quot;,\n    &quot;dev&quot;: &quot;hexo s&quot;,\n    &quot;sync&quot;: &quot;DEBUG=yuque-hexo.* yuque-hexo sync&quot;,\n    &quot;reset&quot;: &quot;npm run clean:yuque &amp;&amp; npm run sync&quot;\n  }</code></pre><p><br /></p><h3 id=\"b688a7aa\">将修改的文件全部提交github的blog分支</h3><p><br /></p><pre data-lang=\"bash\"><code>git add .\ngit commmit -m &quot;修改&quot;\ngit push -u origin blog</code></pre><p><br /></p><p>由于travis自动构建会自动发布到github的master分支</p><h2 id=\"eaf5275a\">手动触发自动构建</h2><p>由于我的语雀配置没有自动触发travis更新，所以我自己去travis后台点击“restart build”可以同步并自动构建，这样也是可以的，本篇文章就是这样同步过去的</p><h2 id=\"d291dcca\">语雀编写hexo的front-matter</h2><h3 id=\"c902bb32\">分类和标签，这样写</h3><p><br /></p><pre><code>tags: [语雀,travis,serverless]\ncategories: 语雀\n---</code></pre><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548591626703-f9f13701-5638-41c0-9b62-58838d3e7b9b.png#align=left&amp;display=inline&amp;height=310&amp;name=image.png&amp;originHeight=310&amp;originWidth=751&amp;size=33911&amp;status=done&amp;width=751\" style=\"max-width: 600px; width: 751px;\" /></p><h3 id=\"b18e6125\">隐藏文章内容</h3><p><br /></p><pre><code>&lt;!--more--&gt;</code></pre><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/244275/1548591735536-f1fb4021-44fa-4cc0-80c6-4758718b2fd7.png#align=left&amp;display=inline&amp;height=436&amp;name=image.png&amp;originHeight=436&amp;originWidth=813&amp;size=68156&amp;status=done&amp;width=813\" style=\"max-width: 600px; width: 813px;\" /></p><p><br /></p><h2 id=\"0d881386\">以上就是全部配置，如果你语雀可以触发webhook，请告诉怎么搞，搞死人</h2>",
    "body_lake": "<!doctype lake><p>tags: [语雀,travis,serverless]</p><p>categories: 语雀</p><p><br /></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22Zkb1I%22%7D\"></card><p><br /></p><h1 id=\"ea6f3b87\"><span>参考链接</span></h1><p><a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">Hexo 博客终极玩法：云端写作，自动部署——segmentFault@</a><a href=\"https://segmentfault.com/u/nerohua\" target=\"_blank\">Nero</a>  </p><p><a href=\"https://iszengmh.github.io/2017/01/27/%E5%A6%82%E4%BD%95%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/\" target=\"_blank\">如何在github上创建个人博客——图片链接失效了，我后面会再更新</a>  </p><p><a href=\"https://www.jianshu.com/p/e22c13d85659\" target=\"_blank\">手把手教你使用Travis CI自动部署你的Hexo博客到Github上——简书@SmileUsers</a>  </p><p><br /></p><h1 id=\"58378f0d\">正文</h1><h2 id=\"7118d588\">注意：语雀触发Webhook调用serverless，我配置失败了</h2><ol><li>语雀触发Webhook调用serverless，我也不明白为什么失败，语雀更新了文档没有自动触发webhook，所以如果想要完整实现的朋友不用继续往下看，可以到参考链接上看，大神可能已经实现，可以到评论区咨询他。</li><li>由于我是完成之后再可能有部分示例不完整</li></ol><h2 id=\"VnktN\">serverless原来没有配置错（时间201906151835）</h2><p>2019年6月15日，发现无服务云函数可以触发了，serverless无服务云函数原来没有配置错，travis-ci网站推送邮箱通过提示构建成功，可能是语雀的bug，现在语雀修复好了，之前一直是手动在travis-ci手动执行自动构建的。</p><p><anchor /><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1560595105965-049a7a9c-02bb-437c-b9ad-eaa891c5bf36.png%22%2C%22originWidth%22%3A1263%2C%22originHeight%22%3A510%2C%22name%22%3A%22%E5%9B%BE%E7%89%87.png%22%2C%22size%22%3A35278%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1263%2C%22height%22%3A510%7D\"></card><focus /></p><p><br /></p><p>&lt;!--more--&gt;</p><h2 id=\"494d782c\">hexo+github</h2><p>这是我以之前有写此类教程，这里就不再赘述了，网上教程也很多</p><h2 id=\"98a4d905\">travis CI自动构建部署github博客</h2><blockquote><p>请看下面这张图，引用<a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">Hexo 博客终极玩法：云端写作，自动部署——segmentFault@</a><a href=\"https://segmentfault.com/u/nerohua\" target=\"_blank\">Nero</a>  </p></blockquote><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548570430080-765faf89-daf4-47e3-9390-2d5248c8f03c.png%22%2C%22originWidth%22%3A800%2C%22originHeight%22%3A281%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A746%2C%22height%22%3A262%7D\"></card></p><p>travis的配置其实很简单，虽然我之前一直失败，原因都是语法或者是命令错误</p><p><br /></p><p> </p><p>&lt;!--more--&gt;</p><p><br /></p><h3 id=\"0c12471c\">首先需要配置一个新仓库，或者一个新分支</h3><p>我这里选择创建一个新分支<strong><span>blog</span></strong>进行配置，<strong>blog</strong>这个分支是用于存放未进行构建的源码，而<strong>master</strong>分支为作为构建后输出目录，等下我们在<strong>travis.yml</strong>会配置跟踪<strong>blog</strong>这个分支，一旦<strong>blog</strong>有新提交，travis会立即拉取<strong>blog</strong>分支进行构建，并推送github的<strong>master</strong>分支，剩下就靠你已经部署好的<strong>hexo+github</strong>自动部署</p><ol><li><strong>master</strong>分支为输出目录，可以查看我仓库<a href=\"https://github.com/iszengmh/iszengmh.github.io\" target=\"_blank\">iszengmh.github.io</a>这个仓库<card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548571962065-2887ec31-fe23-4b1d-922e-11b0be8d1dff.png%22%2C%22originWidth%22%3A930%2C%22originHeight%22%3A594%2C%22name%22%3A%22image.png%22%2C%22size%22%3A75111%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A930%2C%22height%22%3A594%7D\"></card></li><li><strong><span>blog</span></strong><span>分支为输出目录，可以查看我仓库</span><a href=\"https://github.com/iszengmh/iszengmh.github.io\" target=\"_blank\">iszengmh.github.io</a><span>这个仓库</span></li></ol><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548572128842-d7f15a4f-ab97-451e-ace8-066621ca9ce6.png%22%2C%22originWidth%22%3A933%2C%22originHeight%22%3A557%2C%22name%22%3A%22image.png%22%2C%22size%22%3A82045%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A933%2C%22height%22%3A557%7D\"></card></p><h3 id=\"d2f92a63\">在源码分目录下创建.travis.yml， travis后台会跟踪blog分支，并读取.travis.yml中的命令执行</h3><p>至于如何将blog的代码更换为源码，其实只需将blog分支克隆下来，删除原文件，<span>再将源码提交，并push到远程分支即可，</span><strong><span>需要先</span></strong><strong>在源码分目录下创建</strong><strong>.travis.yml</strong>， 以下是我的配置文件，travis后台会跟踪<strong>blog</strong>分支，并读取<strong>.travis.yml</strong>中的命令执行</p><ul><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%20%23%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%80%5Cnlanguage%3A%20node_js%20%20%5Cn%23%20%E6%8C%87%E5%AE%9A%E9%9C%80%E8%A6%81sudo%E6%9D%83%E9%99%90%5Cnsudo%3A%20required%5Cn%23%E8%AE%BE%E7%BD%AE%E7%9B%B8%E5%BA%94%E7%9A%84%E7%89%88%E6%9C%AC%5Cnnode_js%3A%20%5Cn%20%20-%2010.15.0%5Cn%23%20%E6%8C%87%E5%AE%9A%E7%BC%93%E5%AD%98%E6%A8%A1%E5%9D%97%EF%BC%8C%E5%8F%AF%E9%80%89%E3%80%82%E7%BC%93%E5%AD%98%E5%8F%AF%E5%8A%A0%E5%BF%AB%E7%BC%96%E8%AF%91%E9%80%9F%E5%BA%A6%E3%80%82%5Cncache%3A%5Cn%20%20%20%20directories%3A%5Cn%20%20%20%20%20%20%20%20-%20node_modules%20%20%20%20%5Cnbefore_install%3A%5Cn%20%20-%20npm%20install%20-g%20hexo-cli%5Cn%23%E5%AE%89%E8%A3%85hexo%E5%8F%8A%E6%8F%92%E4%BB%B6%5Cninstall%3A%5Cn%20%20-%20npm%20install%20%20%20%5Cn%20%20-%20npm%20install%20hexo-deployer-git%20--save%5Cn%20%20-%20npm%20i%20-g%20yuque-hexo%5Cn%23%20yuque-hexo%20clean%20%E6%B8%85%E9%99%A4%E8%AF%AD%E9%9B%80%E6%96%87%E7%AB%A0%2C%E5%B9%B6%E6%B8%85%E9%99%A4%E2%80%9Cyuque-hexo%E2%80%9D%E7%9A%84json%E6%96%87%E4%BB%B6%E2%80%9Cyuque.json%E2%80%9D%5Cn%23%20yuque-hexo%20sync%20%E5%90%8C%E6%AD%A5%E8%AF%AD%E9%9B%80%E7%9A%84%E6%96%87%E7%AB%A0%EF%BC%8C%E5%B9%B6%E5%88%9B%E5%BB%BAjson%E6%96%87%E4%BB%B6%E2%80%9Cyuque.json%E2%80%9D%5Cn%23%20hexo%20clean%20%E6%B8%85%E7%90%86%E6%96%87%E7%AB%A0%5Cn%23%20hexo%20generate%20%E9%87%8D%E6%96%B0%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%5Cnscript%3A%5Cn%20%20-%20yuque-hexo%20clean%5Cn%20%20-%20yuque-hexo%20sync%5Cn%20%20-%20hexo%20clean%5Cn%20%20-%20hexo%20generate%5Cn%5Cn%23%20iszengmh%E4%BF%AE%E6%94%B9%E6%88%90%E8%87%AA%E5%B7%B1%E7%9A%84github%E7%94%A8%E6%88%B7%E5%90%8D%5Cn%23%20iszengmh%40qq.com%E4%BF%AE%E6%94%B9%E6%88%90%E8%87%AA%E5%B7%B1%E7%9A%84GitHub%E9%82%AE%E7%AE%B1%5Cn%23%20GH_token%E5%B0%B1%E6%98%AF%E5%9C%A8travis%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%9A%84token%EF%BC%8C%E7%AD%89%E4%B8%8B%E4%BC%9A%E5%91%8A%E8%AF%89%E5%A4%A7%E5%AE%B6%E6%80%8E%E4%B9%88%E9%85%8D%E7%BD%AE%5Cn%23%20GH_REF%20%E6%98%AF%E4%B8%8B%E9%9D%A2%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%5Cnafter_script%3A%5Cn%20%20-%20cd%20.%2Fpublic%5Cn%20%20-%20git%20init%5Cn%20%20-%20git%20config%20user.name%20%5C%22iszengmh%5C%22%20%20%20%5Cn%20%20-%20git%20config%20user.email%20%5C%22iszengmh%40qq.com%5C%22%20%20%20%5Cn%20%20-%20git%20add%20.%5Cn%20%20-%20git%20commit%20-m%20%5C%22update%20by%20Travis-CI%5C%22%5Cn%20%20-%20git%20push%20--force%20--quiet%20%5C%22https%3A%2F%2F%24%7BGH_TOKEN%7D%40%24%7BGH_REF%7D%5C%22%20master%3Amaster%20%5Cn%20%23%E5%8F%AA%E7%9B%91%E6%B5%8B%E8%BF%99%E4%B8%AA%E5%88%86%E6%94%AF%EF%BC%8C%E4%B8%80%E6%9C%89%E5%8A%A8%E9%9D%99%E5%B0%B1%E5%BC%80%E5%A7%8B%E6%9E%84%E5%BB%BA%5Cnbranches%3A%5Cn%20%20only%3A%5Cn%20%20-%20blog%20%5Cn%23%20GH_REF%20%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%5Cnenv%3A%5Cn%20%20%20%20global%3A%5Cn%20%20%20%20%20%20%20%20-%20GH_REF%3A%20github.com%2Fiszengmh%2Fiszengmh.github.io.git%22%2C%22id%22%3A%22121FB%22%7D\"></card><h3 id=\"7cdf68eb\">修改_config.yml中的发布设置</h3><p>修改仓库地址，增加gh_token</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%5Cn%23%E5%8F%91%E5%B8%83%E8%AE%BE%E7%BD%AE%5Cn%23%20Deployment%5Cn%23%23%20Docs%3A%20https%3A%2F%2Fhexo.io%2Fdocs%2Fdeployment.html%5Cndeploy%3A%5Cn%20%20type%3A%20git%5Cn%20%20%23%23%20%E4%BF%AE%E6%94%B9%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%A2%9E%E5%8A%A0gh_token%5Cn%20%20repo%3A%20https%3A%2F%2Fgh_token%40github.com%2Fiszengmh%2Fiszengmh.github.io.git%5Cn%20%20branch%3A%20master%5Cn%20%20message%3A%20%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%5Cn%23%E5%A4%B4%E5%83%8F%5Cnavatar%3A%20%2Fblog_head.jpg%22%2C%22id%22%3A%22ZS0C7%22%7D\"></card><p><br /></p><ul><li>push到远程origin的blog分支，一定要注意<span>push</span>远程分支blog，我之前一直提交错误</li><p><br /></p></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20push%20origin%20blog%22%2C%22id%22%3A%222VHrI%22%7D\"></card><p><br /></p><h3 id=\"7e044a76\">配置travis后台同步,跟踪</h3><p><span><a href=\"https://travis-ci.org/\" target=\"_blank\">travis<span>网站</span></a></span></p><ul><li>去github官网先配置一个token，并复制token，用于其他用户作提交</li></ul><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548574333248-0cc50f8e-5045-4139-8eaf-3d086ed930cf.png%22%2C%22originWidth%22%3A1022%2C%22originHeight%22%3A378%2C%22name%22%3A%22image.png%22%2C%22size%22%3A41927%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1022%2C%22height%22%3A378%7D\"></card></p><ul><li>勾选同步，并进入setting </li></ul><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548574028361-9bea90c6-b1e0-4dbd-8e2a-ce197f6c70c7.png%22%2C%22originWidth%22%3A1180%2C%22originHeight%22%3A577%2C%22name%22%3A%22image.png%22%2C%22size%22%3A66727%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1180%2C%22height%22%3A577%7D\"></card></p><ul><li>配置变更GH_TOKEN，value那里请输入github的token</li></ul><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548574251748-8dfe579d-601a-434f-a138-0f154b6cb74c.png%22%2C%22originWidth%22%3A1060%2C%22originHeight%22%3A231%2C%22name%22%3A%22image.png%22%2C%22size%22%3A19010%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1060%2C%22height%22%3A231%7D\"></card></p><p><br /></p><h3 id=\"70f6f3c2\">travis 配置完璧，接下来可以通过将源码提交到blog，或者到travis的后台点击“restart build”自动构建 </h3><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548574498837-6fd3d668-101f-468e-8723-db0edcbd33ba.png%22%2C%22originWidth%22%3A1026%2C%22originHeight%22%3A323%2C%22name%22%3A%22image.png%22%2C%22size%22%3A32717%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1026%2C%22height%22%3A323%7D\"></card></p><h2 id=\"d4c6d8c7\">语雀配置Webhook和serverless（此步骤失败了，语雀没有触发webhook）</h2><h3 id=\"98d0e9c2\">先需要腾讯云无服务云函数</h3><p>腾讯云或者阿里云都可以，我是选择腾讯云，在控制台新建函数</p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548580798367-54082aeb-2989-47c5-9583-e6cf107fcbdb.png%22%2C%22originWidth%22%3A681%2C%22originHeight%22%3A488%2C%22name%22%3A%22image.png%22%2C%22size%22%3A27779%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A681%2C%22height%22%3A488%7D\"></card></p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548580946060-3a407941-963e-4e78-b090-150a8959217e.png%22%2C%22originWidth%22%3A897%2C%22originHeight%22%3A503%2C%22name%22%3A%22image.png%22%2C%22size%22%3A31517%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A897%2C%22height%22%3A503%7D\"></card></p><h3 id=\"9b67166a\">输入函数代码</h3><p>此函数来自<a href=\"https://segmentfault.com/a/1190000017797561\" target=\"_blank\">Hexo 博客终极玩法：云端写作，自动部署——segmentFault@</a><a href=\"https://segmentfault.com/u/nerohua\" target=\"_blank\">Nero</a>  </p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22php%22%2C%22code%22%3A%22%3C%3Fphp%5Cnfunction%20main_handler(%24event%2C%20%24context)%20%7B%5Cn%20%20%20%20%2F%2F%20%E8%A7%A3%E6%9E%90%E8%AF%AD%E9%9B%80post%E7%9A%84%E6%95%B0%E6%8D%AE%5Cn%20%20%20%20%24update_title%20%3D%20''%3B%5Cn%20%20%20%20if(%24event-%3Ebody)%7B%5Cn%20%20%20%20%20%20%20%20%24yuque_data%3D%20json_decode(%24event-%3Ebody)%3B%5Cn%20%20%20%20%20%20%20%20%24update_title%20.%3D%20%24yuque_data-%3Edata-%3Etitle%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%2F%2F%20default%20params%5Cn%20%20%20%20%24repos%20%3D%20'xxxx'%3B%20%20%2F%2F%20%E4%BD%A0%E7%9A%84%E4%BB%93%E5%BA%93id%20%E6%88%96%20slug%5Cn%20%20%20%20%24token%20%3D%20'xxxxxx'%3B%20%2F%2F%20%E4%BD%A0%E7%9A%84%E7%99%BB%E5%BD%95token%5Cn%20%20%20%20%24message%20%3D%20date(%5C%22Y%2Fm%2Fd%5C%22).'%3Ayuque%20update%3A'.%24update_title%3B%5Cn%20%20%20%20%24branch%20%3D%20'master'%3B%5Cn%20%20%20%20%2F%2F%20post%20params%5Cn%20%20%20%20%24queryString%20%3D%20%24event-%3EqueryString%3B%5Cn%20%20%20%20%24q_token%20%3D%20%24queryString-%3Etoken%20%3F%20%24queryString-%3Etoken%20%3A%20%24token%3B%5Cn%20%20%20%20%24q_repos%20%3D%20%24queryString-%3Erepos%20%3F%20%24queryString-%3Erepos%20%3A%20%24repos%3B%5Cn%20%20%20%20%24q_message%20%3D%20%24queryString-%3Emessage%20%3F%20%24queryString-%3Emessage%20%3A%20%24message%3B%5Cn%20%20%20%20%24q_branch%20%3D%20%24queryString-%3Ebranch%20%3F%20%24queryString-%3Ebranch%20%3A%20'master'%3B%5Cn%20%20%20%20echo(%24q_token)%3B%5Cn%20%20%20%20echo('%3D%3D%3D')%3B%5Cn%20%20%20%20echo%20(%24q_repos)%3B%5Cn%20%20%20%20echo%20('%3D%3D%3D')%3B%5Cn%20%20%20%20echo%20(%24q_message)%3B%5Cn%20%20%20%20echo%20('%3D%3D%3D')%3B%5Cn%20%20%20%20echo%20(%24q_branch)%3B%5Cn%20%20%20%20echo%20('%3D%3D%3D')%3B%5Cn%20%20%20%20%2F%2Frequest%20travis%20ci%5Cn%20%20%20%20%24res_info%20%3D%20triggerTravisCI(%24q_repos%2C%20%24q_token%2C%20%24q_message%2C%20%24q_branch)%3B%5Cn%5Cn%20%20%20%20%24res_code%20%3D%200%3B%5Cn%20%20%20%20%24res_message%20%3D%20'%E6%9C%AA%E7%9F%A5'%3B%5Cn%20%20%20%20if(%24res_info%5B'http_code'%5D)%7B%5Cn%20%20%20%20%20%20%20%20%24res_code%20%3D%20%24res_info%5B'http_code'%5D%3B%5Cn%20%20%20%20%20%20%20%20switch(%24res_info%5B'http_code'%5D)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20case%20200%3A%5Cn%20%20%20%20%20%20%20%20%20%20%20%20case%20202%3A%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24res_message%20%3D%20'success'%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20default%3A%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24res_message%20%3D%20'faild'%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%24res%20%3D%20array(%5Cn%20%20%20%20%20%20%20%20'status'%3D%3E%24res_code%2C%5Cn%20%20%20%20%20%20%20%20'message'%3D%3E%24res_message%5Cn%20%20%20%20)%3B%5Cn%20%20%20%20return%20%24res%3B%5Cn%7D%5Cn%5Cn%2F*%5Cn*%20%40description%20%20travis%20api%20%2C%20trigger%20a%20build%5Cn*%20%40param%20%24repos%20string%20%E4%BB%93%E5%BA%93ID%E3%80%81slug%5Cn*%20%40param%20%24token%20string%20%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81token%5Cn*%20%40param%20%24message%20string%20%E8%A7%A6%E5%8F%91%E4%BF%A1%E6%81%AF%5Cn*%20%40param%20%24branch%20string%20%E5%88%86%E6%94%AF%5Cn*%20%40return%20%24info%20array%20%E5%9B%9E%E5%8C%85%E4%BF%A1%E6%81%AF%5Cn*%2F%5Cnfunction%20triggerTravisCI%20(%24repos%2C%20%24token%2C%20%24message%3D'yuque%20update'%2C%20%24branch%3D'master')%20%7B%5Cn%20%20%20%20%2F%2F%E5%88%9D%E5%A7%8B%E5%8C%96%5Cn%20%20%20%20%24curl%20%3D%20curl_init()%3B%5Cn%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AE%E6%8A%93%E5%8F%96%E7%9A%84url%5Cn%20%20%20%20curl_setopt(%24curl%2C%20CURLOPT_URL%2C%20'https%3A%2F%2Fapi.travis-ci.org%2Frepo%2F'.%24repos.'%2Frequests')%3B%5Cn%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AE%E8%8E%B7%E5%8F%96%E7%9A%84%E4%BF%A1%E6%81%AF%E4%BB%A5%E6%96%87%E4%BB%B6%E6%B5%81%E7%9A%84%E5%BD%A2%E5%BC%8F%E8%BF%94%E5%9B%9E%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%87%BA%E3%80%82%5Cn%20%20%20%20curl_setopt(%24curl%2C%20CURLOPT_RETURNTRANSFER%2C%201)%3B%5Cn%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AEpost%E6%96%B9%E5%BC%8F%E6%8F%90%E4%BA%A4%5Cn%20%20%20%20curl_setopt(%24curl%2C%20CURLOPT_CUSTOMREQUEST%2C%20%5C%22POST%5C%22)%3B%5Cn%20%20%20%20%2F%2F%E8%AE%BE%E7%BD%AEpost%E6%95%B0%E6%8D%AE%5Cn%20%20%20%20%24post_data%20%3D%20json_encode(array(%5Cn%20%20%20%20%20%20%20%20%5C%22request%5C%22%3D%3E%20array(%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22message%5C%22%3D%3E%24message%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5C%22branch%5C%22%3D%3E%24branch%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20))%3B%5Cn%20%20%20%20%24header%20%3D%20array(%5Cn%20%20%20%20%20%20'Content-Type%3A%20application%2Fjson'%2C%5Cn%20%20%20%20%20%20'Travis-API-Version%3A%203'%2C%5Cn%20%20%20%20%20%20'Authorization%3Atoken%20'.%24token%2C%5Cn%20%20%20%20%20%20'Content-Length%3A'%20.%20strlen(%24post_data)%5Cn%20%20%20%20)%3B%5Cn%20%20%20%20curl_setopt(%24curl%2C%20CURLOPT_HTTPHEADER%2C%20%24header)%3B%5Cn%20%20%20%20curl_setopt(%24curl%2C%20CURLOPT_POSTFIELDS%2C%20%24post_data)%3B%5Cn%20%20%20%20%2F%2F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%5Cn%20%20%20%20%24data%20%3D%20curl_exec(%24curl)%3B%5Cn%20%20%20%20%24info%20%3D%20curl_getinfo(%24curl)%3B%5Cn%20%20%20%20%2F%2F%E5%85%B3%E9%97%ADURL%E8%AF%B7%E6%B1%82%5Cn%20%20%20%20curl_close(%24curl)%3B%5Cn%20%20%20%20return%20%24info%3B%5Cn%7D%5Cn%3F%3E%22%2C%22id%22%3A%22iR0jT%22%7D\"></card><h3 id=\"b96d88cb\">查看repo的id和token</h3><ul><li>travis登录token，在travis-ci.org 中设置界面获取：</li></ul><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548581610483-75a884f9-2810-4176-b739-655c803c4121.png%22%2C%22originWidth%22%3A1236%2C%22originHeight%22%3A409%2C%22name%22%3A%22image.png%22%2C%22size%22%3A46342%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1236%2C%22height%22%3A409%7D\"></card></p><ul><li>获取travis的仓库ID</li></ul><p>在后台进入对应在仓库，travis会请求仓库地址，所以直接找到相似链接，链接路径名就仓库ID，路径像这个<span class=\"lake-fontsize-9\" style=\"color: #222222;\">https://api.travis-ci.org/repo/&lt;你的仓库ID&gt;</span></p><p><span>参考链接中说需要请求API，但是我操作了半天不知道为什么一直提示方法不可用，所以投机取巧找这个方法</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548585058267-ef4c79df-3e21-47df-b5d5-9c3166dd3774.png%22%2C%22originWidth%22%3A1146%2C%22originHeight%22%3A508%2C%22name%22%3A%22image.png%22%2C%22size%22%3A179654%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1146%2C%22height%22%3A508%7D\"></card></p><p><br /></p><h3 id=\"a2169335\">在语雀中新建知识库，然后设置开发者</h3><p>最好先看一下<a href=\"https://www.yuque.com/yuque/developer\" target=\"_blank\">语雀开发文档</a></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548581236420-c369b9fe-501f-4ede-bcc1-098d55efb2f0.png%22%2C%22originWidth%22%3A1148%2C%22originHeight%22%3A544%2C%22name%22%3A%22image.png%22%2C%22size%22%3A49627%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1148%2C%22height%22%3A544%7D\"></card></p><p><br /></p><p>其中“所有更新触发”是指，有文档新增或者变更时，自动触发，而“仅主动推送更新触发”是指在勾选“文档有较大更新时，推送给关注的人”时，才会触发Webhook，具体请看文档<a href=\"https://www.yuque.com/yuque/developer/doc-webhook#wooqpi\" target=\"_blank\">WebHook 说明</a></p><p>无服务函数（请到对应云平台去复制，并加入参数）示例：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22http%22%2C%22code%22%3A%22https%3A%2F%2Fservice-%3C%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%3E.ap-guangzhou.apigateway.myqcloud.com%2Frelease%2Fmain_handler%3Frepos%3D%3Cyour%20travis's%20repo%20ID%3E%26token%3D%3Cyour%20travis%20token%3E%26message%3D%E8%AF%AD%E9%9B%80%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%26branch%3Dblog%22%2C%22id%22%3A%22qlZ6a%22%7D\"></card><p><br /></p><p><br /></p><h2 id=\"8f1d0c76\">yuque-hexo开源项目用于同步语雀</h2><h3 id=\"b173dbb6\">需要在.travis.yml中配置如下，如果已经copy上文的配置，则无需再配置</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22script%3A%5Cn%20%20-%20yuque-hexo%20clean%5Cn%20%20-%20yuque-hexo%20sync%5Cn%20%20-%20hexo%20clean%5Cn%20%20-%20hexo%20generate%22%2C%22id%22%3A%22IXZJN%22%7D\"></card><h3 id=\"7dee264f\">配置package.json</h3><p>以下注释，一定要删除，json文件不能使用注释，这里只作说明，<a href=\"https://github.com/x-cold/yuque-hexo\" target=\"_blank\">开源项目地址</a></p><blockquote><p>login————这里是你语雀的个人主页链接的路径名，例如<a href=\"https://www.yuque.com/iszengmh/p\" target=\"_blank\">https://www.yuque.com/iszengmh/</a></p><p>repo<span style=\"color: #8C8C8C;\">————<span style=\"color: #8C8C8C;\">这里是你语雀的个人主页知识库的路径名，例如<a href=\"https://www.yuque.com/iszengmh/p\" target=\"_blank\">https://www.yuque.com/iszengmh/personalblog</a></span></span></p><p>mdNameFormat 生成的 Markdown 文件的文件名，可以选择 &quot;title&quot; 或者 &quot;slug&quot;，默认 &quot;title&quot;，slug 是语雀的永久链接名，一般是几个随机字母。</p><p>postPath 存放从语雀下载的 Markdown 文件的文件夹，除了 Hexo ，理论上可以支持其他支持 Front-matter 的 Markdown 静态博客</p></blockquote><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%20%20%2F%2F%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%E2%80%A6%5Cn%20%20%7D%2C%2F%2F%E6%B3%A8%E6%84%8F%E8%A1%A5%E4%B8%8A%E9%80%97%E5%8F%B7%E5%93%A6%EF%BC%8C%E4%B8%8D%E7%84%B6%E5%90%8E%E4%BC%9A%E6%8A%A5%E9%94%99%5Cn%20%20%5C%22yuqueConfig%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22baseUrl%5C%22%3A%20%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%5Cn%20%20%20%20%5C%22login%5C%22%3A%20%5C%22iszengmh%5C%22%2C%5Cn%20%20%20%20%5C%22repo%5C%22%3A%20%5C%22personalblog%5C%22%2C%5Cn%20%20%20%20%5C%22mdNameFormat%5C%22%3A%20%5C%22title%5C%22%2C%5Cn%20%20%20%20%5C%22postPath%5C%22%3A%20%5C%22source%2F_posts%2Fyuque%5C%22%5Cn%20%20%7D%2C%5Cn%20%20%5C%22scripts%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22clean%5C%22%3A%20%5C%22hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22clean%3Ayuque%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20clean%5C%22%2C%5Cn%20%20%20%20%5C%22deploy%5C%22%3A%20%5C%22hexo%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22publish%5C%22%3A%20%5C%22npm%20run%20clean%20%26%26%20npm%20run%20deploy%5C%22%2C%5Cn%20%20%20%20%5C%22dev%5C%22%3A%20%5C%22hexo%20s%5C%22%2C%5Cn%20%20%20%20%5C%22sync%5C%22%3A%20%5C%22DEBUG%3Dyuque-hexo.*%20yuque-hexo%20sync%5C%22%2C%5Cn%20%20%20%20%5C%22reset%5C%22%3A%20%5C%22npm%20run%20clean%3Ayuque%20%26%26%20npm%20run%20sync%5C%22%5Cn%20%20%7D%22%2C%22id%22%3A%22q4mtK%22%7D\"></card><p><br /></p><h3 id=\"b688a7aa\">将修改的文件全部提交github的blog分支</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20add%20.%5Cngit%20commmit%20-m%20%5C%22%E4%BF%AE%E6%94%B9%5C%22%5Cngit%20push%20-u%20origin%20blog%22%2C%22id%22%3A%22dYu4j%22%7D\"></card><p><br /></p><p>由于travis自动构建会自动发布到github的master分支</p><h2 id=\"eaf5275a\">手动触发自动构建</h2><p>由于我的语雀配置没有自动触发travis更新，所以我自己去travis后台点击“restart build”可以同步并自动构建，这样也是可以的，本篇文章就是这样同步过去的</p><h2 id=\"d291dcca\">语雀编写hexo的front-matter</h2><h3 id=\"c902bb32\">分类和标签，这样写</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22tags%3A%20%5B%E8%AF%AD%E9%9B%80%2Ctravis%2Cserverless%5D%5Cncategories%3A%20%E8%AF%AD%E9%9B%80%5Cn---%22%2C%22id%22%3A%22pMOHB%22%7D\"></card><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548591626703-f9f13701-5638-41c0-9b62-58838d3e7b9b.png%22%2C%22originWidth%22%3A751%2C%22originHeight%22%3A310%2C%22name%22%3A%22image.png%22%2C%22size%22%3A33911%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A751%2C%22height%22%3A310%7D\"></card></p><h3 id=\"b18e6125\">隐藏文章内容</h3><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%3C!--more--%3E%22%2C%22id%22%3A%2269Cig%22%7D\"></card><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F244275%2F1548591735536-f1fb4021-44fa-4cc0-80c6-4758718b2fd7.png%22%2C%22originWidth%22%3A813%2C%22originHeight%22%3A436%2C%22name%22%3A%22image.png%22%2C%22size%22%3A68156%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A813%2C%22height%22%3A436%7D\"></card></p><p><br /></p><h2 id=\"0d881386\">以上就是全部配置，如果你语雀可以触发webhook，请告诉怎么搞，搞死人</h2>",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-06-15T10:52:40.000Z",
    "deleted_at": null,
    "created_at": "2019-01-27T06:02:59.000Z",
    "updated_at": "2019-06-15T10:52:40.000Z",
    "published_at": "2019-06-15T10:40:27.000Z",
    "first_published_at": "2019-01-27T10:52:08.000Z",
    "word_count": 2458,
    "cover": null,
    "description": "tags: [语雀,travis,serverless]categories: 语雀参考链接Hexo 博客终极玩法：云端写作，自动部署——segmentFault@Nero  如何在github上创建个人博客——图片链接失效了，我后面会再更新  手把手教你使用Travis CI自动部署你的He...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1191146,
    "slug": "vgxf01",
    "title": "语雀之Hello World",
    "book_id": 211213,
    "book": {
      "id": 211213,
      "type": "Book",
      "slug": "personalblog",
      "name": "个人主页",
      "user_id": 244275,
      "description": "github个人主页",
      "creator_id": 244275,
      "public": 1,
      "items_count": 31,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-07-13T14:16:51.238Z",
      "updated_at": "2019-07-13T14:16:51.000Z",
      "created_at": "2019-01-26T10:13:43.000Z",
      "namespace": "iszengmh/personalblog",
      "user": {
        "id": 244275,
        "type": "User",
        "login": "iszengmh",
        "name": "iszengmh",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 4,
        "following_count": 0,
        "created_at": "2019-01-12T16:58:39.000Z",
        "updated_at": "2019-05-31T01:53:54.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 244275,
    "creator": {
      "id": 244275,
      "type": "User",
      "login": "iszengmh",
      "name": "iszengmh",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/244275/1548556647503-avatar/3c44aa62-9cfe-4d52-8346-b61ceb9cce6a.png?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 4,
      "following_count": 0,
      "created_at": "2019-01-12T16:58:39.000Z",
      "updated_at": "2019-05-31T01:53:54.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "---\n\n<a name=\"c36ff178\"></a>\n## 语雀之Hello World\n\ntest\n",
    "body_draft": "",
    "body_html": "<hr /><h2 id=\"c36ff178\">语雀之Hello World</h2><p><br /></p><p>test</p>",
    "body_lake": "<!doctype lake><card type=\"block\" name=\"hr\"></card><h2 id=\"c36ff178\">语雀之Hello World</h2><p><br /></p><p>test<cursor /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-01-27T05:47:52.000Z",
    "deleted_at": null,
    "created_at": "2019-01-26T15:33:10.000Z",
    "updated_at": "2019-01-27T05:48:01.000Z",
    "published_at": "2019-01-27T05:48:01.000Z",
    "first_published_at": "2019-01-26T15:39:23.000Z",
    "word_count": 6,
    "cover": null,
    "description": "语雀之Hello Worldtest",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  }
]